./ ADD NAME=$ABEND   0105-21069-21304-1647-00037-00037-00003-BENMAR  44
.*/*******************************************************************/
.*/*                                                                 */
.*/* Nname $ABEND                                                    */
.*/*                                                                 */
.*/* Description: ABEND macro                                        */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $ABEND &CODE,&RSN=,&EVT=R11
         AIF   ('&CODE' EQ '').ERR01
         AIF   ('&RSN' EQ '').NORSN
         L     R3,&RSN                      .RSN code
.NORSN   ANOP  ,
         L     R1,EVT&CODE-EVT(,&EVT)       .ABEND code
         ABEND (1),DUMP,REASON=(3)          .ABEND reason          @02C
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $ABEND - Invalid ABEND code specified'
         MEXIT ,
         MEND
./ ADD NAME=$AUTH    0117-21069-21304-1647-00076-00046-00058-BENMAR  51
.*/*******************************************************************/
.*/*                                                                 */
.*/* Nname $AUTH                                                     */
.*/*                                                                 */
.*/* Description: Set/Reset Authorization                            */
.*/*                                                                 */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/* Notes: Coding Examples:                                         */
.*/*                                                                 */
.*/*        Example 1. Set JSCBAUTH bit on to allow MODESET          */
.*/*                   to be issued.                                 */
.*/*                                                                 */
.*/*                   $AUTH ON                                      */
.*/*                                                                 */
.*/*        Example 2. Set JSCBAUTH bit off to disallow MODESET      */
.*/*                   to be issued.                                 */
.*/*                                                                 */
.*/*                   $AUTH OFF                                     */
.*/*                                                                 */
.*/*        Example 3. Set RB PSW to key=0, Supervisor state.        */
.*/*                                                                 */
.*/*                   $AUTH SUP                                     */
.*/*                                                                 */
.*/*        Example 4. Set RB PSW to key=8, Problem state.           */
.*/*                                                                 */
.*/*                   $AUTH PROB                                    */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03172021 | Ben Marino  | zOS serviceability support   *
.* @03 | V2R3 | 07252021 | Ben Marino  | Added IEARBUP call support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $AUTH &ID,&SVC=NTPSVCA
         AIF   ('&ID' EQ 'ON').AUTHON
         AIF   ('&ID' EQ 'OFF').AUTHOFF
         AIF   ('&ID' EQ 'SUP').SUPON
         AIF   ('&ID' EQ 'PROB').PROBON
         AGO   .ERR01
.*
.AUTHON  ANOP  ,
         LA    R0,1                    .authorize request
         AGO   .AUTH99
.*
.AUTHOFF ANOP  ,
         LA    R0,2                    .unauthorize request
         AGO   .AUTH99
.*
.SUPON   ANOP  ,
         LA    R0,3                    .authorize request          @03A
         AGO   .AUTH99
.*
.PROBON  ANOP  ,
         LA    R0,4                    .unauthorize request        @03A
.*
.AUTH99  ANOP  ,
         LA    R15,$AUTH               .FCID                       @03A
         L     R14,&SVC                .SVC number address         @03A
         BR    R14                     .process auth request       @03A
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $AUTH - Invalid authorization ID specified'
         MEXIT ,
.ERR02   MNOTE 8,'*** $AUTH - Invalid SVC operand specified'
         MEXIT ,
         MEND
./ ADD NAME=$CALL    0102-21069-21304-1647-00105-00105-00002-BENMAR  55
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $CALL                                                     */
.*/*                                                                 */
.*/* Description: Subroutine call macro                              */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
         $CALL &SUB,                                                   +
               &SR=,                                                   +
               &VR=,                                                   +
               &PARM=,                                                 +
               &PARMPTR=,                                              +
               &KEY=,                                                  +
               &MYKEY=
.*
         LCLC  &ZCALL
&ZCALL   SETC  'ZGO'.'&SYSNDX'
.*
         B     &ZCALL                 .branch
         AIF   ('&SR' EQ '').ZSUB0
         DC    CL8'&SR'               .ID call location
         AGO   .ZSUB2
.*
.ZSUB0   ANOP  ,
         AIF   ('&VR' EQ '').ZSUB1
         DC    CL8'&VR'               .ID call location
         AGO   .ZSUB2
.*
.ZSUB1   ANOP  ,
         AIF   ('&SUB' EQ '').ERR01
         DC    CL8'&SUB'              .ID call location
.*
.ZSUB2   ANOP  ,
&ZCALL   DS    0H                     .
         AIF   ('&PARM' EQ '').ZGOPT
         AIF   ('&PARM'(1,1) EQ '(').ZGO00
         L     R1,&PARM               .set parm reg
         AGO   .ZCALL
.*
.ZGO00   ANOP  ,
         LR    R1,&PARM               .set parm reg
         AGO   .ZCALL
         MEXIT ,
.*
.ZGOPT   ANOP  ,
         AIF   ('&PARMPTR' EQ '').ZCALL
         AIF   ('&PARMPTR'(1,1) EQ '(').ZGO10
         LA    R1,&PARMPTR            .set parm ptr reg
         AGO   .ZCALL
.*
.ZGO10   ANOP  ,
         LA    R1,0(,&PARMPTR)        .set parm ptr reg
.*
.ZCALL   ANOP  ,
         AIF   ('&SR' EQ '').ZGO20
         L     R15,=V(&SR)            .service routine EPA
         AGO   .ZGO30
.*
.ZGO20   ANOP  ,
         AIF   ('&VR' NE '').ZGO25
         L     R15,=A(&SUB)           .subroutine EPA
         AGO   .ZGO30
.*
.ZGO25   ANOP  ,
         L     R15,&VR                .service routine EPA
.*
.ZGO30   ANOP  ,
         AIF   ('&KEY' EQ '').ZGO50
         AIF   ('&KEY'(1,1) EQ '(').ZGO40
         L     R14,&KEY               .load protect key
         SPKA  0(R14)                 .set protect key
         AGO   .ZGO50
.*
.ZGO40   ANOP  ,
         SPKA  0(&KEY)                .set protect key
.*
.ZGO50   ANOP  ,
         BALR  R14,R15                .call subroutine
         AIF   ('&KEY' EQ '').ZGO99
         L     R14,&MYKEY             .load my protect key
         SPKA  0(R14)                 .restore protect key
.*
.ZGO99   ANOP  ,
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $CALL - Invalid call operand supplied'
         MEXIT ,
         MEND
./ ADD NAME=$CMDCALL 0103-21069-21304-1648-00096-00096-00003-BENMAR  01
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $CMDCALL                                                  */
.*/*                                                                 */
.*/* Function: Subsystem command table entry                         */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $CMDCALL &TYPE=,                                              +
               &EP=,                                                   +
               &EXEC=,                                                 +
               &CMD=,                                                  +
               &LEN=,                                                  +
               &DSECT=NO
.*
         AIF   ('&DSECT' EQ 'YES').LIST
         AIF   ('&DSECT' NE 'NO').ERR00
         AIF   ('&TYPE' EQ 'INITIAL').INIT
         AIF   ('&TYPE' EQ 'FINAL').FINI
         AIF   ('&TYPE' EQ 'ENTRY').ENTRY
         AGO   .ERR01
.*
.**      TYPE=INITIAL
.*
.INIT    ANOP  ,
         DS    0F                    .initial table entry
         MEXIT ,
.*
.**      TYPE=ENTRY
.*
.ENTRY   ANOP  ,
         DS    0F
         AIF   ('&EP' EQ '').ERR01
         DC    A(&EP)                .EPA
         AIF   ('&EXEC' EQ 'LOCAL').CMD000
         AIF   ('&EXEC' NE 'SUBSYS').ERR02
         DC    XL1'80'               .EXEC in subsys addrspc
         AGO   .CMD005
.CMD000  ANOP  ,
         DC    XL1'40'               .EXEC in current addrspc
.CMD005  ANOP  ,
         DC    XL1'00'               .-available
         AIF   ('&LEN' EQ '').ERR03
         DC    AL2(&LEN)             .command verb size
         AIF   ('&CMD' EQ '').ERR04
         DC    &CMD                  .command name
         MEXIT ,
.*
.**      TYPE=FINAL
.*
.FINI    ANOP  ,
         DS    0F                    .
         DC    XL4'FFFFFFFF'         .final table entry
         MEXIT ,
.*
.**      DSECT=YES
.*
.LIST    ANOP  ,
CMDE     DSECT ,
CMDEPA   DS    A                     .EPA
CMDFLG1  DS    XL1                   .flags
CMD@SUB  EQU   X'80'                 .run in subsys addrspc
CMD@CUR  EQU   X'40'                 .run in current addrspc
CMDRSVR1 DS    XL1                   .-available
CMDSIZE  DS    AL2                   .command verb length
CMDNAME  DS    CL24                  .command verb name
CMD@SIZE EQU   *-CMDE                .entry size
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR00   MNOTE 8,'*** $CMDCALL invalid DSECT operand specified'
         MEXIT ,
.ERR01   MNOTE 8,'*** $CMDCALL invalid EP operand specified'
         MEXIT ,
.ERR02   MNOTE 8,'*** $CMDCALL invalid EXEC operand specified'
         MEXIT ,
.ERR03   MNOTE 8,'*** $CMDCALL invalid SIZE operand specified'
         MEXIT ,
.ERR04   MNOTE 8,'*** $CMDCALL invalid CMD operand specified'
         MEXIT ,
         MEND
./ ADD NAME=$CNVD    0102-21069-21304-1648-00026-00026-00002-BENMAR  05
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $CNVD                                                     */
.*/*                                                                 */
.*/* Function: Convert data to decimal macro                         */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&LABEL   $CNVD &TARGET,&SOURCE,&WRKREG=R15,&DWORD=DSADWRD
&LABEL   L     &WRKREG,&SOURCE         .get data value
         CVD   &WRKREG,&DWORD          .convert to decimal
         OI    &DWORD+7,X'0F'          .fix sign
         UNPK  &TARGET,&DWORD          .unpck it
         MEND
./ ADD NAME=$CNVX    0101-21069-21087-0902-00027-00027-00001-BENMAR  59
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $CNVX                                                     */
.*/*                                                                 */
.*/* Function: Convert data to hexadecimal macro                     */
.*/*                                                                 */
.*/* Copyright: None                                                 */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Unknown     | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&LABEL   $CNVX &TARGET,&SOURCE,&TR=EVT$CNVX
&LABEL   UNPK  &TARGET.(L'&TARGET-1),&SOURCE
         MVC   &TARGET+L'&TARGET-1(1),&SOURCE+L'&SOURCE-1
         NI    &TARGET,X'0F'
         MVZ   &TARGET+1(L'&TARGET-1),&TARGET
         TR    &TARGET,&TR
         MEND
./ ADD NAME=$CPOOL   0102-21069-21304-1648-00327-00327-00002-BENMAR  17
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $CPOOL                                                    */
.*/*                                                                 */
.*/* Description: Cell Pool management macro                         */
.*/*                                                                 */
.*/* Nnotes Macro does not support MF=I requests.                    */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $CPOOL &TYPE,                 {BUILD|DELETE|GET|FREE}         +
               &EP=EVTCPLA,            service routine EPA             +
               &CPID=,                 cell pool ID                    +
               &CSIZE=,                cell element size               +
               &CELL=,                 cell element                    +
               &CELLS=,                number of cells                 +
               &XTNT=,                 number of extents               +
               &HDR=,                  cell pool header                +
               &SP=,                   subpool                         +
               &KEY=,                  storage key                     +
               &MODE=UNCOND,           MODE={COND|UNCOND}              +
               &MF=                    macro fromat
.*
         LCLC  &CPL
&CPL     SETC  'CPL'.'&SYSNDX'
.*
         AIF   ('&MF' EQ 'L').LIST
         AIF   ('&TYPE' EQ 'BUILD').BUILD
         AIF   ('&TYPE' EQ 'DELETE').DELETE
         AIF   ('&TYPE' EQ 'GET').GET
         AIF   ('&TYPE' EQ 'FREE').FREE
         AGO   .ERR01
.*
.**      BUILD MODE=(),
.**            CPID=(),CELLS=(),CSIZE=(),SP=(),KEY=(),HDR=(),MF=()
.*
.BUILD   ANOP  ,
         AIF   ('&MF(2)'(1,1) EQ '(').BLD000
         LA    R1,&MF(2)               .MF=L address
         AGO   .BLD005
.BLD000  ANOP  ,
         LR    R1,&MF(2)               .MF=L address
.*
.BLD005  ANOP  ,
         AIF   ('&CPID' EQ '').ERR02
         AIF   ('&CPID'(1,1) EQ '(').BLD010
         LA    R0,&CPID                .CPID
         ST    R0,0(,R1)               .store CPID address in list
         AGO   .BLD015
.*
.BLD010  ANOP  ,
         ST    &CPID,0(,R1)            .store CPID address in list
.*
.BLD015  ANOP  ,
         AIF   ('&CELLS' EQ '').ERR04
         AIF   ('&CELLS'(1,1) EQ '(').BLD020
         AIF   (T'&CELLS NE 'N').BLD016
         LA    R0,&CELLS               .CELLS
         ST    R0,4(,R1)               .store CELLS count in list
         AGO   .BLD025
.*
.BLD016  ANOP  ,
         L     R0,&CELLS               .CELLS
         ST    R0,4(,R1)               .store CELLS count in list
         AGO   .BLD025
.*
.BLD020  ANOP  ,
         ST    &CELLS,4(,R1)           .store CELLS count in list
.*
.BLD025  ANOP  ,
         AIF   ('&CSIZE' EQ '').ERR05
         AIF   ('&CSIZE'(1,1) EQ '(').BLD030
         AIF   (T'&CSIZE NE 'N').BLD026
         LA    R0,&CSIZE               .CSIZE
         ST    R0,8(,R1)               .store CSIZE value in list
         AGO   .BLD035
.*
.BLD026  ANOP  ,
         L     R0,&CSIZE               .CSIZE
         ST    R0,8(,R1)               .store CSIZE value in list
         AGO   .BLD035
.*
.BLD030  ANOP  ,
         ST    &CSIZE,8(,R1)           .store CSIZE value in list
.*
.BLD035  ANOP  ,
         AIF   ('&SP' EQ '').BLD040
         AIF   ('&SP'(1,1) EQ '(').BLD045
         AIF   (T'&SP NE 'N').BLD036
         AIF   ('&SP' GT '255').ERR06
         LA    R0,&SP                  .SP
         ST    R0,12(,R1)              .store SP number in list
         AGO   .BLD050
.*
.BLD036  ANOP  ,
         L     R0,&SP                  .SP
         ST    R0,12(,R1)              .store SP number in list
         AGO   .BLD050
.*
.BLD040  ANOP  ,
         LA    R0,0                    .SP=0 default
         ST    R0,12(,R1)              .store SP number in list
         AGO   .BLD050
.*
.BLD045  ANOP  ,
         ST    &SP,12(,R1)             .store SP number in list
.*
.BLD050  ANOP  ,
         AIF   ('&XTNT' EQ '').BLD065
         AIF   ('&XTNT'(1,1) EQ '(').BLD060
         AIF   (T'&XTNT NE 'N').BLD055
         LA    R0,&XTNT                .XTNT
         ST    R0,16(,R1)              .store XTNT count in list
         AGO   .BLD070
.*
.BLD055  ANOP  ,
         L     R0,&XTNT                .XTNT
         ST    R0,16(,R1)              .store XTNT count in list
         AGO   .BLD070
.*
.BLD060  ANOP  ,
         ST    &XTNT,16(,R1)           .store XTNT count in list
         AGO   .BLD070
.*
.BLD065  ANOP  ,
         LA    R0,0                    .XTNT default
         ST    R0,16(,R1)              .store XTNT default in list
.*
.BLD070  ANOP  ,
         AIF   ('&KEY' EQ '').ERR14
         AIF   ('&KEY'(1,1) EQ '(').BLD073
         AIF   (T'&KEY NE 'N').BLD072
         LA    R0,&KEY                 .storage key
         ST    R0,20(,R1)              .store storage key in list
         AGO   .BLD074
*
.BLD072  ANOP  ,
         L     R0,&KEY
         ST    R0,20(,R1)              .store storage key in list
         AGO   .BLD074
.*
.BLD073  ANOP  ,
         ST    &KEY,20(,R1)            .store storage key in lisy
.*
.BLD074  ANOP  ,
         AIF   ('&HDR' EQ '').ERR08
         AIF   ('&HDR'(1,1) EQ '(').BLD075
         MVC   24(24,R1),&HDR          .copy HDR
         AGO   .BLD080
.*
.BLD075  ANOP  ,
         MVC   24(24,R1),0(&HDR)       .copy HDR name in list
.*
.BLD080  ANOP  ,
         AIF   ('&MODE' EQ 'UNCOND').BLD085
         AIF   ('&MODE' NE 'COND').ERR09
         LA    R0,64                   .MODE=COND
         AGO   .BLD090
.*
.BLD085  ANOP  ,
         LA    R0,128                  .MODE=UNCOND
.BLD090  ANOP  ,
         AIF   ('&EP' EQ 'ECFCPL').BLD099
         L     R15,&EP                 .service routine EPA
         BALR  R14,R15                 .build cell pool
         MEXIT ,
.*
.BLD099  ANOP  ,
         L     R15,=V(&EP)             .service routine EPA
         BALR  R14,R15                 .build cell pool
         MEXIT ,
.*
.**      DELETE,CPID=(),MODE=()
.*
.DELETE  ANOP  ,
         AIF   ('&CPID' EQ '').ERR02
         AIF   ('&CPID'(1,1) EQ '(').DEL000
         LA    R1,&CPID                .CPID address
         AGO   .DEL005
.*
.DEL000  ANOP  ,
         LR    R1,&CPID                .CPID address
.*
.DEL005  ANOP  ,
         AIF   ('&MODE' EQ 'UNCOND').DEL010
         AIF   ('&MODE' NE 'COND').ERR09
         LA    R0,256                  .MODE=COND
         AGO   .DEL015
.*
.DEL010  ANOP  ,
         LA    R0,512                  .MODE=UNCOND
.*
.DEL015  ANOP  ,
         AIF   ('&EP' EQ 'ECFCPL').DEL099
         L     R15,&EP                 .service routine EPA
         BALR  R14,R15                 .delete cell pool
         MEXIT ,
.*
.DEL099  ANOP  ,
         L     R15,=V(&EP)             .service routine EPA
         BALR  R14,R15                 .delete cell pool
         MEXIT ,
.*
.**      GET,CPID=(),CELL=(),MODE=()
.*
.GET     ANOP  ,
         AIF   ('&CPID' EQ '').ERR02
         AIF   ('&CPID'(1,1) EQ '(').GET000
         LA    R1,&CPID                .CPID address
         AGO   .GET005
.*
.GET000  ANOP  ,
         LR    R1,&CPID                .CPID address
.*
.GET005  ANOP  ,
         AIF   ('&CELL' EQ '').ERR11
         AIF   ('&CELL'(1,1) EQ '(').GET010
         LA    R0,&CELL                .CELL address
         AGO   .GET015
.*
.GET010  ANOP  ,
         LR    R0,&CELL                .CELL address
.*
.GET015  ANOP  ,
         AIF   ('&MODE' EQ 'UNCOND').GET020
         AIF   ('&MODE' NE 'COND').ERR09
         LNR   R0,R0                   .MODE=COND
.*
.GET020  ANOP  ,
         AIF   ('&EP' EQ 'ECFCPL').GET099
         L     R15,&EP                 .service routine EPA
         BALR  R14,R15                 .obtain cell
         MEXIT ,
.*
.GET099  ANOP  ,
         L     R15,=V(&EP)             .service routine EPA
         BALR  R14,R15                 .obtain cell
         MEXIT ,
.*
.**      FREE,CPID=(),CELL=()
.*
.FREE    ANOP  ,
         AIF   ('&CPID' EQ '').ERR02
         AIF   ('&CPID'(1,1) EQ '(').FRE000
         LA    R1,&CPID                .CPID address
         LNR   R1,R1                   .free request
         AGO   .FRE005
.*
.FRE000  ANOP  ,
         LR    R1,&CPID                .CPID address
         LNR   R1,R1                   .free requesr
.*
.FRE005  ANOP  ,
         AIF   ('&CELL' EQ '').ERR11
         AIF   ('&CELL'(1,1) EQ '(').FRE010
         LA    R0,&CELL                .CELL address
         AGO   .FRE015
.*
.FRE010  ANOP  ,
         LR    R0,&CELL                .CELL address
.*
.FRE015  ANOP  ,
         AIF   ('&EP' EQ 'ECFCPL').FRE099
         L     R15,&EP                 .service routine EPA
         BALR  R14,R15                 .free cell
         MEXIT ,
.*
.FRE099  ANOP  ,
         L     R15,=V(&EP)             .service routine EPA
         BALR  R14,R15                 .free cell
         MEXIT ,
.*
.**      MF=L
.*
.LIST    ANOP  ,
&ZID     DS    0F
         DS    0XL48            .listform
         DC    A(0)             .CPID
         DC    AL4(0)           .CELLS
         DC    AL4(0)           .CSIZE
         DC    AL4(0)           .SP
         DC    AL4(0)           .XTNT
         DC    AL4(0)           .KEY
         DC    CL24' '          .HDR
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $CPOOL - Invalid cell pool request specified'
         MEXIT ,
.ERR02   MNOTE 8,'*** $CPOOL - Invalid CPID operand specified'
         MEXIT ,
.ERR03   MNOTE 8,'*** $CPOOL - Invalid MF operand specified'
         MEXIT ,
.ERR04   MNOTE 8,'*** $CPOOL - Invalid CELLS operand specified'
         MEXIT ,
.ERR05   MNOTE 8,'*** $CPOOL - Invalid CSIZE operand specified'
         MEXIT ,
.ERR06   MNOTE 8,'*** $CPOOL - Invalid SP number specified'
         MEXIT ,
.ERR07   MNOTE 8,'*** $CPOOL - Invalid SP operand specified'
         MEXIT ,
.ERR08   MNOTE 8,'*** $CPOOL - Invalid HDR operand specified'
         MEXIT ,
.ERR09   MNOTE 8,'*** $CPOOL - Invalid MODE operand specified'
         MEXIT ,
.ERR10   MNOTE 8,'*** $CPOOL - MODE is invalid with BUILD request'
         MEXIT ,
.ERR11   MNOTE 8,'*** $CPOOL - Invalid CELL operand specified'
         MEXIT ,
.ERR12   MNOTE 8,'*** $CPOOL - Invalid EP operand specified'
         MEXIT ,
.ERR14   MNOTE 8,'*** $CPOOL - Invalid KEY operand specified'
         MEXIT ,
         MEND
./ ADD NAME=$CS      0101-21105-21304-1648-00035-00035-00001-BENMAR  21
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $CS                                                       */
.*/*                                                                 */
.*/* Description: Compare and swap macro                             */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V1R1 | 04142021 | Ben Marino  | Serviceability enhancements  *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $CS   &OPER1,&OPER2,&OPER3,&WRKREG=R15                    @02C
.*
         LCLC  &ZCS
&ZCS     SETC  'ZCS'.'&SYSNDX'
.*
         SPKA  0(0)                    .supervisor key
&ZCS     DS    0H
         CS    &OPER1,&OPER2,&OPER3    .lock available?
         BNE   &ZCS                    .no, try again
         L     &WRKREG,STKSTKEC        .current STKE entry         @02A
         L     &WRKREG,STKEKEY-STKE(,&WRKREG)  .get my key         @02C
         SPKA  0(&WRKREG)              .restore my key
         MEND
./ ADD NAME=$DBUG    0109-21295-21305-0758-00039-00037-00006-BENMAR  03
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $DBUG                                                     */
.*/*                                                                 */
.*/* Description: Debug services macro                               */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/* $DBUG 35,20,S1                                                  */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V2R3 | 10232021 | Ben Marino  | Initial version              *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&LABEL   $DBUG &ZLOC,&ZID
.*
         LCLC  &ZDEBUG
&ZDEBUG  SETC  'ZBG'.'&SYSNDX'
.*
         AIF   ('&ZID' EQ '').ERR01
         AIF   ('&ZLOC' EQ '').ERR01
.*
         MVC   EVTCDATA+&ZLOC.(2),=CL2'&ZID'
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $DBUG - Invalid operand specified'
         MEND
./ ADD NAME=$DELETE  0103-21069-21304-1648-00052-00042-00024-BENMAR  28
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: DELETE                                                    */
.*/*                                                                 */
.*/* Description: DELETE load module from CSA                        */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
         $DELETE &LMOD=,&FROM=                                     @02C
.*
         AIF   ('&LMOD' EQ '').ERR01
         AIF   ('&LMOD'(1,1) EQ '(').LMOD00
         LA    R1,&LMOD                .LMOD name address
         AGO   .LMOD10
.*
.LMOD00  ANOP  ,
         LR    R1,&LMOD                .LMOD name address
.*
.LMOD10  ANOP  ,                                                   @02C
         AIF   ('&FROM' EQ 'LPA').LMOD20                           @02A
         AIF   ('&FROM' NE 'CSA').ERR02                            @02A
         LA    R0,8                    .FROM=CSA delete request
         AGO   .LMOD99                                             @02A
.*
.LMOD20  ANOP  ,                                                   @02C
         LA    R0,16                   .FROM=LPA delete request
.*
.LMOD99  ANOP  ,                                                   @02A
         L     R15,STKCSAA             .service EPA
         BALR  R14,R15                 .call service routine
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $DELETE - Invalid LMOD operand specified'
         MEXIT ,
.ERR02   MNOTE 8,'*** $DELETE - Invalid FROM operand specified'
         MEND
./ ADD NAME=$DYNLPA  0130-21234-21304-1648-00186-00061-00158-BENMAR  32
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $DYNLPA                                                   */
.*/*                                                                 */
.*/* Description: Load/Delete load module into/from Dynamic-LPA      */
.*/*                                                                 */
.*/* Add Example with default STEPLIB DDname:                        */
.*/*                                                                 */
.*/*      $DYNLPA ADD,                                               */
.*/*              MOD=MYMOD,MF=(E,LIST)                              */
.*/*                                                                 */
.*/* Add Example with specified DDname:                              */
.*/*                                                                 */
.*/*      $DYNLPA ADD,                                               */
.*/*              MOD=MYMOD,DDNAME=MYDDN,MF=(E,LIST)                 */
.*/*                                                                 */
.*/* Delete by Token Example:                                        */
.*/*                                                                 */
.*/*      $DYNLPA DELETE,                                            */
.*/*              MOD=MYMOD,TYPE=TOKEN,TOKEN=MYTOKEN,MF=(E,LIST)     */
.*/*                                                                 */
.*/* Delete current module instance example:                         */
.*/*                                                                 */
.*/*      $DYNLPA DELETE,                                            */
.*/*              MOD=MYMOD,TYPE=CURRENT,MF=(E,LIST)                 */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V2R3 | 08232021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
         $DYNLPA &REQ,                                                 +
               &MF=,                                                   +
               &PC=,                                                   +
               &MOD=,                                                  +
               &ADDR=,                                                 +
               &TYPE=,                                                 +
               &TOKEN=,                                                +
               &LENGTH=,                                               +
               &DDNAME=,                                               +
               &PGFIX=NO,                                              +
               &OWNER=HOME
.*
         LCLC  &ZDY
&ZDY     SETC  'ZDY'.'&SYSNDX'
         AIF   ('&MF' EQ 'L').LIST
         AIF   ('&MF(2)'(1,1) EQ '(').DYN000
         LA    R1,&MF(2)
         AGO   .DYN005
.*
.DYN000  ANOP  ,
         LR    R1,&MF(2)
.*
.DYN005  ANOP  ,
         XC    0(DYN@SZE,R1),0(R1)            .clear listform
         MVC   DYNID-DYN(4,R1),=CL4'DYN'      .ID
.*
         AIF   ('&REQ' EQ 'ADD').ADD
         AIF   ('&REQ' EQ 'DELETE').DELETE
         AGO   .ERR02
.*
.**      Dynamic-LPA ADD Expansion
.*
.ADD     ANOP  ,
         MVI   DYNREQ-DYN(R1),DYN@ADD         .ADD request
         AIF   ('&TOKEN' NE '').ERR07
         AIF   ('&TYPE' NE '').ERR08
         AIF   ('&MOD' EQ '').ERR01
         AIF   ('&MOD'(1,1) EQ '(').ADD010
         MVC   DYNMOD-DYN(8,R1),&MOD          .init module name
         AGO   .ADD020
.*
.ADD010  ANOP  ,
         MVC   DYNMOD-DYN(8,R1),0(&MOD)       .init module name
.*
.ADD020  ANOP  ,
         AIF   ('&PGFIX' EQ 'NO').ADD025
         AIF   ('&PGFIX' NE 'YES').ERR06
         MVI   DYNPAGE-DYN(R1),DYN@PGFX       .page fix module
.*
.ADD025  ANOP  ,
         AIF   ('&OWNER' NE 'SYSTEM').ADD030
         MVI   DYNOWNR-DYN(R1),DYN@SYS        .OWNER=SYSTEM
         AGO   .ADD035
.*
.ADD030  ANOP  ,
         AIF   ('&OWNER' NE 'HOME').ERR11
         MVI   DYNOWNR-DYN(R1),DYN@HOME       .OWNER=HOME
.*
.ADD035  ANOP  ,
         AIF   ('&DDNAME' EQ '').ADD050
         AIF   ('&DDNAME'(1,1) EQ '(').ADD040
         MVC   DYNDDN-DYN(8,R1),&DDNAME       .init DDname
         AGO   .DYNXPC
.*
.ADD040  ANOP  ,
         MVC   DYNDDN-DYN(8,R1),0(&DDNAME)    .init DDname
         AGO   .DYNXPC
.*
.ADD050  ANOP  ,
         MVC   DYNDDN-DYN(8,R1),=CL8'STEPLIB' .default DDname
         AGO   .DYNXPC
.*
.**      Dynamic-LPA DELETE Expansion
.*
.DELETE  ANOP  ,
         AIF   ('&DDNAME' NE '').ERR10
         AIF   ('&MOD' EQ '').ERR01
         AIF   ('&MOD'(1,1) EQ '(').DELT10
         MVC   DYNMOD-DYN(8,R1),&MOD          .init module name
         AGO   .DELT20
.*
.DELT10  ANOP  ,
         MVC   DYNMOD-DYN(8,R1),0(&MOD)       .init module name
.*
.DELT20  ANOP  ,
         AIF   ('&TYPE' EQ 'TOKEN').DELT30
         AIF   ('&TYPE' NE 'CURRENT').ERR0A
         MVI   DYNREQ-DYN(R1),DYN@CUR         .DELETE current instance
         AGO   .DYNXPC
.*
.DELT30  ANOP  ,
         AIF   ('&TOKEN' EQ '').ERR05
         MVI   DYNREQ-DYN(R1),DYN@TKN         .DELETE by token
         AIF   ('&TOKEN'(1,1) EQ '(').DELT40
         MVC   DYNTOKEN-DYN(8,R1),&TOKEN      .init token
         AGO   .DYNXPC
.*
.DELT40  ANOP  ,
         MVC   DYNTOKEN-DYN(8,R1),0(&TOKEN)   .init token
.*
.**      Invoke PC service routine
.*
.DYNXPC  ANOP  ,
         AIF   ('&PC' EQ '').ERR03
         LA    R15,$DYNLPA                    .PCID
         AIF   ('&PC'(1,1) EQ '(').DYNX10
         L     R14,&PC                        .ECFXPC router
         AGO   .DYNX99
.*
.DYNX10  ANOP  ,
         LR    R14,&PC                        .ECFXPC router
.*
.DYNX99  ANOP  ,
         PC    0(R14)                         .call PC routine
         MEXIT ,
.*
.**      $DYNLPA MF=L
.*
.LIST    ANOP  ,
&ZDY     DS    0F
         $ECFDYN DSECT=NO
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $DYNLPA - Invalid MOD operand specified'
         MEXIT ,
.ERR02   MNOTE 8,'*** $DYNLPA  Invalid ADDR operand specified'
         MEXIT ,
.ERR03   MNOTE 8,'*** $DYNLPA Invalid PC operand specified'
         MEXIT ,
.ERR04   MNOTE 8,'*** $DYNLPA MOD and TOKEN are mutually exclusive'
         MEXIT ,
.ERR05   MNOTE 8,'*** $DYNLPA Invalid TOKEN operand specified'
         MEXIT ,
.ERR06   MNOTE 8,'*** $DYNLPA Invalid PGFIX operand specified'
         MEXIT ,
.ERR07   MNOTE 8,'*** $DYNLPA ADD and TOKEN are mutually exclusive'
         MEXIT ,
.ERR08   MNOTE 8,'*** $DYNLPA ADD and TYPE are mutually exclusive'
         MEXIT ,
.ERR09   MNOTE 8,'*** $DYNLPA DELETE and DDNAME are mutually exclusive'
         MEXIT ,
.ERR10   MNOTE 8,'*** $DYNLPA Invalid TYPE operand specified'
         MEXIT ,
.ERR11   MNOTE 8,'*** $DYNLPA Invalid OWNER operand specified'
         MEXIT ,
         MEND
./ ADD NAME=$ECFCPT  0102-21069-21304-1648-00071-00071-00002-BENMAR  36
         MACRO
         $ECFCPT ,
*/*******************************************************************/
*/*                                                                 */
*/* Name: $ECFCPT                                                   */
*/*                                                                 */
*/* Description: Cell Pool Table and Entry maps                     */
*/*                                                                 */
*/* Residency: Subpool 99                                           */
*/*                                                                 */
*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
*/*                                                                 */
*/*                                                                 */
*/*******************************************************************/
*---------------------------CHANGE LOG------------------------------*/
*                                                                   */
* ID    Rel    Date       Author        Comments                    */
*-------------------------------------------------------------------*/
* @01 | V1R1 | 05242019 | Ben Marino  | Initial version             */
* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support  */
*     |      |          |             |                             */
*********************************************************************/
*--------+---------+---------+---------+---------+---------+--------+*
*
*        Cell Pool Table
*
CPT      DSECT ,
CPTID    DS    CL4'CPT'           ID
CPTCHPTR DS    A                  extent address
CPTFLG1  DS    XL1                flags
CPT@PRI  EQU   X'80'              -primary cell pool extent
CPT@INI  EQU   X'40'              -cell pool initialized
CPT@DEL  EQU   X'20'              -cell pool deleted
CPT@BAD  EQU   X'10'              -cell pool is toast
CPTSTAT  DS    CL3                cell pool status
CPT@USE  EQU   C'USE'             -cell pool in use
CPT@DLT  EQU   C'DEL'             -inactive cell pool
         DS    0A
CPTCPID  DS    A                  cell pool ID
CPTPRIM  DS    A                  primary extent address
CPTTCB   DS    A                  cell pool owner TCB
CPTASCB  DS    A                  cell pool owner ASCB
CPTTCELL DS    A                  top cell address
CPTFREE  DS    A                  address of free cell
         DS    0F
CPTLOCK  DS    F                  lockword - ASCB
CPTLOCK2 DS    F                  lockword - TCB
CPTACTV  DS    F                  active cells
CPTXTNT  DS    F                  number of extents
CPTAXTNT DS    F                  allocated extents
CPTCSIZE DS    F                  cell size
CPTCELLS DS    F                  number of cells
CPTSPN   DS    F                  subpool
CPTCPSZE DS    F                  cell pool storage size
CPTKEY   DS    F                  cell pool storage key
CPTHDR   DS    CL24               cell pool header
         DS    0D
CPT@SIZE EQU   *-CPT              table size
*
*        Cell Pool Element
*
CPE      DSECT ,
CPEID    DS    CL4'CPE'           ID
CPECHPTR DS    A                  cell chain pointer
CPENCUR  DS    A                  non-corrupted ID
CPESTAT  DS    CL4                cell element status
CPE@ACT  EQU   C'ACTV'            -active cell
CPE@FRE  EQU   C'FREE'            -free cell
         DS    0D
CPE@SIZE EQU   *-CPE              table size
         MEND
./ ADD NAME=$ECFDYN  0114-21235-21304-1648-00054-00041-00024-BENMAR  39
*/*********************************************************************
*/*                                                                   *
*/* Nane: $ECFDYN                                                     *
*/*                                                                   *
*/* Description: Dynamic-LPA ADD/DELETE mapping macro                 *
*/*                                                                   *
*/* Notes: None                                                       *
*/*                                                                   *
*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)                 *
*/*                                                                   *
*/*                                                                   *
*/*********************************************************************
*---------------------------CHANGE LOG--------------------------------*
*                                                                     *
* ID    Rel    Date       Author        Comments                      *
*---------------------------------------------------------------------*
* @01 | V2R3 | 08232021 | Ben Marino  | Serviceability enhancements   *
*     |      |          |             |                               *
***********************************************************************
*-------+---------+---------+---------+---------+---------+---------+-*
         MACRO
         $ECFDYN &DSECT=YES
.*
         AIF   ('&DSECT' EQ 'NO').DYN010
.*
DYN      DSECT ,
         AGO   .DYN020
.DYN010  ANOP  ,
DYN      DS    0F
.DYN020  ANOP  ,
DYNID    DS    CL4'DYN'         ID
DYNREQ   DS    XL1              request
DYN@ADD  EQU   X'80'             -add request
DYN@CUR  EQU   X'40'             -delete current
DYN@TKN  EQU   X'20'             -delete by token
         DS    0X
DYNPAGE  DS    XL1              page attributes
DYN@PGFX EQU   X'80'             -page fix module
         DS    0X
DYNOWNR  DS    XL1              owner attributes
DYN@SYS  EQU   X'80'             -OWNER=SYSTEM
DYN@HOME EQU   X'40'             -OWNER=HOME
         DS    0X
DYNREV0  DS    XL1              available
         DS    0A
DYNADDR  DS    A                module entry address
DYNLEN   DS    A                module length
DYNRC    DS    A                RC
DYNRSN   DS    A                RSN
DYNDDN   DS    CL8              library DDname
DYNMOD   DS    CL8              module name
DYNTOKEN DS    XL8              token
DYN@SZE  EQU   *-DYN            DYN length
         MEND  ,
./ ADD NAME=$ECFEQU  0184-21069-21333-1318-00626-00578-00607-BENMAR  00
         MACRO
&ZEQU    $ECFEQU &LIST=YES
*/*******************************************************************/
*/*                                                                 */
*/* Name: $ECFEQU                                                   */
*/*                                                                 */
*/* Description: General subsystem equates                          */
*/*                                                                 */
*/* Notes: None                                                     */
*/*                                                                 */
*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
*/*                                                                 */
*/*                                                                 */
*/*******************************************************************/
*---------------------------CHANGE LOG------------------------------*/
*                                                                   */
* ID    Rel    Date       Author        Comments                    */
*-------------------------------------------------------------------*/
* @01 | V1R1 | 05242019 | Ben Marino  | Initial version             */
* @02 | V2R2 | 03172021 | Ben Marino  | zOS serviceability support  */
* @03 | V2R3 | 08032021 | Ben Marino  | Added MONITOR rule fields   */
* @04 | V2R3 | 08112021 | Ben Marino  | Added $RUNIRB function code */
* @05 | V2R3 | 10272021 | Ben Marino  | Added SVC screening support */
*     |      |          |             |                             */
*     |      |          |             |                             */
*********************************************************************/
*--------+---------+---------+---------+---------+---------+--------+*
*
**       Save Area Offsets
*
GPR@PLI  EQU   0            .save area offset 0
GPR@BWD  EQU   4            .save area offset 4
GPR@FWD  EQU   8            .save area offset 8
GPR@R14  EQU   12           .save area offset 12
GPR@R15  EQU   16           .save area offset 16
GPR@R0   EQU   20           .save area offset 20
GPR@R1   EQU   24           .save area offset 24
GPR@R2   EQU   28           .save area offset 28
GPR@R3   EQU   32           .save area offset 32
GPR@R4   EQU   36           .save area offset 36
GPR@R5   EQU   40           .save area offset 40
GPR@R6   EQU   44           .save area offset 44
GPR@R7   EQU   48           .save area offset 48
GPR@R8   EQU   52           .save area offset 52
GPR@R9   EQU   56           .save area offset 56
GPR@R10  EQU   60           .save area offset 60
GPR@R11  EQU   64           .save area offset 64
GPR@R12  EQU   68           .save area offset 68
*
**       Register Equates
*
R0       EQU   0            .general REG 0
R1       EQU   1            .general REG 1
R2       EQU   2            .general REG 2
R3       EQU   3            .general REG 3
R4       EQU   4            .general REG 4
R5       EQU   5            .general REG 5
R6       EQU   6            .general REG 6
R7       EQU   7            .general REG 7
R8       EQU   8            .general REG 8
R9       EQU   9            .general REG 9
R10      EQU   10           .general REG 10
R11      EQU   11           .general REG 11
R12      EQU   12           .general REG 12
R13      EQU   13           .general REG 13
R14      EQU   14           .general REG 14
R15      EQU   15           .general REG 15
*
AR0      EQU   0            .access REG 0
AR1      EQU   1            .access REG 1
AR2      EQU   2            .access REG 2
AR3      EQU   3            .access REG 3
AR4      EQU   4            .access REG 4
AR5      EQU   5            .access REG 5
AR6      EQU   6            .access REG 6
AR7      EQU   7            .access REG 7
AR8      EQU   8            .access REG 8
AR9      EQU   9            .access REG 9
AR10     EQU   10           .access REG 10
AR11     EQU   11           .access REG 11
AR12     EQU   12           .access REG 12
AR13     EQU   13           .access REG 13
AR14     EQU   14           .access REG 14
AR15     EQU   15           .access REG 15
*
HR0      EQU   0            .HIGH REG 0
HR1      EQU   1            .HIGH REG 1
HR2      EQU   2            .HIGH REG 2
HR3      EQU   3            .HIGH REG 3
HR4      EQU   4            .HIGH REG 4
HR5      EQU   5            .HIGH REG 5
HR6      EQU   6            .HIGH REG 6
HR7      EQU   7            .HIGH REG 7
HR8      EQU   8            .HIGH REG 8
HR9      EQU   9            .HIGH REG 9
HR10     EQU   10           .HIGH REG 10
HR11     EQU   11           .HIGH REG 11
HR12     EQU   12           .HIGH REG 12
HR13     EQU   13           .HIGH REG 13
HR14     EQU   14           .HIGH REG 14
HR15     EQU   15           .HIGH REG 15
*
**       General equates
*
XFF      EQU   X'FF'        .foxes
XZERO    EQU   X'00'        .hex zero
ENDVL    EQU   X'80'        .end-of-list indicator
AMODE31  EQU   X'80'        .AMODE=31 indicator
ATCHSVC  EQU   X'2A'        .ATTACH/X indicator
*
BLANK    EQU   C' '         .blank
COMMA    EQU   C','         .comma
OPAREN   EQU   C'('         .open paren
CPAREN   EQU   C')'         .close paren
COMMENT  EQU   C'*'         .comment record
COMMENT2 EQU   C'/'         .comment record
DOLLAR   EQU   C'$'         .dollar
ASHTAG   EQU   C'#'         .#tag
ATSIGN   EQU   C'@'         .@sign
ALPHA    EQU   C'A'         .alpha character
ZEBRA    EQU   C'Z'         .alpha character
USER     EQU   C'U'         .user ABEND code
SYSTEM   EQU   C'S'         .system ABEND code
*
**       Subtask TCB Identifiers
*
SUB      EQU   X'F0'        .ECFMST(ECFSUB) TCB ID
S34      EQU   X'F1'        .ECFSRV(S34SRV) TCB ID
COM      EQU   X'F2'        .ECFSRV(COMSRV) TCB ID
S35      EQU   X'F3'        .ECFSRV(S35SRV) TCB ID
RFR      EQU   X'F4'        .ECFSRV(RFRSRV) TCT ID
ADD      EQU   X'F5'        .ECFSRV(ADDSRV) TCB ID
STC      EQU   X'F6'        .ECFSRV(STCSRV) TCB ID
DIE      EQU   X'F7'        .ECFSRV(DIESRV) TCB ID
SYS      EQU   X'F8'        .ECFSRV(SYSSRV) TCB ID                 @03C
XVC      EQU   X'F9'        .ECFSRV(SVCSRV) TCB ID                 @05C
*
**       Program Interrupt Codes
*
PIC4     EQU   X'04'        S0C4-4
PIC10    EQU   X'10'        S0C4-10
PIC11    EQU   X'11'        S0C4-11
PIC5     EQU   X'05'        S0C5
*
**       PC/SVC Router PCID/FCID codes                             @02C
*
$TPROT   EQU   1            $TPROT function code
$AUTH    EQU   2            $AUTH function code
$SAF     EQU   3            $SAF function code                     @02C
$RUNIRB  EQU   4            $RUNRUN function code                  @04C
$TPROT64 EQU   5            $TPROT64 function code                 @04C
$STGALET EQU   6            $STORAGE function code                 @04C
$DYNLPA  EQU   7            $DYNLPA function code                  @04C
$FC008   EQU   8            -available function code
$FC009   EQU   9            -available fynction code
$FC010   EQU   10           -available function code
$FC011   EQU   11           -available fynction code
$FC012   EQU   12           -available function code
$FC013   EQU   13           -available fynction code
$USERPC  EQU   14           User-defined PC function code
$USERSVC EQU   15           User-defined SVC function code
$TESTING EQU   16           testing function code  (DONOT CHANGE)
$SVCHOOK EQU   256          SVC screening function code (DONOT CHANGE)
*
**       ECF Subpool Usage
*
SP0      EQU   0            .private subpool
SP87     EQU   87           .ECFXPC PC-routine subpool
SP88     EQU   88           .ECFXPC PC-routine subpool
SP99     EQU   99           .ECFCPL CPOOL subpool
SP100    EQU   100          .ECFSUB jobstep subpool
SP101    EQU   101          .ECFSUB I/O subpool
SP102    EQU   102          .ECFTKN subpool
SP103    EQU   103          .parsing subpool
SP104    EQU   104          .private subpool
SP105    EQU   105          .private subpool
SP106    EQU   106          .private subpool
SP107    EQU   107          .MLWTO messages subpool
SP108    EQU   108          .ECFSTC recovery subpool
SP109    EQU   109          .REBX cell pool subpool
SP110    EQU   110          .ECFTRC tracing subpool
SP111    EQU   111          .ECFSRV I/O subpool
SP112    EQU   112          .ECFSRV(S34SRV) subpool
SP113    EQU   113          .ECFSRV(S35SRV) subpool
SP114    EQU   114          .ECFSRV(RFRSRV) subpool
SP115    EQU   115          .ECFSRV(ADDSRV) subpool
SP116    EQU   116          .ECFSRV(COMSRV) subpool
SP117    EQU   117          .ECFSRV(STCSRV) subpool
SP118    EQU   118          .ECFSRV(DIESRV) subpool
SP119    EQU   119          .ECFREB(REXEC) subpool
SP120    EQU   120          .ECFSRV(SYSSRV) subpool
SP121    EQU   121          .ECFSRV(SVCSRV) subpool
SP122    EQU   122          .ECFXPC(GETSTOR) subpool
SP123    EQU   123          .available
*
SP228    EQU   228          .CSA fixed subpool
SP229    EQU   229          .private subpool
SP230    EQU   230          .private subpool
SP241    EQU   241          .CSA pageable subpool
SP245    EQU   245          .SQA subpool
SP253    EQU   253          .LSQA subpool
SP255    EQU   255          .LSQA subpool
*
**       Return Codes
*
RC0      EQU   X'00000000'  .successful return code
RC4      EQU   X'00000004'  .warning return code
RC8      EQU   X'00000008'  .error return code
RC12     EQU   X'00000012'  .subsystem error return code
RC16     EQU   X'00000016'  .subsystem error return code
RC256    EQU   X'00000256'  .subsystem error return code
*
**       Reason Codes
*
RSN0     EQU   X'00000000'  .normal reason code
RSN0100  EQU   X'00000100'  .service routine STKE/DSA stack overflow
RSN0102  EQU   X'00000102'  .subroutine STKE stack overflow
RSN0104  EQU   X'00000104'  .$SSVT/SSVT block length mismatch
RSN0106  EQU   X'00000106'  .ECFSUB(STCINI) failed initialization
RSN0108  EQU   X'00000108'  .$SSVT/SSVT matrix length mismatch
RSN0110  EQU   X'00000110'  .ECFSUB(STCINI) SSI-support LMOD load error
RSN0112  EQU   X'00000112'  .ECFPARM record table overflow
RSN0114  EQU   X'00000114'  .ECFTRC ESTAE environment create error
RSN0116  EQU   X'00000116'  .ESTAE recovery environment create error
RSN0118  EQU   X'00000118'  .ECFPAR(SUBSYS) terminated abnormally
RSN0120  EQU   X'00000120'  .invalid SUBSYS= init parm specified
RSN0122  EQU   X'00000122'  .ECFPAR(CMDPFX) terminated abnormally
RSN0124  EQU   X'00000124'  .invalid CMDCHAR= init parm specified
RSN0126  EQU   X'00000126'  .ECFSUB(INISUB) $SSCT GETMAIN failed
RSN0128  EQU   X'00000128'  .CMD={prefix} specified is invalid
RSN0130  EQU   X'00000130'  .CMD=prefix char belongs to another subsys
RSN0132  EQU   X'00000132'  .unable to locate specified WTO msgID
RSN0134  EQU   X'00000134'  .ECFPAR(TMPSTC) terminated abnormally
RSN0136  EQU   X'00000136'  .invalid TMPSTC= parameter specified
RSN0138  EQU   X'00000138'  .ECFPAR(RUNRUL) terminated abnormally
RSN0140  EQU   X'00000140'  .invalid RUNAS= init parm specified
RSN0142  EQU   X'00000142'  .invalid TSOSUB= parameter specified
RSN0144  EQU   X'00000144'  .RUNAS= invalid. specify STC, JOB or SUB
RSN0146  EQU   X'00000146'  .invalid TMP= program name parm specified
RSN0148  EQU   X'00000148'  .invalid TMPSTC= JCL procedure name
RSN0150  EQU   X'00000150'  .ECFPAR(TRCOPT) terminated abnormally
RSN0152  EQU   X'00000152'  .TRACE= null operend data specified
RSN0153  EQU   X'00000153'  .TSUSUB= null operend data specified
RSN0154  EQU   X'00000154'  .invalid TMP= program name specified
RSN0156  EQU   X'00000156'  .TRACE= invalid operand value specified
RSN0158  EQU   X'00000158'  .ECFPAR(DBGOPT) terminated abnormally
RSN0160  EQU   X'00000160'  .DEBUG= null operend data specified
RSN0162  EQU   X'00000162'  .SDUMP= null operend data specified
RSN0164  EQU   X'00000164'  .DEBUG= invalid operand value specified
RSN0166  EQU   X'00000166'  .SDUMP= invalid operand value specified
RSN0168  EQU   X'00000168'  .ECFWTO message ID not found in ECFWTX
RSN0170  EQU   X'00000170'  .$TOKEN service terminated abnormally
RSN0172  EQU   X'00000172'  .$ECFTKN token table overflow error
RSN0174  EQU   X'00000174'  .MSAS= null operand data specified
RSN0176  EQU   X'00000176'  .$TOKEN DELETE error - token not found
RSN0180  EQU   X'00000180'  .$TOKEN RETRIEVE error - token not found
RSN0182  EQU   X'00000182'  .MSAS= invalid operand value specified
RSN0184  EQU   X'00000184'  .$TOKEN CREATE error - duplicate token
RSN0186  EQU   X'00000186'  .invalid TRAPSVC= parameter specified
RSN0188  EQU   X'00000188'  .REBPOOL required open paren not found
RSN0190  EQU   X'00000190'  .ECFPAR(REBCPL) terminated abnormally
RSN0192  EQU   X'00000192'  .REBPOOL required close paren not found
RSN0194  EQU   X'00000194'  .CMD={prefix} belongs to other subsystem
RSN0196  EQU   X'00000196'  .Unable to open PARMLIB to read ECFMSTR)
RSN0198  EQU   X'00000198'  .ECFPAR(RTBGET) terminated abnormally
*
RSN0200  EQU   X'00000200'  .Unable to open PARMLIB dataset
RSN0202  EQU   X'00000202'  .invalid CLASS= init parm specified
RSN0204  EQU   X'00000204'  .ECFSUB(INISUB) SVC=nnn ownership error
RSN0206  EQU   X'00000206'  .invalid TRAPSVC= DDname specified
RSN0208  EQU   X'00000208'  .ECFIIO I/O buffer overflow READ error
RSN0212  EQU   X'00000212'  .ECFIIO I/O buffer storage obtain failed
RSN0216  EQU   X'00000216'  .resources initialization routine failed
RSN0220  EQU   X'00000220'  .invalid RULE= init parm specified
RSN0224  EQU   X'00000224'  .MODE= operand required is missing
RSN0228  EQU   X'00000228'  .MODE= operand separator is invalid
RSN0230  EQU   X'00000230'  .JOBCARD operand not found after separator
RSN0232  EQU   X'00000232'  .RUNAS= operand nust be STC, JOB, or SUB
RSN0234  EQU   X'00000234'  .JOBCARD= operand value is invalid
RSN0236  EQU   X'00000236'  .RULE= does not specify valid member name
RSN0240  EQU   X'00000240'  .Unable to obtain REB cell from cell pool
RSN0244  EQU   X'00000244'  .RTBE rule table overflow error
RSN0246  EQU   X'00000246'  .ECFPAR(EVNTDF) terminated abnormally
RSN0248  EQU   X'00000248'  .RTB storage block obtain error
RSN0252  EQU   X'00000252'  .RTB block failed validity checks
RSN0256  EQU   X'00000256'  .RTBE element failed validity check
RSN0260  EQU   X'00000260'  .REB cell element obtain failed
RSN0264  EQU   X'00000264'  .RTB/RTBE contains zero entries
RSN0266  EQU   X'00000266'  .ECFREB(PARSE) terminated abnormally
RSN0268  EQU   X'00000268'  .misplaced event type record found
RSN0272  EQU   X'00000272'  .rule data end delimiter '")' not found
RSN0274  EQU   X'00000274'  .Unknown event rule type record found
RSN0276  EQU   X'00000276'  .misplaced EXEC() or EXEC() not found
RSN0278  EQU   X'00000278'  .REPLY() end delimeter ')' not found
RSN0280  EQU   X'00000280'  .EXEC() end delimeter ')' not found
RSN0282  EQU   X'00000282'  .ECFREB(REXEC) terminated abnormally
RSN0284  EQU   X'00000284'  .EXEC() rule record not found
RSN0286  EQU   X'00000286'  .WTO() end delimeter ')' not found
RSN0288  EQU   X'00000288'  .ECFREB(QUEREB) terminated abnormally
RSN0290  EQU   X'00000290'  .ECFREB(STGREB) terminated abnormally
RSN0292  EQU   X'00000292'  .unable to dequeue REB dues to ABEND error
RSN0296  EQU   X'00000296'  .ECFREB(REXEC) rule END record is missing
RSN0298  EQU   X'00000298'  .CMD() end delimeter ')' not found
*
RSN0300  EQU   X'00000300'  .$CPOOL invalid CPID specified
RSN0304  EQU   X'00000304'  .$CPOOL invalid CELLS specified
RSN0308  EQU   X'00000308'  .$CPOOL negative CELLS value specified
RSN0312  EQU   X'00000312'  .$CPOOL zero CELLS value specified
RSN0316  EQU   X'00000316'  .$CPOOL invalid CSIZE value specified
RSN0320  EQU   X'00000320'  .$CPOOL negative CSIZE value specified
RSN0324  EQU   X'00000324'  .$CPOOL zero CSIZE value specified
RSN0328  EQU   X'00000328'  .$CPOOL invalid SP address specified
RSN0332  EQU   X'00000332'  .$CPOOL negative SP value specified
RSN0336  EQU   X'00000336'  .$CPOOL unsupported SP number specified
RSN0340  EQU   X'00000340'  .$CPOOL negative XTNT number specified
RSN0344  EQU   X'00000344'  .$CPOOL invalid HDR address specified
RSN0348  EQU   X'00000348'  .$CPOOL invalid SP address spacified
RSN0352  EQU   X'00000352'  .$CPOOL invalid XTNT address specified
RSN0356  EQU   X'00000356'  .$CPOOL invalid header address specified
RSN0360  EQU   X'00000360'  .$CPOOL BUILD storage obtain failed
RSN0364  EQU   X'00000364'  .$CPOOL DELETE invalid cell pool ID
RSN0368  EQU   X'00000368'  .$CPOOL DELETE invalid cell pool owner
RSN0372  EQU   X'00000372'  .$CPOOL DELETE invalid cell pool size
RSN0376  EQU   X'00000376'  .$CPOOL DELETE cell pool FREEMAIN error
RSN0380  EQU   X'00000380'  .$CPOOL DELETE invalid cell pool address
RSN0384  EQU   X'00000384'  .$CPOOL DELETE internal failure
RSN0388  EQU   X'00000388'  .$CPOOL BUILD invalid KEY specified
RSN0392  EQU   X'00000392'  .$CPOOL BUILD terminated abnormally
RSN0396  EQU   X'00000396'  .$CPOOL FREE terminated abnormally
*
RSN0400  EQU   X'00000400'  .$CPOOL FREE invalid cell pool ID supplied
RSN0404  EQU   X'00000404'  .$CPOOL FREE invalid cell element supplied
RSN0408  EQU   X'00000408'  .$CPOOL FREE invalid CPE found in cell
RSN0412  EQU   X'00000412'  .$CPOOL GET terminated abnormally
RSN0416  EQU   X'00000416'  .$CPOOL GET invalid cell pool ID supplied
RSN0420  EQU   X'00000420'  .$CPOOL GET invalid CELL O/P addr supplied
RSN0424  EQU   X'00000424'  .$CPOOL GET CPTTCELL field is corrupted
RSN0428  EQU   X'00000428'  .$CPOOL GET CPEID field is corrupted
RSN0432  EQU   X'00000432'  .$CPOOL GET max extents allocation reached
RSN0436  EQU   X'00000436'  .$CPOOL GET sec-xtnt storage obtain failed
RSN0440  EQU   X'00000440'  .$CPOOL GET max secondary extents reached
RSN0444  EQU   X'00000444'  .$CPOOL GET sec-xtnt failed validity check
RSN0448  EQU   X'00000448'  .$CPOOL GET CPOOL doesn't exist (deleted)
RSN0452  EQU   X'00000452'  .REBX cell element obtain failed
RSN0456  EQU   X'00000456'  .invalid variable data found in EXEC stmt
RSN0460  EQU   X'00000460'  .REBX variable table overflow error
RSN0462  EQU   X'00000462'  .ECFPAR(SRBCPL) terminated abnormally
RSN0464  EQU   X'00000464'  .SRBPOOL required open paren not found
RSN0468  EQU   X'00000468'  .SRBPOOL required close paren not found
RSN0472  EQU   X'00000472'  .SRBPOOL numeric value separator not found
RSN0476  EQU   X'00000476'  .REBPOOL numeric value separator not found
RSN0480  EQU   X'00000480'  .ECFS34 ABENDed scanning REB queues
RSN0482  EQU   X'00000482'  .ECFVAR terminated abnormally
RSN0484  EQU   X'00000484'  .ECFVAR REB failed validity checks
RSN0488  EQU   X'00000488'  .unable to dequeue REB from active queue
RSN0492  EQU   X'00000492'  .$CPOOL BUILD SP only allowed in ECF ASCB
RSN0496  EQU   X'00000496'  .unable to dequeue REB from staging queue
*
RSN0500  EQU   X'00000500'  .EVT address failed validity checks
RSN0502  EQU   X'00000502'  .null SYSTSPRT DSName specified
RSN0504  EQU   X'00000504'  .subsystem is unavailable (terminating)
RSN0506  EQU   X'00000506'  .Attach subtasks subroutine failed
RSN0508  EQU   X'00000508'  .SRB cell element obtain failed
RSN0512  EQU   X'00000512'  .ESTAE recovery environment create error
RSN0516  EQU   X'00000516'  .unable to determine TCBTID task ID
RSN0520  EQU   X'00000520'  .ECFSUB(ATTACH) terminated abnormally
RSN0522  EQU   X'00000522'  .ECFSUB(PREFRE) terminated abnormally
RSN0524  EQU   X'00000524'  .ATTACH call returned non-zero RC
RSN0528  EQU   X'00000528'  .Subsystem name ownership error
RSN0530  EQU   X'00000530'  .ECFPAR(IEFREQ) terminated abnormally
RSN0532  EQU   X'00000532'  .SSREQ= null operend data specified
RSN0534  EQU   X'00000534'  .FETCH= null operend data specified
RSN0536  EQU   X'00000536'  .SSREQ= invalid operand value specified
RSN0538  EQU   X'00000538'  .ECFPAR(SYSTSN) terminated abnormally
RSN0540  EQU   X'00000540'  .null SYSTSIN= DSName specified
RSN0542  EQU   X'00000542'  .ECFPAR(SYSJOB) termiated abnormally
RSN0544  EQU   X'00000544'  .Invalid SYSTSIN= DSName specified
RSN0548  EQU   X'00000548'  .null SYSTSIN DSName specified
RSN0552  EQU   X'00000552'  .ECFSUB(STCINI) initialization failed
RSN0554  EQU   X'00000554'  .ECFSUB(TRCOPEN) failed to open TRCELOG
RSN0556  EQU   X'00000556'  .ECFCPL(GETPOOL) terminated abnormally
RSN0558  EQU   X'00000558'  .ECFSUB(DBGOPEN) failed to open DBUGLOG
RSN0560  EQU   X'00000560'  .ECFCPL(GETXTNT) terminated abnormally
RSN0562  EQU   X'00000562'  .ECFPAR(SRECPL) terminated abnormally
RSN0564  EQU   X'00000564'  .SREPOOL required open paren not found
RSN0566  EQU   X'00000566'  .Invalid SYSIN= DSName specified
RSN0568  EQU   X'00000568'  .SREPOOL required close paren not found
RSN0570  EQU   X'00000570'  .null SYSIN DSName specified
RSN0572  EQU   X'00000572'  .SREPOOL numeric value separator not found
RSN0574  EQU   X'00000574'  .null SYSTSPRT DSName specified
RSN0576  EQU   X'00000576'  .ECFCPL(ECFCPL) terminated abnormally
RSN0578  EQU   X'00000578'  .Invalid SYSTSPRT= DSName specified
RSN0580  EQU   X'00000580'  .ECFDYN(ECFDYN) terminated abnormally
RSN0582  EQU   X'00000582'  .ECFTRC log storage buffer obtain failed
RSN0584  EQU   X'00000584'  .ECFIIO(ECFIIO) terminated abnormally
RSN0586  EQU   X'00000586'  .ECFTRC TRCLOG log not dataset not opened
RSN0588  EQU   X'00000588'  .ECFOIO(WRITE) terminated abnormally
RSN0590  EQU   X'00000590'  .FETCH= invalid operand value specified
RSN0592  EQU   X'00000592'  .ECFREB(ECFREB) terminated abnormally
RSN0594  EQU   X'00000594'  .ECFTRC(ECFTRC) invalid TRC entry supplied
RSN0596  EQU   X'00000596'  .ECFPAR(ECFPAR) terminated abnoemally
RSN0598  EQU   X'00000598'  .ECFTRC(ECFTRC) terminated abnoemally
*
RSN0600  EQU   X'00000600'  .DBUGLOG dataset OPEN request failed
RSN0602  EQU   X'00000602'  .TRCELOG dataset OPEN request failed
RSN0604  EQU   X'00000604'  .DBUGLOG dataset CLOSE request failed
RSN0606  EQU   X'00000606'  .ECFPAR(SHOWREB) terminated abnormally
RSN0608  EQU   X'00000608'  .DISPLAY= null operend data specified
RSN0610  EQU   X'00000610'  .TRCELOG dataset CLOSE request failed
RSN0612  EQU   X'00000612'  .DISPLAY= invalid operand value specified
RSN0614  EQU   X'00000614'  .ECFTKN - CREATE terminated abnormally
RSN0616  EQU   X'00000616'  .ECFTKN - DELETE terminated abnormally
RSN0620  EQU   X'00000620'  .ECFTKN - RETRIEVE terminated abnormally
RSN0624  EQU   X'00000624'  .ECFSUB ABENDed during initialization
RSN0628  EQU   X'00000628'  .ECFSUB ABENDed during termination
RSN0632  EQU   X'00000632'  .ECFSUB(INISUB) terminated abnormally
RSN0636  EQU   X'00000636'  .ECFSUB(INISUB) terminated abnormally
RSN0640  EQU   X'00000640'  .ECFSUB(INISUB) terminated abnormally
RSN0644  EQU   X'00000644'  .ECFIRB(ECFIRB) terminated abnormally
RSN0648  EQU   X'00000648'  .ECFDYN(ECFDYN) ZIO failed validity checks
RSN0652  EQU   X'00000652'  .ECFRIO(ECFRIO) ZIO failed validity checks
RSN0656  EQU   X'00000656'  .ECFDYN(ECFDYN) invalid allocation request
RSN0660  EQU   X'00000660'  .ECFTRC(ECFTRC) invalid trace ID supplied
RSN0664  EQU   X'00000664'  .Invalid ECFJOBS= DSName specified
RSN0666  EQU   X'00000666'  .Invalid PARMLIB= DSName specified
RSN0668  EQU   X'00000668'  .null ECFJOBS DSName specified
RSN0670  EQU   X'00000670'  .null PARMLIB DSName specified
RSN0672  EQU   X'00000672'  .null ECFJOBS DSName specified
RSN0674  EQU   X'00000674'  .null PARMLIB DSName specified
RSN0676  EQU   X'00000676'  .Invalid SYSPROC= DSName specified
RSN0680  EQU   X'00000680'  .null SYSPROC DSName specified
RSN0684  EQU   X'00000684'  .null SYSPROC DSName specified
RSN0688  EQU   X'00000688'  .ECFOIO(READ) terminated abnormally
RSN0692  EQU   X'00000692'  .available
RSN0696  EQU   X'00000696'  .available
*
RSN0700  EQU   X'00000700'  .IRB/EVT failed validity checks
RSN0704  EQU   X'00000704'  .IRB/ECB failed validity checks
RSN0708  EQU   X'00000708'  .CSVDYLPA add request failed           @02C
RSN0712  EQU   X'00000712'  .CSVDYLPA delete request failed        @02C
RSN0716  EQU   X'00000716'  .available
RSN0720  EQU   X'00000720'  .available
RSN0724  EQU   X'00000724'  .available
RSN0728  EQU   X'00000728'  .available
RSN0732  EQU   X'00000732'  .available
RSN0736  EQU   X'00000736'  .available
RSN0740  EQU   X'00000740'  .available
RSN0744  EQU   X'00000744'  .available
RSN0748  EQU   X'00000748'  .available
RSN0752  EQU   X'00000752'  .available
RSN0756  EQU   X'00000756'  .available
RSN0760  EQU   X'00000760'  .available
RSN0764  EQU   X'00000764'  .available
RSN0768  EQU   X'00000768'  .available
RSN0772  EQU   X'00000772'  .available
RSN0776  EQU   X'00000776'  .available
RSN0780  EQU   X'00000780'  .available
RSN0784  EQU   X'00000784'  .available
RSN0788  EQU   X'00000788'  .available
RSN0792  EQU   X'00000792'  .available
RSN0796  EQU   X'00000796'  .available
*
RSN0800  EQU   X'00000800'  .ECFS35 ABENDed scanning REB queues
RSN0802  EQU   X'00000802'  .ECFS35(SVCISUB) terminated abnormally
RSN0804  EQU   X'00000804'  .ECFS35(ECFSUB) terminated abnormally
RSN0806  EQU   X'00000806'  .ECFS35(SVCTSUB) cord count is zero
RSN0808  EQU   X'00000808'  .ECFS35(IEF450I) terminated abnormally
RSN0812  EQU   X'00000812'  .ECFS35(IEF452I) terminated abnormally
RSN0814  EQU   X'00000814'  .ECFS35(IEF453I) terminated abnormally
RSN0816  EQU   X'00000816'  .ECFS35(TRSENA) terminated abnormally
RSN0820  EQU   X'00000820'  .ECFS35(TRSDIS) terminated abnormally
RSN0824  EQU   X'00000824'  .ECFS35(STOPECF) terminated adnoenally
RSN0826  EQU   X'00000826'  .ECFS35(TRAPSVC) terminated adnoenally
RSN0828  EQU   X'00000828'  .ECFTKN invalid $TOKEN level requested
RSN0832  EQU   X'00000832'  .ECFTKN invalid $TOKEN service requested
RSN0836  EQU   X'00000836'  .ECFTKN terminated abnormally
RSN0840  EQU   X'00000840'  .ECFPAR(RPLYID) REPLYID invalid operand
RSN0844  EQU   X'00000844'  .ECFPAR(RPLYID) REPLYID GT one digit error
RSN0848  EQU   X'00000848'  .ECFSUB(XPCINI) terminated abnormally
RSN0852  EQU   X'00000852'  .ECFSUB(XPCTRM) terminated abnormally
RSN0856  EQU   X'00000856'  .ECFXPC(ECFXPC) invalid PCID specified
RSN0860  EQU   X'00000860'  .ECFXPC(AUTH) invalid authorization request
RSN0864  EQU   X'00000864'  .ECFXPC(SAF) invalid accell level supplied
RSN0868  EQU   X'00000868'  .ECFXPC(SAF) invalid entifty name supplied
RSN0872  EQU   X'00000872'  .ECFSAF command resource name not found
RSN0876  EQU   X'00000876'  .ECFPAR(MONMSG) invalid MONMSGCT specified
RSN0880  EQU   X'00000880'  .ECFPAR(MONMSG) MONMSGCT 4-digits exceeded
RSN0884  EQU   X'00000884'  .ECFPAR(MOMMSG) MONMSGCT is not numeric
RSN0888  EQU   X'00000888'  .ECFPAR(MONMSG) MONMSGCT value is zero
RSN0892  EQU   X'00000892'  .ECFIOT(ECFIOT) requested DDname not found
RSN0896  EQU   X'00000896'  .available
*
RSN0900  EQU   X'00000900'  .ECFSRV(RFR) EVTRTBAD address is zero
RSN0904  EQU   X'00000904'  .ECFSRV(RFR) RTBID failed validity checks
RSN0908  EQU   X'00000908'  .ECFSRV(RFR) ECFREB returned non-zero RC
RSN0912  EQU   X'00000912'  .ECFSRV(RFR) QUEREB returned non-zero RC
RSN0916  EQU   X'00000916'  .ECFSRV(S34) S34SRV terminated abnormally
RSN0920  EQU   X'00000920'  .ECFSRV(S35) S34SRV terminated abnormally
RSN0922  EQU   X'00000922'  .ECFSRV(SYS) SYSSRV terminated abnormally
RSN0924  EQU   X'00000924'  .ECFSRV(RULPRO) ECFSUB has zero JCL records
RSN0926  EQU   X'00000926'  .ECFSRV(RULPRO) EVTPRLIB buffer overflow
RSN0928  EQU   X'00000928'  .ECFSRV(RULPRO) terminated abnormally
RSN0930  EQU   X'00000930'  .ECFVRX(RULPRO) zero data lines returned
RSN0932  EQU   X'00000932'  .ECFSRV(RFR) S34SRV terminated abnormally
RSN0934  EQU   X'00000934'  .ECFSRV(COM) COMSRV terminated abnormally
RSN0936  EQU   X'00000936'  .ECFSRV(Mainline) terminated abnormally
RSN0938  EQU   X'00000938'  .ECFCOM(JCLPARM) terminated abnormally
RSN0940  EQU   X'00000940'  .ECFSRV(ALLOC) terminated abnormally
RSN0942  EQU   X'00000942'  .ECFSRV(MGCR) terminated abnormally
RSN0944  EQU   X'00000944'  .ECFSRV(READ) terminated abnormally
RSN0946  EQU   X'00000946'  .ECFSRV(WRITE) terminated adnormally
RSN0948  EQU   X'00000948'  .ECFS35(Mainline) terminated abnormarrly
RSN0952  EQU   X'00000952'  .ECFCOM(Mainline) terminated abnormally
RSN0954  EQU   X'00000954'  .ECFCOM(OPTIONS) terminated abnormally
RSN0956  EQU   X'00000956'  .ECFCOM(RFREVNT) terminated abnormally
RSN0958  EQU   X'00000958'  .ECFSRV(SYSCSCB) {JOB|STC|TSU} not found
RSN0960  EQU   X'00000960'  .ECFCOM(ACTEVNT) terminated abnormally)
RSN0962  EQU   X'00000962'  .ECFSRV(STCSRV) terminated abnormally)
RSN0964  EQU   X'00000964'  .ECFCOM(NACEVNT) terminated abnormally
RSN0966  EQU   X'00000966'  .ECFCOM(HELP) terminated abnormally
RSN0968  EQU   X'00000968'  .ECFCOM(DISPONE) terminated abnormally
RSN0972  EQU   X'00000972'  .ECFCOM(ISTATUS) terminated abnormally
RSN0974  EQU   X'00000974'  .ECFCOM(HELPREC) terminated abnormally
RSN0976  EQU   X'00000976'  .ECFCOM(RULES) terminated abnormally
RSN0978  EQU   X'00000978'  .ECFCOM(HBROWSE) terminated abnormally
RSN0980  EQU   X'00000980'  .ECFSRV(RFRSRV) no REBs found in EVTSTGQA
RSN0982  EQU   X'00000982'  .ECFSRV(UNDORF) terminated abnormally
RSN0984  EQU   X'00000984'  .ECFSRV(UNDORF) terminated abnormally
RSN0986  EQU   X'00000986'  .ECFCOM(HEDIT) terminated abnormally
RSN0988  EQU   X'00000988'  .ECFSRV(RFRSRV) no refresh REBs queued
RSN0990  EQU   X'00000990'  .ECFCOM(HELPSUB) terminated abnormally
RSN0992  EQU   X'00000992'  .ECFSRV(STGREB) terminated abnormally
RSN0994  EQU   X'00000994'  .ECFCOM(STATUS) terminated abnormally
RSN0996  EQU   X'00000996'  .ECFCOM(ADDEVNT) terminated abnormally
RSN0998  EQU   X'00000998'  .ECFCOM(SSIDATA) terminated abnormally
*
RSN1000  EQU   X'00001000'  .ECFSRV(SERVER) terminated adnormally
RSN1002  EQU   X'00001002'  .ECFCOM(DYNLPA) terminated adnormally
RSN1004  EQU   X'00001004'  .ECFSRV(ADDSRV) EVTRTBAD address is zero
RSN1008  EQU   X'00001008'  .ECFSRV(ADDSRV) RUNAS=/MODE= is invalid
RSN1012  EQU   X'00001012'  .ECFSRV(ADDSRV) ECFREB returned non-zero RC
RSN1016  EQU   X'00001016'  .ECFSRV(ADDSRV) no REBs found in EVTSTGQA
RSN1020  EQU   X'00001020'  .ECFSRV(ADDSRV) no refresh REBs queued
RSN1024  EQU   X'00001024'  .ECFCOM(CPOOLS) terminated abnormally
RSN1026  EQU   X'00001026'  .ECFCOV(ABENDS) terminated abnormally
RSN1028  EQU   X'00001028'  .ECFVRX ZIO failed validity checks
RSN1032  EQU   X'00001032'  .ECFVRX REBX failed validity checks
RSN1036  EQU   X'00001036'  .ECFVRX HDR record buffer overflow error
RSN1040  EQU   X'00001040'  .ECFVRX REBX/VARS failed validity checks
RSN1044  EQU   X'00001044'  .ECFVRX(PARVAR) keyword variable error
RSN1048  EQU   X'00001048'  .ECFVRX null variable DTA data found
RSN1052  EQU   X'00001052'  .ECFVRX null variable DTA data found
RSN1056  EQU   X'00001056'  .ECFSRV(REPLY) terminated abnormally
RSN1060  EQU   X'00001060'  .ECFQUE(ECFQUE) invalid queue ID specified
RSN1064  EQU   X'00001064'  .ECFQUE(ECFQUE) REB failed validity checks
RSN1068  EQU   X'00001068'  .ECFSRV(MAINLINE) invalid EVT address
RSN1072  EQU   X'00001072'  .ECFPAR(DTIMER) invalid TIMER=interval
RSN1074  EQU   X'00001074'  .ECFPAR(MTIMER) invalid MONTIMER=interval
RSN1076  EQU   X'00001076'  .ECFPAR(DTIMER) TIMER=() GT/LT 2-digits
RSN1078  EQU   X'00001078'  .ECFPAR(MTIMER) MONTIMER=() GT/LT 2-digits
RSN1080  EQU   X'00001080'  .ECFPAR(DTIMER) TIMER=() GT 60 seconds
RSN1082  EQU   X'00001082'  .ECFPAR(MTIMER) MONTIMER=() GT 60 seconds
RSN1084  EQU   X'00001084'  .ECFPAR(USRSVC) SVC= invalid SVC operand
RSN1088  EQU   X'00001088'  .ECFPAR(USRSVC) SVC= invalid SVC number
RSN1090  EQU   X'00001090'  .ECFTCB MSAS caller not supported      @03C
RSN1092  EQU   X'00001092'  .ECFTCB TCBTOKEN returned nonzero      @03C
RSN1094  EQU   X'00001094'  .ECFSRV(SYSCSCB) ABENDed in CSCB scan  @03A
RSN1096  EQU   X'00001096'  .ECFTCB TCB token compare mismatch     @03C
*
RSN2000  EQU   X'00002000'  .ECFOIO(WRITE) dataset open failed
RSN2004  EQU   X'00002004'  .ECFDIS(mainline) terminated adnormally
RSN2008  EQU   X'00002008'  .ECFCSA(mainline) terminated abnormally
RSN2012  EQU   X'00002012'  .ECFCSA(mainline) invalid SRID specified
RSN2016  EQU   X'00002016'  .ECFCSA(ADDLPA) lmod already on LPA queue
RSN2020  EQU   X'00002020'  .ECFCSA(PARSE) invalid lmod name specified
RSN2024  EQU   X'00002024'  .ECFCSA(ADDLPA) LMOD found active in JPQ
RSN2028  EQU   X'00002028'  .ECFCSA(ADDLPA) LMOD found active in LPA
RSN2032  EQU   X'00002032'  .ECFCSA(LOADMOD) LMOD load failure
RSN2036  EQU   X'00002036'  .ECFCSA(LOADMOD) terminated abnormally
RSN2040  EQU   X'00002040'  .ECFCSA(DELLPA) LMOD not found in JPQ
RSN2044  EQU   X'00002044'  .ECFSSI(IEFJSREQ) SSI router ABENDed
RSN2046  EQU   X'00002046'  .ECFSSI(ZENABLE) IEAVG700 call error   @02C
RSN2048  EQU   X'00002048'  .ECFSSI(mainline) invalid request specified
RSN2050  EQU   X'00002050'  .ECFSSI(ZDISABLE) IEAVG700 call error  @02C
RSN2052  EQU   X'00002052'  .ECFOIO(READ) dataset open failed
RSN2054  EQU   X'00002054'  .ECFCOM(DYNLPA) dataset open failed
RSN2056  EQU   X'00002056'  .ECFLCK(ECFLCK service routine failed
RSN2060  EQU   X'00002060'  .ECFIDI(SETDIE) terminated abnormally
RSN2064  EQU   X'00002064'  .ECFIDI(SETDIE) timer TQE add failed
RSN2068  EQU   X'00002068'  .ECFIDI(DELDIE) terminated abnormally
RSN2072  EQU   X'00002072'  .ECFIDI(SETDIE) invalid FCID specified
RSN2076  EQU   X'00002076'  .ECFSUB(PREFRE) storage release failed
RSN2080  EQU   X'00002080'  .ECFSUB(STCINI) storage release failed
RSN2084  EQU   X'00002084'  .ECFSUB(RESFTC) storage release failed
RSN2088  EQU   X'00002088'  .ECFIDI(SETDIE) SETDIE enable failed
RSN2092  EQU   X'00002092'  .ECFSRV(DIESRV) terminated abnormally
RSN2096  EQU   X'00002096'  .ECFSUB(STCINI) CSVDYLPA ADD failed    @02C
*
RSN3000  EQU   X'00003000'  .ECFSTC terminated abnormally
RSN3004  EQU   X'00003004'  .ECFSUB subtasks stack GETMAIN failed
RSN3008  EQU   X'00003008'  .ECFCOM(STCSRV) terminated abnormally
RSN3012  EQU   X'00003012'  .ECFSTC(ECFSTC) invalid command issued
RSN3016  EQU   X'00003016'  .ECFSTC(READ) terminated abnormally
RSN3020  EQU   X'00003020'  .ECFSTC(ALLOC) terminated abnormally
RSN3024  EQU   X'00003024'  .ECFSTC(BROWSE) terminated adnormally
RSN3028  EQU   X'00003028'  .ECFSTC(EDIT) terminated abnormally
RSN3032  EQU   X'00003032'  .ECFSTC(MLWTO) terminated abnormally
RSN3036  EQU   X'00003036'  .ECFSTC(WRITE) terminated adnormally
RSN3040  EQU   X'00003040'  .ECFSTC(DELETE) terminated abnormally
RSN3044  EQU   X'00003044'  .ECFSTC(INSERT) terminated abnormally
RSN3048  EQU   X'00003048'  .ECFSTC(UPDATE) terminated abnormally
RSN3052  EQU   X'00003052'  .ECFSTC(COPY) terminated abnormally
RSN3056  EQU   X'00003056'  .ECFTMP(ESTAE) recovery environment error
RSN3060  EQU   X'00003060'  .ECFCOM(MLWTO) terminated abnormally
RSN3064  EQU   X'00003064'  .ECFSVR(Mainline) invalid request received
RSN3068  EQU   X'00003068'  .available
RSN3072  EQU   X'00003072'  .available
RSN3076  EQU   X'00003076'  .available
RSN3080  EQU   X'00003080'  .available
RSN3084  EQU   X'00003084'  .available
RSN3088  EQU   X'00003088'  .available
RSN3092  EQU   X'00003092'  .available
RSN3096  EQU   X'00003096'  .available
RSN3100  EQU   X'00003100'  .available
RSN3104  EQU   X'00003104'  .available
         MEND
./ ADD NAME=$ECFFRR  0121-21269-21304-1648-00046-00015-00045-BENMAR  46
         MACRO
&ZFRR    $ECFFRR
*/*******************************************************************/
*/*                                                                 */
*/* Name: $ECFFRR                                                   */
*/*                                                                 */
*/* Description: SETFRR work area map                               */
*/*                                                                 */
*/* Notes: None                                                     */
*/*                                                                 */
*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
*/*                                                                 */
*/*                                                                 */
*/*******************************************************************/
*---------------------------CHANGE LOG------------------------------*/
*                                                                   */
* ID    Rel    Date       Author        Comments                    */
*-------------------------------------------------------------------*/
* @01 | V2R3 | 09272021 | Ben Marino  | Initial version             */
*     |      |          |             |                             */
*     |      |          |             |                             */
*********************************************************************/
*--------+---------+---------+---------+---------+---------+--------+*
FRR      DSECT ,
FRRID    DS    CL3'FRR'            ID
FRRFLG1  DS    XL1                 flags
FRR@RECR EQU   X'80'               recursion indicator
FRR@RTRY EQU   X'40'               retry indicator
FRR@ABND EQU   X'20'               ABEND indicator
FRR@DUMP EQU   X'10'               SDUMP indicator
FRR@LOGR EQU   X'08'               LOGREC indicator
FRR@PICC EQU   X'04'               Program check indiator
FRR@FAIL EQU   X'02'               failure recursion indicator
FRR@RSV7 EQU   X'01'               -available
*
FRRPARM  DS    A                   caller parameter
FRRSAVE  DS    A                   retry regs savearea address
FRRRETRY DS    A                   retry address
FRRXSA   DS    A                   SVRB extended savearea address
*
FRRCODE  DS    0F                  return code field
FRRZRO   DS    XL3                 -always zero
FRRXRC   DS    XL1                 -RC
FRR@SIZE EQU   *-FRR
FRR@MAX  DS    0XL(24-FRR@SIZE+1)  set SETFRR macro restriction
         MEND
./ ADD NAME=$ECFMAS  0102-21069-21304-1648-00029-00029-00002-BENMAR  49
*/*********************************************************************
*/*                                                                   *
*/* Nane: $ECFMAS                                                     *
*/*                                                                   *
*/* Description: MSAS to ECF communication data area                  *
*/*                                                                   *
*/* Notes: None                                                       *
*/*                                                                   *
*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)                 *
*/*                                                                   *
*/*                                                                   *
*/*********************************************************************
*---------------------------CHANGE LOG--------------------------------*
*                                                                     *
* ID    Rel    Date       Author        Comments                      *
*---------------------------------------------------------------------*
* @01 | V1R1 | 05242019 | Ben Marino  | Initial version               *
* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support    *
*     |      |          |             |                               *
***********************************************************************
*-------+---------+---------+---------+---------+---------+---------+-*
         MACRO
         $ECFMAS ,
MSAS     DSECT ,
MSASID   DS    CL4'MSAS'               ID
MSASAVE  DS    18F                     save area
MSASCBUF DS    CL100                   CSCB command buffer
MSAS@SZE EQU   *-MSAS                  size of MSAS
         MEND
./ ADD NAME=$ECFMWTO 0103-21069-21304-1648-00069-00069-00004-BENMAR  53
         MACRO
         $ECFMWTO &DSECT=NO,&T=MSG
.*/******************************************************************/
.*/                                                                 */
.*/ Name: $ECFMWTO                                                  */
.*/                                                                 */
.*/ Description: Multiline WTO data line format macro               */
.*/                                                                 */
.*/ © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/                                                                 */
.*/                                                                 */
.*/******************************************************************/
.*---------------------------CHANGE LOG------------------------------*
.*                                                                   *
.* ID    Rel    Date       Author        Comments                    *
.*-------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version             *
.* @02 | V1R1 | 10142020 | Ben Marino  | Fix ?D STATUS display hang  *
.* @03 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support  *
.*     |      |          |             |                             *
.*********************************************************************
.*-------+---------+---------+---------+---------+---------+--------+*
         AIF   ('&DSECT' EQ 'NO').NEXTC
&T.C     DSECT ,
         AGO   .NEXTC1
.NEXTC   ANOP  ,
&T.C     DS    0F
.NEXTC1  ANOP  ,
&T.CTLEN DC    AL2(38)                .Control line text length
&T.CMCSF DC    XL2'0040'              .MCS flags
&T.CTEXT DS    0CL34                  .Control line text
&T.CTMID DC    CL8'ECF000I'           .message ID
&T.CTSUB DC    CL4'ECF'               .subsystem name
&T.CTBLK DC    CL1' '                 .blank
&T.CTCMD DC    CL21' '                .text data
&T.CLTYP DC    XL2'8000'              .line type
&T.CBYTE DC    X'00'                  .?
&T.CTOTL DC    AL1(10)                .total # of lines (default=10)
&T.C@SZE EQU   *-&T.C                 .Control line size
*
**       MLWTO Data Line
*
         AIF   ('&DSECT' EQ 'NO').NEXTD
&T.D     DSECT ,
         AGO   .NEXTD1
.NEXTD   ANOP  ,
&T.D     EQU   *
.NEXTD1  ANOP  ,
&T.DTLEN DC    AL2(74)                .data line text length
&T.DLTYP DC    XL2'2000'              .line type
&T.DDATA DC    CL70' '                .text data
&T.D@LEN EQU   *-&T.DDATA             .text length
&T.D@SZE EQU   *-&T.D                 .Data line size
&T.XSIZE EQU   20480                  .20K allows for 256 lines    @02C
&T.XMAXL EQU   20480/&T.D@SZE-2       .Max number of WTO lines     @02C
*
**       MLWTO Data End Line
*
         AIF   ('&DSECT' EQ 'NO').NEXTE
&T.E     DSECT ,
         AGO   .NEXTE1
.NEXTE   ANOP  ,
&T.E     EQU   *
.NEXTE1  ANOP  ,
&T.ETLEN DC    AL2(74)                .End line length
&T.ELTYP DC    XL2'3000'              .line type
&T.ETEXT DC    CL70'ECF000I END'      .text data
&T.E@SZE EQU   *-&T.E                 .line size
         MEND
./ ADD NAME=$ECFRCT  0105-21069-21304-1649-00190-00189-00036-BENMAR  01
*/********************************************************************
*/*                                                                  *
*/* Nane: $ECFRCT                                                    *
*/*                                                                  *
*/* Description: Started Task Recovery Control Table                 *
*/*                                                                  *
*/* Notes: None                                                      *
*/*                                                                  *
*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)                *
*/*                                                                  *
*/*                                                                  *
*/********************************************************************
*---------------------------CHANGE LOG-------------------------------*
*                                                                    *
* ID    Rel    Date       Author        Comments                     *
*--------------------------------------------------------------------*
* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
* @02 | V1R1 | 05022020 | Ben Marino  | Serviceability enhancements  *
*     |      |          |             |                              *
**********************************************************************
*-------+---------+---------+---------+---------+---------+---------+-*
         MACRO
         $ECFRCT
RCT      DSECT ,
RCTID    DS    CL4'RCT'         ID
RCTFLG1  DS    XL1              flags
RCT@EDIT EQU   X'80'            EDIT session in progress
RCT@BROW EQU   X'40'            BROWSE session in progress
RCT@UPDT EQU   X'20'            UPDATE changes pending
RCT@COPY EQU   X'10'            COPY sessin in progress
RCT@COMP EQU   X'08'            COMPRESS session in progress
RCT@RULE EQU   X'04'            Event rule session in progress
RCT@TSO  EQU   X'02'            TSO session in progress
RCT@VZV7 EQU   X'01'            -available
RCTFLGX  DS    XL3              more flags
         DS    0F
RCTSIZE  DS    F                storage size
RCTSUBP  DS    F                subpool
RCTBUFFA DS    F                buffer address
RCTBUFFL DS    F                buffer size
RCTSCROL DS    F                default scroll amount
RCTSCOFF DS    F                SCROLL {L|LEFT|R|RIGHT} default    @02C
RCTRSRZ4 DS    F                -available
RCTRSRZ5 DS    F                -available
         DS    0C
RCTSCRZN DS    CL2              zoned scroll amount
RCTRSZRZ DS    CL2              -available
RCTRECEN DS    CL16             {END|MORE} ID
         DS    0C
RCTCVERB DS    0CL21            current command verb
RCTCVRFX DS    CL7              -{EDIT=|BROWSE=} ID
RCTCVMEM DS    CL8              -member name
RCTCVTRL DS    CL6              -trailer
RCTCV@LN EQU   *-RCTCVERB
*
**       EDIT session control data
*
RCTEDIT  DS    0F
RCTEDBUF DS    F                buffer address
RCTEDBFL DS    F                buffer size
RCTERECS DS    F                member records
RCTEDLST DS    F                last record address
RCTEDCUR DS    F                current record location
RCTEDBIN DS    F                RecordNumber
RCTEDSCR DS    F                ScrollNumber
RCTEDELC DS    F                deleted record number
RCTEDREM DS    F                remaining record count
RCTEINSB DS    F                insert buffer address
RCTEINSL DS    F                insert buffer size
RCTEDNXT DS    F                next record address
RCTEOSET DS    F                record data offset
RCTEMOVL DS    F                record dta move length
RCTEREMR DS    F                remaining records
RCTEDWRK DS    F                workarea
         DS    0C
RCTEDMEM DS    CL8              session member name
RCTEDDDN DS    CL8              session DDname
RCTEDDSN DS    CL44             session DSName
RCTEDEYE DS    CL52             DSName(member) MLWTO header
RCT@EDYL EQU   *-RCTEDEYE
RCTEDNUM DS    0CL3             zoned RecordNumber
RCTED01  DS    CL1              -1st digit
RCTED02  DS    CL1              -2nd digit
RCTED03  DS    CL1              -3rd digit
RCT@EDNL EQU   *-RCTEDNUM
RCTEDDEL DS    CL3              deleted record number
RCTEDINS DS    CL3              inserted record number
RCT@EDZL EQU   *-RCTEDIT
*
**       BROWSE session control data
*
RCTBROW  DS    0F
RCTBRBUF DS    F                buffer address
RCTBRBFL DS    F                buffer size
RCTBRECS DS    F                member records
RCTBRLST DS    F                last record address
RCTBRCUR DS    F                current record location
RCTBRBIN DS    F                RecordNumber
RCTBRSCR DS    F                ScrollNumber
RCT@BRZL EQU   *-RCTBROW
RCTBRMEM DS    CL8              session member name
RCTBRDDN DS    CL8              session DDname
RCTBRDSN DS    CL44             session DSName
RCTBREYE DS    CL52             DSName(member) eye catcher
RCT@BRYL EQU   *-RCTBREYE
RCTBRNUM DS    0CL3             zoned RecordNumber
RCTBR01  DS    CL1              -1st digit
RCTBR02  DS    CL1              -2nd digit
RCTBR03  DS    CL1              -3rd digit
RCT@BRNL EQU   *-RCTBRNUM
         DS    0D
RCT@SIZE EQU   *-RCT
*
**       EDIT Record Data Map
*
EDT      DSECT ,
EDTRNUM  DS    CL3              3-digit record number
EDTRSEP  DS    CL1              separator
EDT@PRFX EQU   *-EDT            metadata
EDTDATA  DS    0CL80            record data
EDTVALUE DS    CL72             -record data
EDTBLANK DS    CL1              -blank
EDTSEQNM DS    CL7              -sequence number
EDT@DATL EQU   *-EDTDATA        record length
EDT@SIZE EQU   *-EDT
         DS    0XL(84-EDT@SIZE+1)  assembly ERROR if GT 84
*
**       Browse Record Data Map
*
BRW      DSECT ,
BRWRNUM  DS    CL3              3-digit record number
BRWRSEP  DS    CL1              separator
BRW@PRFX EQU   *-BRW            metadata
BRWDATA  DS    CL80             record data
BRW@DATL EQU   *-BRWDATA        record length
BRW@SIZE EQU   *-BRW
         DS    0XL(84-BRW@SIZE+1)  assembly ERROR if GT 84
*
**       COPY control data
*
CPY      DSECT ,
CPYID    DS    CL4'COPY'        ID
CPYRECS  DS    F                record count
CPYWORD  DS    F                work area
CPYWORD2 DS    F                work arwa
CPYIMEM  DS    CL8              FROM member
CPYIDDN  DS    CL8              FROM DDName
CPYIDSN  DS    CL44             FROM DSName
CPYOMEM  DS    CL8              TO member
CPYODDN  DS    CL8              TO DDName
CPYODSN  DS    CL44             TO DSName
CPYDATA  DS    CL100            work area
CPY@SIZE EQU   *-CPY
*
**       COMPRESS control data
*
CMP      DSECT ,
CMPID    DS    CL4'COMP'        ID
CMPRSV1  DS    F                -available
CMPRSV2  DS    F                -available
CMPRSV3  DS    F                -available
CMPDDNAM DS    CL8              DDname
CMPDSNAM DS    CL44             DSName
         DS    0F
CMPPAR   DS    F                IEBCOPY parm ptr                   @02M
CMPPARM  DS    0CL102           IEBCOPY JCL PARM=                  @02C
CMPPARML DS    AL2              -parm length
CMPPARMA DS    CL100            -parm data
CMP@PARL EQU   *-CMPPARM        parmlist
CMP@SIZE EQU   *-CMP
*
**       TSX control data
*
TSX      DSECT ,
TSXID    DS    CL4'TSX'         ID
TSXRC    DS    F                RC
TSXRSN   DS    F                RSN
TSXRSVR  DS    F                -available
         DS    0C
TSXCMD   DS    CL8              command name
TSXBUFF  DS    0CL80            command data buffer
TSXCHAR  DS    CL1              -blank charcter
TSXDATA  DS    CL79             -TSO command data
TSX@BUFZ EQU   *-TSXBUFF        TSO command data length
         DS    0F
TSXMGCR  DS    CL80             MGCR listform
TSXPLST  DS    CL128            listform
         DS    0D
TSX@SIZE EQU   *-TSX
         MEND
./ ADD NAME=$ECFREB  0142-21069-21304-1649-00233-00204-00193-BENMAR  04
         MACRO
&REB     $ECFREB
*/*******************************************************************/
*/*                                                                 */
*/* Name: $ECFREB                                                   */
*/*                                                                 */
*/* Description: Event Rule Element Block                           */
*/*                                                                 */
*/* Restrictions: REB size cannot exceed 256 bytes                  */
*/*                                                                 */
*/* Frequency: One for each event                                   */
*/*                                                                 */
*/* Residency: Resides in CSA SP=241                                */
*/*                                                                 */
*/* Cell Pool: ECFn-VnRn-REB-CELL-POOL                              */
*/*                                                                 */
*/* Notes: The ECF subsystem supports the following REB queues:     */
*/*                                                                 */
*/*        EVTREBQA - All defined event rules are represented       */
*/*                   by this queue. When an event is triggered,    */
*/*                   the REB is copied and added to one of the     */
*/*                   following processing queues:                  */
*/*                                                                 */
*/*                   EVTCMDQA Command events queue                 */
*/*                   EVTWTOQA WTO/R events queue                   */
*/*                   EVTSRVQA SRV events queue                     */
*/*                   EVTSTGQA SRV events staging queue             */
*/*                                                                 */
*/*                   The queue-related processing subtask is then  */
*/*                   posted to process the triggered event. When   */
*/*                   processing is complete, the REB cell element  */
*/*                   is returned to the REB cell pool.             */
*/*                                                                 */
*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
*/*                                                                 */
*/*                                                                 */
*/*******************************************************************/
*---------------------------CHANGE LOG-------------------------------*
*                                                                    *
* ID    Rel    Date       Author        Comments                     *
*--------------------------------------------------------------------*
* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
* @02 | V1R1 | 10112020 | Ben Marino  | WTOR reply ID 4-digit support*
* @03 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
* @04 | V2R3 | 07292021 | Ben Marino  | Enhanced Event Rule support  *
* @05 | V2R3 | 10272021 | Ben Marino  | Added SVC screening support  *
*     |      |          |             |                              *
*     |      |          |             |                              *
**********************************************************************
*--------+---------+---------+---------+---------+---------+--------+*
REB      DSECT ,
REBID    DS    CL4'REB'    ID start
REBCHPTR DS    A           REB chain pointer
REBFLG1  DS    XL1         flags
REB@ACTV EQU   X'80'       active indicator
REB@REFR EQU   X'40'       refresh in progress indicator
REB@REFD EQU   X'20'       refresh complete indicator
REB@WTOR EQU   X'10'       WTOR message indicator
REB@WACT EQU   X'08'       REB was active indicator
REB@RADD EQU   X'04'       rule added indicator
REB@TRIG EQU   X'02'       set trigger indicator
REB@AMSG EQU   X'01'       action message indicator
         DS    0X
REBFLG2  DS    XL1         flags
REB@RPLY EQU   X'80'       WTOR reply data available
REB@RDIS EQU   X'40'       event rule disabled indicator
REB@CMND EQU   X'20'       CMD message processing indicator        @04C
REB@WTOM EQU   X'10'       WTO message processing indicator        @04C
REB@NEXC EQU   X'08'       EXEC() not supplied indicator           @04C
REB@MTRG EQU   X'04'       MONITOR rule triggered indicator        @04C
REB@SVCA EQU   X'02'       SVC screening active indicator          @05C
REB@R2V7 EQU   X'01'       -available
         DS    0X
REBEVENT DS    XL1         Event Rule type                       15@05A
REB@CMDT EQU   X'F1'       TRAPCMD event rule type
REB@WTOT EQU   X'F2'       TRAPMSG event rule type
REB@MONT EQU   X'F3'       MONITOR event rule type
REB@SVCJ EQU   X'F4'       JOBSVCS event rule type
REB@SVCS EQU   X'F5'       STCSVCS event rule type
REB@SVCT EQU   X'F6'       TSUSVCS event rule type
REB@JOBI EQU   X'F7'       JOBINIT event rule type
REB@JOBT EQU   X'F8'       JOBTERM event rule type
REB@STCI EQU   X'F9'       STCINIT event rule type
REB@STCT EQU   X'FA'       STCTERM event rule type
REB@TSUI EQU   X'FB'       TSUINIT event rule type
REB@TSUT EQU   X'FC'       TSUTERM event rule type
         DS    0X
REBTYPE  DS    XL1         event rule trigger
REB@EOT  EQU   X'F1'       241 EOT event rule element
REB@EOM  EQU   X'F2'       242 EOM event rule element
REB@CMD  EQU   X'F3'       243 CMD event rule element
REB@WTO  EQU   X'F4'       244 WTO event rule element
REB@SYS  EQU   X'F5'       245 SYS event rule element              @04A
REB@SVC  EQU   X'F6'       246 SVC event rule element              @05A
         DS    0F
REBEVTA  DS    F           EVT address
REBREBX  DS    F           REBX address (SP=109 in ECF adrspace)
REBSRBA  DS    F           SRB cell address (set by SSI routines)
REBEDATL DS    F           &EVENT data length
REBSYSCT DS    F           ECF700E MONITOR WTO issued count        @04C
REBAVAL2 DS    F           -available
         DS    0X
REBJCLER DS    CL1         &JCLERR variable
REB@JCLY EQU   C'Y'        JCL error
REB@JCLN EQU   C'N'        no JCL error
         DS    0C
REBRUNAS DS    CL3         &RUNAS{JOB|STC|SUB}
REBMEMBR DS    CL8         &MEMBER name
REBEXEC  DS    CL8         &EXEC member name
         DS    0C
REBSYSID DS    CL4         &SYSID     -SMF system ID
REBABEND DS    CL4         &ABEND     -Snnn or Unnnn ABEND code
REBJOBNM DS    CL8         RUNAS=JOB  -job name
REBASTYP DS    CL3         &JOBTYPE   -Address space type{JOB|STC|TSU}
REBREPLY DS    CL2         &REPLYID-1 -2-byte WTOR &REPLYID        @02C
REBRPLY2 DS    CL2         &REPLYID-2 -4-byte WTOR &REPLYID        @02C
REBCONID DS    CL8         &CID       -Command issuer console ID
REBLPAR  DS    CL8         &LPAR      -LPAR name
REBASNAM DS    CL8         &JOBNAME   -job name
REBSDATE DS    CL8         &DATE      -event trigger system date
REBSTIME DS    CL8         &TIME      -event trigger system time
         DS    0C
REBETYPE DS    CL8         &EVENT type
REBEDATA DS    CL60        &EVENT data
REBE@DAL EQU   60          &EVENT data length (max 60-chars)
REBSDATA DS    CL68        &SYSDATA event data
REBS@DAL EQU   68          &SYSDATA event data (max 68-chars)
         DS    0D
REB@SIZE EQU   *-REB       REB element size
*
*        The following statement will cause assembly errors when
*        the REB size exceeds 256-bytes.
*
         DS    0XL(256-REB@SIZE+1)
         EJECT ,
*/******************************************************************/
*/*                                                                */
*/* NAME: REBX                                                     */
*/*                                                                */
*/* Description: Event Rule Block Extension                        */
*/*                                                                */
*/* Frequency: One for each Event Rule                             */
*/*                                                                */
*/* Residency: ECF address space in SP=109                         */
*/*                                                                */
*/* Cell Poll: ECFn-VnRn-REBX-CELL-POOL                            */
*/*                                                                */
*/* Pointed by: REBREBX field of REB                               */
*/*                                                                */
*/*                                                                */
*/* REBXVARS: Each variable is comprised of a 2-byte length        */
*/*           followed by the variable value.                      */
*/*                                                                */
*/*           +--------------------------------------------+       */
*/*           | Length | Variable length variable value    |       */
*/*           +--------------------------------------------+       */
*/*                                                                */
*/******************************************************************/
*--------+---------+---------+---------+---------+---------+--------*
REBX     DSECT
REBXID   DC    CL4'REBX'        ID
REBXFLG1 DS    XL1              flags
REBX@INI EQU   X'80'            initialization complete
REBX@NON EQU   X'40'            no input variables supplied
REBX@RV2 EQU   X'20'            -available
REBX@RV3 EQU   X'10'            -available
REBX@RV4 EQU   X'08'            -available
REBX@RV5 EQU   X'04'            -available
REBX@RV6 EQU   X'02'            -available
REBX2RV7 EQU   X'01'            -available
         DS    0X
REBXRVRZ DS    XL3              -available
REBXEXEC DS    CL8              member name
REBXRPLY DS    CL64             REPLY() data field
REBX@RPZ EQU   *-REBXRPLY       Max buffer length
REBXCMND DS    CL64             CMD() data field                   @04A
REBX@CMZ EQU   *-REBXCMND       Max buffer length                  @04A
REBXWTOM DS    CL64             WTO() data field                   @04A
REBX@WTZ EQU   *-REBXWTOM       Max buffer length                  @04A
         DS    0F
REBXPLIB DS    F                EVTPRLIB record address
REBXPCNT DS    F                EVTPRCNT record count
REBXVCNT DS    F                VARS data records count
REBXVEND DS    F                VARS data end address
         DS    0F
REBXVID  DS    CL4'VARS'        VARS ID
REBXVARS DS    CL480            variable data
REBX@VRZ EQU   *-REBXVARS       var-data max size (480-bytes)
         DS    0D
REBX@SZE EQU   *-REBX           REBX size
*
*        The following statement will cause assembly errors when
*        the REBX size exceeds 768-bytes.
*
         DS    0XL(768-REBX@SZE+1)
*
**       Event Rule Table Block
*
RTB      DSECT ,
RTBID    DS    CL4'RTB'         ID
RTBENTY  DS    F                number of RTBE entries
RTBCURR  DS    A                current RTBE address
RTBTEND  DS    A                end of RTB table address
RTB@SIZE EQU   *-RTB            RTB size
RTB@BLKZ EQU   4095             many entries
*
**       Event Rule Table Block Entry
*
RTBE     DSECT ,
RTBEID   DS    CL4'RTBE'        ID
RTBEFLG1 DS    XL1              flags
RTBE@ACT EQU   X'80'            rule active indicator
RTBE@RFR EQU   X'40'            rule refresh indicator
RTBE@ADD EQU   X'20'            rule add indicator
RTBE@DSP EQU   X'10'            subsystem command indicator
RTBE@DIS EQU   X'08'            rule disabled indicator
RTBE@RV5 EQU   X'04'            -available
RTBE@RV6 EQU   X'02'            -available
RTBE@RV7 EQU   X'01'            -available
RTBERUNS DS    CL3              RUNAS {STC|JOB|SUB}
RTBEMEMB DS    CL8              rule member name
RTBEMEMZ EQU   *-RTBEMEMB       rule memeber name length
RTBEJOBN DS    CL8              RUNAS=JOB jobname
RTBEJOBZ EQU   *-RTBEJOBN       jobname length
RTBE@SZE EQU   *-RTBE           RTBE size
RTBE@NUM EQU   (RTB@BLKZ/RTBE@SZE)-2
*
**       MCT - Monitor Control Table Entry
*
MCT      DSECT ,
MCTMONAS DS    CL8              {JOB|STC|TSU} address space name
MCT@MSZE EQU   *-MCT            entry size
         MEND
./ ADD NAME=$ECFSAF  0106-21185-21304-1649-00032-00074-00032-BENMAR  08
         MACRO
&ZSAF    $ECFSAF
*/*******************************************************************/
*/*                                                                 */
*/* Name: $ECFSAF                                                   */
*/*                                                                 */
*/* Description: RACROUTE Entity Entry Map                          */
*/*                                                                 */
*/* Restrictions: None                                              */
*/*                                                                 */
*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
*/*                                                                 */
*/*                                                                 */
*/*******************************************************************/
*---------------------------CHANGE LOG-------------------------------*
*                                                                    *
* ID    Rel    Date       Author        Comments                     *
*--------------------------------------------------------------------*
* @01 | V2R2 | 04172021 | Ben Marino  | Initial version              *
*     |      |          |             |                              *
**********************************************************************
*--------+---------+---------+---------+---------+---------+--------+*
ZSAF     DSECT ,
ZSAFALIL DS    AL2                     CMD alias length
ZSAFALIA DS    CL4                     CMD alias name
ZSAFNAML DS    AL2                     CMD length
ZSAFNAME DS    CL8                     CMD name
ZSAFENTL DS    AL2                     ENTITY name length
ZSAFENTY DS    CL32                    ENTITY name
ZSAF@TTZ EQU   *-ZSAFENTY              dynamic ENTITY length
ZSAF@SZE EQU   *-ZSAF                  entry size
         MEND
./ ADD NAME=$ECFSMF  0104-21304-21304-1649-00083-00053-00083-BENMAR  12
 LOGGER...
      SYS1.MACLIB(IXGSMF88)
      SYS1.SAMPLIB(IXGRPT1)
      SYS1.MACLIB(IFASMFR3) type 32
      CBT.V501.FILE522.PDS(SMFWTM00)

         MACRO
&ZSAF    $ECFSAF
*/*******************************************************************/
*/*                                                                 */
*/* Name: $ECFSMF                                                   */
*/*                                                                 */
*/* Function: SMF record type 255 map                               */
*/*                                                                 */
*/* Description: Record type 255 is written at normal or abnormal   */
*/*              termination of a SVC screened JOB, STC, TSU.       */
*/*                                                                 */
*/* Restrictions: None                                              */
*/*                                                                 */
*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
*/*                                                                 */
*/*                                                                 */
*/*******************************************************************/
*---------------------------CHANGE LOG-------------------------------*
*                                                                    *
* ID    Rel    Date       Author        Comments                     *
*--------------------------------------------------------------------*
* @01 | V2R3 | 10312021 | Ben Marino  | Initial version              *
*     |      |          |             |                              *
**********************************************************************
*--------+---------+---------+---------+---------+---------+--------+*
ZSMF     DSECT ,
*
**       SMF record header segment
*
ZSMFRPS  DS    0CL192              Length of standard and
*                                  self defining headers
ZSMFHDR  DS    0CL24               record header section
ZSMFLEN  DS    BL2                 recold length
ZSMFSEG  DS    BL2                 segment descriptor
ZSMFFLG  DS    BL1                 header flag byte
ZSMFTYPE DS    BL1                 record type 255
ZSMFTIME DS    CL4                 time record was written
ZSMFDATE DS    PL4                 date record was written
ZSMFSID  DS    CL4                 system ID
ZSMFSUBN DS    CL4                 subsystem name
ZSMFSUBT DS    BL2                 record subtype
*
**       Self defining section
*
ZSMFSDS  DS    0CL168              header length
ZSMFSOF  DS    F                   subsystem section offset
ZSMFSLN  DS    BL2                 subsystem section length
ZSMFSON  DS    BL2                 number of subsystem sections
*
ZSMFIOF  DS    F                   identification section offset
ZSMFILN  DS    BL2                 identification section length
ZSMFION  DS    BL2                 number of identification sections
*
ZSMFUOF  DS    F                   SVC activity section offset
ZSMFULN  DS    BL2                 SVC activity section length
ZSMFUON  DS    BL2                 number of SVC activity sections
*
ZSMFTOF  DS    F                   offset to completion section
ZSMFTLN  DS    BL2                 length of completion section
ZSMFTON  DS    BL2                 number of completion sections
*
**       Subsystem section
*
ZSMFPSS  DSECT
ZSMFTYP  DS    BL2                 subtype ID
ZSMFRS1  DS    BL1                 reserved
ZSMFPFX  DC    BL1                 flags
ZSMF@F1  EQU   X'80'               When bit is on, ......







ZSMF@SZ  EQU   *-ZSMF            record lenght
         MEND
./ ADD NAME=$ECFSRE  0107-21069-21304-1649-00069-00066-00009-BENMAR  15
         MACRO
&SRE     $ECFSRE
*/*******************************************************************/
*/*                                                                 */
*/* Name: $ECFSRE                                                   */
*/*                                                                 */
*/* Description: Service Request Element                            */
*/*                                                                 */
*/* Restrictions: None                                              */
*/*                                                                 */
*/* Frequency: One for each service request                         */
*/*                                                                 */
*/* Residency: Resides in CSA SP=241                                */
*/*                                                                 */
*/* Cell Pool: ECFn-V1R1-SRE-CELL-POOL                              */
*/*                                                                 */
*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
*/*                                                                 */
*/*                                                                 */
*/*******************************************************************/
*---------------------------CHANGE LOG-------------------------------*
*                                                                    *
* ID    Rel    Date       Author        Comments                     *
*--------------------------------------------------------------------*
* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
*     |      |          |             |                              *
**********************************************************************
*--------+---------+---------+---------+---------+---------+--------+*
SRE      DSECT ,
SREID    DS    CL4'SRE'            ID
SRECHPTR DS    A                   chain pointer
SREFLG1  DS    XL1                 flags
SRE@ADDR EQU   X'80'               ADD request indicator
SRE@REFR EQU   X'40'               REFRESH request indicator
SRE@DISP EQU   X'20'               DISPLAY request indicator
SRE@WACT EQU   X'10'               REB was active indicator
SRE@RCVY EQU   X'08'               STC recovery indicator
SRE@RS5  EQU   X'04'               -available
SRE@RS6  EQU   X'02'               -available
SRE@RS7  EQU   X'01'
         DS    0X
SREFLG2  DS    XL1                 -available
SREFLG3  DS    XL1                 -available
SREFLG4  DS    XL1                 -available
         DS    0F
SRESRBA  DS    A                   SRB cell address
SREREBA  DS    A                   REB address/zero
SRESCID  DS    A                   SSCMSCID command source
SRECNID  DS    A                   SSCMCNID console ID             @02A
         DS    0C
SRECALLR DS    CL3                 Caller ID
SRERUNAS DS    CL3                 RUNAS={STC|JOB|SUB}
SRERSVR1 DS    CL2                 -available
SREMEMBR DS    CL8                 rule member name
SREJOBNM DS    CL8                 rule job name
SRECART  DS    CL8                 SSCMCART CMD & Response token   @02A
SRECONS  DS    CL8                 SSCMSCNM Console name           @02A
SREUSER  DS    CL8                 ASXBUSR8 user ID                @02A
SREDATA  DS    CL72                request data
SREDATAL EQU   *-SREDATA           request data length
         DS    0D
SRE@SIZE EQU   *-SRE               size
*
*        The following statement will cause assembly errors when
*        the SRE size exceeds 256-bytes.
*
         DS    0XL(256-SRE@SIZE+1)
         MEND
./ ADD NAME=$ECFSRWA 0111-21069-21305-1428-00198-00192-00015-BENMAR  39
         MACRO
         $ECFSRWA
*/*******************************************************************/
*/*                                                                 */
*/* Name: $SRWA                                                     */
*/*                                                                 */
*/* Description: Recovery Work Area                                 */
*/*                                                                 */
*/* Notes: None                                                     */
*/*                                                                 */
*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
*/*                                                                 */
*/*                                                                 */
*/*******************************************************************/
*---------------------------CHANGE LOG-------------------------------*
*                                                                    *
* ID    Rel    Date       Author        Comments                     *
*--------------------------------------------------------------------*
* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
*     |      |          |             |                              *
**********************************************************************
*--------+---------+---------+---------+---------+---------+--------+*
SRWA     DSECT
SRWAID   DS    CL4'SRWA'               ID
SRWAFLG1 DS    XL1                     flags
SRWA@PER EQU   X'80'                   percolated ABEND
SRWA@NDP EQU   X'40'                   MODE=NODUMP indicator
SRWA@AOK EQU   X'20'                   retry successful indicator
SRWA@NWT EQU   X'10'                   WTO={NO|YES} $RETRY indicator
SRWA@1R4 EQU   X'08'                   -available
SRWA@1R5 EQU   X'04'                   -available
SRWA@1R6 EQU   X'02'                   -available
SRWA@1R7 EQU   X'01'                   -available
         DS    0X
SRWAWORK DS    XL1                     work flags
SRWA@WTO EQU   X'80'                   WTO issued
SRWA@SDI EQU   X'40'                   SDUMP issued
SRWA@EVT EQU   X'20'                   EVT supplied
SRWA@RV3 EQU   X'10'                   -available
SRWA@RV4 EQU   X'08'                   -available
SRWA@RV5 EQU   X'04'                   -available
SRWA@RV6 EQU   X'02'                   -available
SRWA@RV7 EQU   X'01'                   -available
         DS    0X
SRWASFLG DS    XL1                     copy of SRWAFLG1
SRWAVAIL DS    XL3                     -available
         DS    0X
SRWAILC  DS    XL1                     SDWAILC2 - Instruction Length
SRWAIC   DS    XL1                     SDWAICD2 - interrupt code
SRWATEA  DS    A                       SDWATRN2 - translation address
         DS    0X
SRWAAPSW DS    0XL8                    SDWAEC2  - ABEND PSW
SRWAPSW0 DS    A                       -PSW+0
SRWAPSW4 DS    A                       -PSW+4
SRWAPSWZ EQU   *-SRWAAPSW              keep it togeter
         DS    0X
SRWADATA DS    0XL16                   -PSW data
SRWADAT0 DS    XL4                     -PSW data+0
SRWADAT4 DS    XL4                     -PSW data+4
SRWADAT8 DS    XL4                     -PSW data+8
SRWADATC DS    XL4                     -PSW Data+12
SRWADATZ EQU   *-SRWADATA              keep it together
         DS    0F
SRWARTRY DS    A                       retry address
SRWARSVT DS    A                       -available
SRWARSVS DS    A                       -available
SRWARSVW DS    A                       -available
SRWARSVX DS    A                       -available
SRWARSVY DS    A                       -available
SRWARSVZ DS    A                       -available
         DS    0F
SRWASUBN DS    CL4                     subsystem name
SRWASDRC DS    XL4                     SDUMP return code
SRWABEND DS    XL4                     ABEND code
SRWARSN  DS    XL4                     ABEND reason code
SRWACONV DS    XL8                     general work area
         DS    0X
SRWACODE DS    0CL8                    ABEND hex code
SRWAHBIT DS    CL1                     -byte one
SRWATYPE DS    CL1                     -system(S), user(U)
SRWASYS  DS    CL3                     -system ABEND
SRWAUSER DS    CL3                     -user ABEND
SRWACODL EQU   *-SRWACODE              keep it together
         DS    0F
SRWASAVE DS    18F                     ECFRTM save area
*
**       ABEND general registers
*
SRWABNRG DS    0XL64                   ABEND registers
SRWABN0  DS    F                       -reg0
SRWABN1  DS    F                       -reg1
SRWABN2  DS    F                       -reg2
SRWABN3  DS    F                       -reg3
SRWABN4  DS    F                       -reg4
SRWABN5  DS    F                       -reg5
SRWABN6  DS    F                       -reg6
SRWABN7  DS    F                       -reg7
SRWABN8  DS    F                       -reg8
SRWABN9  DS    F                       -reg9
SRWABN10 DS    F                       -reg10
SRWABN11 DS    F                       -reg11
SRWABN12 DS    F                       -reg12
SRWABN13 DS    F                       -reg13
SRWABN14 DS    F                       -reg14
SRWABN15 DS    F                       -reg15
SRWA@ABL EQU   *-SRWABNRG
*
**       Retry general registers
*
SRWAGPRS DS    0XL64                   RETRY registers
SRWAGR0  DS    F                       -reg0
SRWAGR1  DS    F                       -reg1
SRWAGR2  DS    F                       -reg2
SRWAGR3  DS    F                       -reg3
SRWAGR4  DS    F                       -reg4
SRWAGR5  DS    F                       -reg5
SRWAGR6  DS    F                       -reg6
SRWAGR7  DS    F                       -reg7
SRWAGR8  DS    F                       -reg8
SRWAGR9  DS    F                       -reg9
SRWAGR10 DS    F                       -reg10
SRWAGR11 DS    F                       -reg11
SRWAGR12 DS    F                       -reg12
SRWAGR13 DS    F                       -reg13
SRWAGR14 DS    F                       -reg14
SRWAGR15 DS    F                       -reg15
SRWA@GRL EQU   *-SRWAGPRS
*
**       RECPARM recovery data
*
SRWARECP DS    0CL24                   RECPARM
SRWALMOD DS    CL8                     LMOD name
SRWASECT DS    CL8                     CSECT name
SRWARECR DS    CL8                     recovery routine name
SRWARECL EQU   *-SRWARECP              RECPARM size
         DS    0D
SRWA@SZE EQU   *-SRWA                  SRWA length
*
*        The following statement will cause assembly errors when
*        the SRWA size exceeds 512-bytes.
*
         DS    0XL(512-SRWA@SZE+1)
*
**       SRWA Extension
*
SRWX     DSECT ,
SRWXWTO  DS    0CL100                  WTO listform
         DS    XL4                     -textlen+MCS+MSGID
SRWXWMID DS    CL8                     -message ID
SRWXWSUB DS    CL4                     -subsystem name
         DS    CL15                    -message text
SRWXWMOD DS    CL8                     -ABENDing module name
         DS    CL1                     -separator
SRWXWRTN DS    CL8                     -ABENDing routine name
         DS    CL7                     -separator
SRWXTYPE DS    CL1                     -system(S); user(U)
SRWXWCOD DS    CL3                     -system/user ABEND code
         DS    CL5                     -separator
SRWXWRSN DS    CL8                     -ABEND reason code
         DS    XL4                     -DESC+ROUT codes
         DS    CL24                    -filler
         DS    0D
SRWXWTOL EQU   *-SRWXWTO               WTO listform
*
**       SDUMP Title work area
*
SRWXDUMP DS    0CL100                  SDUMP listform
         DS    XL4                     -flags
         DS    AL4                     -DCB address
         DS    AL4                     -storage list
SRWXDATA DS    AL4                     -title length byte addr
         DS    AL4                     -DCB address
         DS    AL4                     -curent/other ASIDs
         DS    AL4                     -ASIDLIST address
         DS    AL4                     -SUMLIST address
         DS    AL4                     -reserved
         DS    AL4                     -reserved
SRWXDUSR DS    CL1                     -text length
SRWXDSUB DS    CL4                     -subsystem name
         DS    CL15                    -title text
SRWXDMOD DS    CL8                     -ABENDing module name
         DS    CL1                     -separator
SRWXDRTN DS    CL8                     -ABENDing routine name
         DS    CL1                     -title text
SRWXDCOD DS    CL4                     -ABEND code
         DS    CL1                     -title text
SRWXDRSN DS    CL8                     -RSN code
         DS    CL9                     -filler
SRWXDMPL EQU   *-SRWXDUMP              SDUMP listform
         DS    0D
SRWX@SZE EQU   *-SRWX                  SRWX length
*
*        The following statement will cause assembly errors when
*        the SRWX size exceeds 256-bytes.
*
         DS    0XL(256-SRWX@SZE+1)
         MEND
./ ADD NAME=$ECFSSVT 0105-21069-21304-1649-00076-00075-00014-BENMAR  22
         MACRO
         $ECFSSVT &DSECT=YES
*/*******************************************************************/
*/*                                                                 */
*/* Name: $SSVT                                                     */
*/*                                                                 */
*/* Description: Subsystem Vector Table matrix                      */
*/*                                                                 */
*/* Function Codes: 4  - EOT - SVC 3                                */
*/*                 8  - EOM - MEMTERM                              */
*/*                 9  - WTO/WTOR - SVC 35                          */
*/*                 10 - MGCR/E - SVC 34                            */
*/*                 14 - WTL - SVC                                  */
*/*                                                                 */
*/* WARNING: If you don't understand it, don't change it!           */
*/*                                                                 */
*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
*/*                                                                 */
*/*                                                                 */
*/*******************************************************************/
*---------------------------CHANGE LOG-------------------------------*
*                                                                    *
* ID    Rel    Date       Author        Comments                     *
*--------------------------------------------------------------------*
* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
*     |      |          |             |                              *
**********************************************************************
*--------+---------+---------+---------+---------+---------+--------+*
         AIF   ('&DSECT' EQ 'NO').NDSCT
$SSVT    DSECT
         AGO   .XDSCT
.NDSCT   ANOP  ,
$SSVT    DS    0F
.XDSCT   ANOP  ,
         DC    H'00'              .reserved
$SSVTFC  DC    H'10'              .max functions
         DS    0XL256             .
         DC    XL3'000000'        .
         DC    XL1'01'            .EOT
         DC    XL3'000000'        .
         DC    XL1'02'            .EOM
         DC    XL1'03'            .WTO/WTOR - SVC 35
         DC    XL1'04'            .MGCR - SVC 34
         DC    61F'00'            .
$SSVTMX  EQU   *-$SSVT            .fixed area size
*                                 .
$SSVTEPA DS    0F                 .
$SSVTEOT DC    V(ECFEOT)          .ECFEOT EPA
$SSVTEOM DC    V(ECFEOM)          .ECFEOM EPA
$SSVTWTO DC    V(ECFS35)          .ECFS35 EPA
$SSVTCMD DC    V(ECFS34)          .ECFS34 EPA
         DC    240F'00'           .
         ORG   $SSVTEPA+1024      .function routines - 1024-bytes
$SSVT@SZ EQU   *-$SSVT            .SSVT size
*
**       Subsystem control table extension
*
SCTX     DSECT ,
SCTXID   DS    CL4'SCTX'         ID
SCTXEVTA DS    F                 EVT address
SCTXEVTZ DS    F                 EVT size
SCTXSPNM DS    F                 EVT subpool
SCTXPCLX DS    F                 SLX non-reusable                  @02C
SCTXCPFX DS    CL1               ECF command prefix
SCTXSREQ DS    CL3               SSREQ={NO|YES} option
SCTXSTCN DS    CL8               ECF owner STCname
SCTXLPTK DS    XL8               CSVDYLPA ADD token                @02A
SCTX@SZE EQU   *-SCTX            SCTX size
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $SSVT - DSECT operand is invalid'
         MEXIT ,
         MEND
./ ADD NAME=$ECFSTK  0135-21069-21307-1028-00174-00124-00065-BENMAR  31
         MACRO
&STK     $ECFSTK &STKE=16,&SDSA=8
*/*******************************************************************/
*/*                                                                 */
*/* Name: $ECFSTK                                                   */
*/*                                                                 */
*/* Description: Save Area and Recovery Stack                       */
*/*                                                                 */
*/* Notes: &STKE sets the number of STKE stack entries;             */
*/*        &SDSA set the number of service routines dynamic         */
*/*        storage areas (DSA).                                     */
*/*                                                                 */
*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
*/*                                                                 */
*/*                                                                 */
*/*******************************************************************/
*---------------------------CHANGE LOG-------------------------------*
*                                                                    *
* ID    Rel    Date       Author        Comments                     *
*--------------------------------------------------------------------*
* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
* @02 | V1R1 | 10282020 | Ben Marino  | Serviceability enhancements  *
* @03 | V2R1 | 03292021 | Ben Marino  | zOS serviceability support   *
* @04 | V2R1 | 11072021 | Ben Marino  | Serviceability enhancements  *
*     |      |          |             |                              *
**********************************************************************
*--------+---------+---------+---------+---------+---------+--------+*
*
**       STKE - Stack Entry
*
STKE     DSECT ,
STKEPLX  DS    F             .1st word
STKEBWD  DS    F             .chain pointer
STKEFWD  DS    F             .chain pointer
STKEGR14 DS    F             .return register
STKEGR15 DS    F             .entry register
STKEGR0  DS    F             .parm register
STKEGR1  DS    F             .parm register
STKEGR2  DS    F             .general register
STKEGR3  DS    F             .general register
STKEGR4  DS    F             .general register
STKEGR5  DS    F             .general register
STKEGR6  DS    F             .general register
STKEGR7  DS    F             .general register
STKEGR8  DS    F             .general register
STKEGR9  DS    F             .STK register
STKEGR10 DS    F             .BASE register
STKEGR11 DS    F             .EVT register
STKEGR12 DS    F             .DSA register
STKE@SVZ EQU   *-STKE
*
STKEIDX  DS    0F
STKEKEY  DS    F             .PSW key                              @02C
STKERSVW DS    F             .-available
STKERSXX DS    F             .-available
STKERSXY DS    F             .-available
STKE@IDZ EQU   *-STKEIDX
         DS    0F
STKESRWA DS    XL(SRWA@SZE)  .SRWA recovery work area
STKE@SZE EQU   *-STKE        .entry size
*
**       SDSA - Stack entry
*
SDSA     DSECT ,
SDSADSA  DS    XL256         .service routines DSA
SDSADSAX DS    XL256         .service routine DSA extension-I      @02C
SDSADSAY DS    XL256         .service routine DSA extension-II     @02A
SDSADSAZ DS    XL256         .service routine DSA extension-III    @02A
SDSA@SZE EQU   *-SDSA        .entry size
SDSA@MAX EQU   (SDSA@SZE*&SDSA) .DSA stack size
*
**       STK - Stack
*
STK      DSECT ,
STKID    DS    CL4'STK'      .start of stack ID
STKSTKET DS    F             .top STKE entry address
STKSTKEC DS    F             .current STKE entry address
STKSTKEL DS    F             .last STKE entry address
STKASCB  DS    F             .subsysytem ASCB address              @03C
STKEVTA  DS    F             .EVT address
STKRTMA  DS    F             .ECFRTM recovery manager EPA
STKCSAA  DS    F             .ECFCSA service routine EPA
STKSSIA  DS    F             .ECFSSI service routine EPA
STKSRIA  DS    F             .ECFENV conventions SRVentry EPA
STKSRXA  DS    F             .ECFENV conventions SRVexit EPA
STKSBIA  DS    F             .ECFENV conventions SUBentry EPA
STKSBXA  DS    F             .ECFENV conventions SUBexit EPA
STKWTOA  DS    F             .ECFWTO WTO service routine EPA
STKTRCA  DS    F             .ECFTRC trace service routine EPA
STKRECT  DS    F             .ECFTRC ABEND count
STKDDCB  DS    F             .DBUGLOG DCB address
STKTDCB  DS    F             .TRCELOG DCB address
STKPDCB  DS    F             .PARMLIB DCB address
STKSDSAT DS    F             .service routines DSA table
STKSDSAC DS    F             .current DSA entry address
STKSDSAL DS    F             .last DSA entry address
STKPRLIB DS    F             .I/O buffer address
STKPRBUF DS    F             .I/O buffer size
STKPREND DS    F             .I/O buffer end-address
STKPRCNT DS    F             .I/O buffer records
STKB064K DS    F             .I/O buffer size (64K)
STKB064R DS    F             .I/O buffer # of records
STKB128K DS    F             .I/O buffer size (128K)
STKB128R DS    F             .I/O buffer # of records
STKB256K DS    F             .I/O buffer size (256K)
STKB256R DS    F             .I/O buffer # of records
STKRTBAD DS    F             .I/O RTB table address
STKRTBSZ DS    F             .I/O RTB table size
STKRSVZ0 DS    F             .-available
STKRSVZ1 DS    F             .-available
STKRSVZ2 DS    F             .-available
STKRSVZ3 DS    F             .-available
STKRSVZ4 DS    F             .-available
STKRSVZ5 DS    F             .-available
STKRSVZ6 DS    F             .-available
STKRSVZ7 DS    F             .-available
STKDIESV DS    4F            .ECFDIE(IDI) asynchronous save area   @02C
*
STKFLAGS DS    0F            .
STKFLG1  DS    XL1           .flags
STK@DBUG EQU   X'80'         .DEBUG={ON|OFF} option indicator
STK@DPRM EQU   X'40'         .DEBUG={ON|OFF} specified by JCL PARM
STK@TRCE EQU   X'20'         .TRACE={ON|OFF} option indicator
STK@TPRM EQU   X'10'         .TRACE={ON|OFF} specified by JCL PARM
STK@SUPR EQU   X'08'         .Supervisor state indicator           @01C
STK@HZOS EQU   X'04'         .zOS host system indicator            @03C
STK@HLPA EQU   X'02'         .zOS ECFCSM loaded via CSVDYLPA ADD   @03C
STK@CWTO EQU   X'01'         .COMPWTO={NO|YES} option indicator    @03C
         DS    0X
STKFLG2  DS    XL1           .flags                                @02A
STK@GREC EQU   X'80'         .records found indicator              @02A
STK@DLOG EQU   X'40'         .DBUGLOG open indicator               @02A
STK@TLOG EQU   X'20'         .TRCELOG open indicator               @02A
STK@191I EQU   X'10'         .ECF191I issued indicator             @02A
STK@DUMP EQU   X'08'         .SDUMP=(NO|YES} indicator             @02A
STK@CURR EQU   X'04'         .CSVDYLPA delete TYPE=CURRENT         @02A
STK@SUBS EQU   X'02'         .$TOKEN create issued by ECFSUB       @02A
STK@2RV7 EQU   X'01'         .-available                           @02A
         DS    0X
STKFLG3  DS    XL1           .flags                                @03C
STK@JINI EQU   X'80'         .INI={member} specified by JCL PARM
STK@JSUB EQU   X'40'         .SUB={ECF|any} specified by JCL parm
STK@JCMD EQU   X'20'         .CMD={CMD=?} specified by JCL parm
STK@JOPT EQU   X'10'         .OPT={SHOW|NOSHOW} specified by JCL parm
STK@JSSM EQU   X'08'         .SSM={ECFSSM|Lmod} specified by JCL parm
STK@JCSA EQU   X'04'         .CSA={NO|YES} specified by JCL parm
STK@JRCV EQU   X'02'         .RCV={NO|YES} specified by JCL parm
STK@3RV7 EQU   X'01'         .-available
         DS    0X
STKFLG4  DS    XL1           .flags                                @03A
STK@ATTC EQU   X'80'         .ECFSRV subtask ATTACH entry          @04A
STK@4RV1 EQU   X'40'         .-available
STK@4RV2 EQU   X'20'         .-available
STK@4RV3 EQU   X'10'         .-available
STK@4RV4 EQU   X'08'         .-available
STK@4RV5 EQU   X'04'         .-available
STK@4RV6 EQU   X'02'         .-available
STK@4RV7 EQU   X'01'         .-available
STK@FLGS EQU   *-STKFLAGS                                          @02A
         DS    0C
STKSYSID DS    CL4           .system name                          @03A
STKSUBNM DS    CL4           .subsysytem name                      @03A
STKLMOD  DS    CL8           .LMOD ID
STKLPATK DS    XL8           .CSVDYLPA ADD token                   @03A
         DS    0D
STK@PRFX EQU   *-STK
STKSRWX  DS    XL(SRWX@SZE)  .ECFRTM SRWX work area
         DS    0D
STK@PTRS EQU   *-STK
STKSTKES DS    0F
STKSTKE  DS    XL(STKE@SZE*&STKE) .stack size
STKEND   DS    0D            .end of stack
STK@SIZE EQU   *-STK
         MEND  ,
./ ADD NAME=$ECFSVN  0105-21310-21330-1407-00294-00294-00135-BENMAR  29
         MACRO
*/*******************************************************************/
*/*                                                                 */
*/* Name: $ECFSVN                                                   */
*/*                                                                 */
*/* Description: SVC screening name table                           */
*/*                                                                 */
*/* SVCE table: Maps SVC number with MVS SVC macro names.           */
*/*                                                                 */
*/* Restrictions: All offsets fixed by architecture. Offset changes */
*/*               require complete product reassembly and relink.   */
*/*                                                                 */
*/* Restrictions: None                                              */
*/*                                                                 */
*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
*/*                                                                 */
*/*                                                                 */
*/*******************************************************************/
*---------------------------CHANGE LOG-------------------------------*
*                                                                    *
* ID    Rel    Date       Author        Comments                     *
*--------------------------------------------------------------------*
* @01 | V2R3 | 09172021 | Ben Marino  | Initial version              *
*     |      |          |             |                              *
**********************************************************************
*--------+---------+---------+---------+---------+---------+--------+*
&SVCN    $ECFSVN &DSECT=YES
         AIF   ('&DSECT' EQ 'YES').YDSECT
         AGO   .NDSECT
.YDSECT  ANOP  ,
SVCN     DSECT ,
         AGO   .GOSVCN
.NDSECT  ANOP  ,
SVCN     DS    0D
.GOSVCN  ANOP  ,
SVCNAME  EQU   *
SVCN0    DC    CL32'EXCP/XDAP'
SVCN1    DC    CL32'WAIT/WAITR/PRTOV'
SVCN2    DC    CL32'POST'
SVCN3    DC    CL32'EXIT'
SVCN4    DC    CL32'GETMAIN'
SVCN5    DC    CL32'FREEMAIN'
SVCN6    DC    CL32'LINK/LINKX'
SVCN7    DC    CL32'XCTL/XCTLX'
SVCN8    DC    CL32'LOAD'
SVCN9    DC    CL32'DELETE'
SVCN10   DC    CL32'GETMAIN/FREEMAIN'
SVCN11   DC    CL32'TIME'
SVCN12   DC    CL32'SYNCH/SYNCHX'
SVCN13   DC    CL32'ABEND'
SVCN14   DC    CL32'SPIE'
SVCN15   DC    CL32'ERREXCP'
SVCN16   DC    CL32'PURGE'
SVCN17   DC    CL32'RESTORE'
SVCN18   DC    CL32'BLDL/FIND'
SVCN19   DC    CL32'OPEN'
SVCN20   DC    CL32'CLOSE'
SVCN21   DC    CL32'STOW'
SVCN22   DC    CL32'-OPEN (TYPE=J)'
SVCN23   DC    CL32'CLOSE (TYPE=T)'
SVCN24   DC    CL32'DEVTYPE'
SVCN25   DC    CL32'TRKBAL'
SVCN26   DC    CL32'CATALOG/INDEX/LOCATE'
SVCN27   DC    CL32'OBTAIN'
SVCN28   DC    CL32'reserved'
SVCN29   DC    CL32'SCRATCH'
SVCN30   DC    CL32'RENAME'
SVCN31   DC    CL32'FEOV'
SVCN32   DC    CL32'REALLOC'
SVCN33   DC    CL32'IOHALT'
SVCN34   DC    CL32'MGCR/MGCRE/QEDIT'
SVCN35   DC    CL32'-WTO/WTOR'
SVCN36   DC    CL32'WTL'
SVCN37   DC    CL32'SEGLD/SEGWT'
SVCN38   DC    CL32'reserved'
SVCN39   DC    CL32'LABEL'
SVCN40   DC    CL32'EXTRACT'
SVCN41   DC    CL32'IDENTIFY'
SVCN42   DC    CL32'ATTACH/ATTACHX'
SVCN43   DC    CL32'CIRB'
SVCN44   DC    CL32'CHAP'
SVCN45   DC    CL32'OVLYBRCH'
SVCN46   DC    CL32'TTIMER/STIMERM'
SVCN47   DC    CL32'STIMER/STIMERM'
SVCN48   DC    CL32'DEQ'
SVCN49   DC    CL32'reserved'
SVCN50   DC    CL32'reserved'
SVCN51   DC    CL32'SNAP/SNAPX/SDUMP/SDUMPX'
SVCN52   DC    CL32'RESTART'
SVCN53   DC    CL32'RELEX'
SVCN54   DC    CL32'DISABLE'
SVCN55   DC    CL32'EOV'
SVCN56   DC    CL32'ENQ/RESERVE'
SVCN57   DC    CL32'FREEDBUF'
SVCN58   DC    CL32'RELBUF/REQBUF'
SVCN59   DC    CL32'OLTEP'
SVCN60   DC    CL32'STAE/ESTAE/ESTEX'
SVCN61   DC    CL32'TSO/E only'
SVCN62   DC    CL32'DETACH'
SVCN63   DC    CL32'CHKPT'
SVCN64   DC    CL32'RDJFCB'
SVCN65   DC    CL32'reserved'
SVCN66   DC    CL32'BTAMTEST'
SVCN67   DC    CL32'reserved'
SVCN68   DC    CL32'SYNADAF/SYNADRLS'
SVCN69   DC    CL32'BSP'
SVCN70   DC    CL32'reserved'
SVCN71   DC    CL32'ASGNBFR/BUFINQ/RLSEBFR'
SVCN72   DC    CL32'no macro'
SVCN73   DC    CL32'SPAR'
SVCN74   DC    CL32'DAR'
SVCN75   DC    CL32'DQUEUE'
SVCN76   DC    CL32'no macro'
SVCN77   DC    CL32'Reserved'
SVCN78   DC    CL32'LPACE'
SVCN79   DC    CL32'STATUS'
SVCN80   DC    CL32'Reserved'
SVCN81   DC    CL32'SETPRT/SETDEV'
SVCN82   DC    CL32'Reserved'
SVCN83   DC    CL32'SMFWTM/SMFEWTM'
SVCN84   DC    CL32'GRAPHICS'
SVCN85   DC    CL32'no macro'
SVCN86   DC    CL32'no longer supported'
SVCN87   DC    CL32'DOM'
SVCN88   DC    CL32'Reserved'
SVCN89   DC    CL32'Reserved'
SVCN90   DC    CL32'Reserved'
SVCN91   DC    CL32'VOLSTAT'
SVCN92   DC    CL32'TCBEXCP'
SVCN93   DC    CL32'TGET/TPUT/TPG'
SVCN94   DC    CL32'STCC'
SVCN95   DC    CL32'SYSEVENT'
SVCN96   DC    CL32'STAX'
SVCN97   DC    CL32'TSO/E only'
SVCN98   DC    CL32'PROTECT'
SVCN99   DC    CL32'DYNALLOC'
SVCN100  DC    CL32'TSO/E only'
SVCN101  DC    CL32'QTIP'
SVCN102  DC    CL32'AQCTL'
SVCN103  DC    CL32'XLATE'
SVCN104  DC    CL32'TOPCTL'
SVCN105  DC    CL32'IMGLIB'
SVCN106  DC    CL32'Reserved'
SVCN107  DC    CL32'MODESET'
SVCN108  DC    CL32'Reserved'
SVCN109  DC    CL32'ESR'
SVCN110  DC    CL32'Reserved'
SVCN111  DC    CL32'no macro'
SVCN112  DC    CL32'PGRLSE'
SVCN113  DC    CL32'PGFIX/PGFREE/PGLOAD/PGOUT/PGANY'
SVCN114  DC    CL32'EXCPVR'
SVCN115  DC    CL32'Reserved'
SVCN116  DC    CL32'ESR'
SVCN117  DC    CL32'DEBCHK'
SVCN118  DC    CL32'Reserved'
SVCN119  DC    CL32'TESTAUTH'
SVCN120  DC    CL32'GETMAIN/FREEMAIN'
SVCN121  DC    CL32'VSAM'
SVCN122  DC    CL32'ESR'
SVCN123  DC    CL32'PURGEDQ'
SVCN124  DC    CL32'TPIO'
SVCN125  DC    CL32'EVENTS'
SVCN126  DC    CL32'Reserved'
SVCN127  DC    CL32'Reserved'
SVCN128  DC    CL32'Reserved'
SVCN129  DC    CL32'Reserved'
SVCN130  DC    CL32'RACHECK'
SVCN131  DC    CL32'RACINIT'
SVCN132  DC    CL32'RACLIST/RACXTRT/ICHEINTY'            Y
SVCN133  DC    CL32'RACDEF'
SVCN134  DC    CL32'Reserved'
SVCN135  DC    CL32'Reserved'
SVCN136  DC    CL32'Reserved'
SVCN137  DC    CL32'ESR'
SVCN138  DC    CL32'PGSER'
SVCN139  DC    CL32'CVAF'
SVCN140  DC    CL32'Reserved'
SVCN141  DC    CL32'Reserved'
SVCN142  DC    CL32'Reserved'
SVCN143  DC    CL32'GENKEY/RETKEY/CIPHER/EMK'
SVCN144  DC    CL32'Reserved'
SVCN145  DC    CL32'Reserved'
SVCN146  DC    CL32'BPESVC'
SVCN147  DC    CL32'Reserved'
SVCN148  DC    CL32'Reserved'
SVCN149  DC    CL32'Reserved'
SVCN150  DC    CL32'Reserved'
SVCN151  DC    CL32'Reserved'
SVCN152  DC    CL32'Reserved'
SVCN153  DC    CL32'Reserved'
SVCN154  DC    CL32'Reserved'
SVCN155  DC    CL32'Reserved'
SVCN156  DC    CL32'Reserved'
SVCN157  DC    CL32'Reserved'
SVCN158  DC    CL32'Reserved'
SVCN159  DC    CL32'Reserved'
SVCN160  DC    CL32'Reserved'
SVCN161  DC    CL32'Reserved'
SVCN162  DC    CL32'Reserved'
SVCN163  DC    CL32'Reserved'
SVCN164  DC    CL32'Reserved'
SVCN165  DC    CL32'Reserved'
SVCN166  DC    CL32'Reserved'
SVCN167  DC    CL32'Reserved'
SVCN168  DC    CL32'Reserved'
SVCN169  DC    CL32'Reserved'
SVCN170  DC    CL32'Reserved'
SVCN171  DC    CL32'Reserved'
SVCN172  DC    CL32'Reserved'
SVCN173  DC    CL32'Reserved'
SVCN174  DC    CL32'Reserved'
SVCN175  DC    CL32'Reserved'
SVCN176  DC    CL32'Reserved'
SVCN177  DC    CL32'Reserved'
SVCN178  DC    CL32'Reserved'
SVCN179  DC    CL32'Reserved'
SVCN180  DC    CL32'Reserved'
SVCN181  DC    CL32'Reserved'
SVCN182  DC    CL32'Reserved'
SVCN183  DC    CL32'Reserved'
SVCN184  DC    CL32'Reserved'
SVCN185  DC    CL32'Reserved'
SVCN186  DC    CL32'Reserved'
SVCN187  DC    CL32'Reserved'
SVCN188  DC    CL32'Reserved'
SVCN189  DC    CL32'Reserved'
SVCN190  DC    CL32'Reserved'
SVCN191  DC    CL32'Reserved'
SVCN192  DC    CL32'Reserved'
SVCN193  DC    CL32'Reserved'
SVCN194  DC    CL32'Reserved'
SVCN195  DC    CL32'Reserved'
SVCN196  DC    CL32'Reserved'
SVCN197  DC    CL32'Reserved'
SVCN198  DC    CL32'Reserved'
SVCN199  DC    CL32'Reserved'
SVCN200  DC    CL32'User Selectable'
SVCN201  DC    CL32'User Selectable'
SVCN202  DC    CL32'User Selectable'
SVCN203  DC    CL32'User Selectable'
SVCN204  DC    CL32'User Selectable'
SVCN205  DC    CL32'User Selectable'
SVCN206  DC    CL32'User Selectable'
SVCN207  DC    CL32'User Selectable'
SVCN208  DC    CL32'User Selectable'
SVCN209  DC    CL32'User Selectable'
SVCN210  DC    CL32'User Selectable'
SVCN211  DC    CL32'User Selectable'
SVCN212  DC    CL32'User Selectable'
SVCN213  DC    CL32'User Selectable'
SVCN214  DC    CL32'User Selectable'
SVCN215  DC    CL32'User Selectable'
SVCN216  DC    CL32'User Selectable'
SVCN217  DC    CL32'User Selectable'
SVCN218  DC    CL32'User Selectable'
SVCN219  DC    CL32'User Selectable'
SVCN220  DC    CL32'User Selectable'
SVCN221  DC    CL32'User Selectable'
SVCN222  DC    CL32'User Selectable'
SVCN223  DC    CL32'User Selectable'
SVCN224  DC    CL32'User Selectable'
SVCN225  DC    CL32'User Selectable'
SVCN226  DC    CL32'User Selectable'
SVCN227  DC    CL32'User Selectable'
SVCN228  DC    CL32'User Selectable'
SVCN229  DC    CL32'User Selectable'
SVCN230  DC    CL32'User Selectable'
SVCN231  DC    CL32'User Selectable'
SVCN232  DC    CL32'User Selectable'
SVCN233  DC    CL32'User Selectable'
SVCN234  DC    CL32'User Selectable'
SVCN235  DC    CL32'User Selectable'
SVCN236  DC    CL32'User Selectable'
SVCN237  DC    CL32'User Selectable'
SVCN238  DC    CL32'User Selectable'
SVCN239  DC    CL32'User Selectable'
SVCN240  DC    CL32'User Selectable'
SVCN241  DC    CL32'User Selectable'
SVCN242  DC    CL32'User Selectable'
SVCN243  DC    CL32'User Selectable'
SVCN244  DC    CL32'User Selectable'
SVCN245  DC    CL32'User Selectable'
SVCN246  DC    CL32'User Selectable'
SVCN247  DC    CL32'User Selectable'
SVCN248  DC    CL32'User Selectable'
SVCN249  DC    CL32'User Selectable'
SVCN250  DC    CL32'User Selectable'
SVCN251  DC    CL32'User Selectable'
SVCN252  DC    CL32'User Selectable'
SVCN253  DC    CL32'User Selectable'
SVCN254  DC    CL32'User Selectable'
SVCN255  DC    CL32'User Selectable'
SVCN@TBL EQU   *-SVCNAME     table size
         MEND
./ ADD NAME=$ECFSVX  0199-21250-21333-1241-00632-00035-00632-BENMAR  58
         MACRO
*/*******************************************************************/
*/*                                                                 */
*/* Name: $ECFSVX                                                   */
*/*                                                                 */
*/* Description: SVC screening structure map                        */
*/*                                                                 */
*/* SVCE table: One for every SVC screened address space.           */
*/*             Resides in fixed LSQA subpool 253.                  */
*/*                                                                 */
*/* SVX entry: One for every SVC screened jobstep and subtask TCB.  */
*/*            Resides in fixed LSQA subpool 253.                   */
*/*                                                                 */
*/* SVC Table: The following SVCs are currently screened:           */
*/*            SVC 4    T1 -GETMAIN                                 */
*/*            SVC 5    T1 -FREEMAIN                                */
*/*            SVC 6    T2 -LINK/LINKX                              */
*/*            SVC 7    T2 -XCTL/XCTLX                              */
*/*            SVC 8    T2 -LOAD                                    */
*/*            SVC 9    T2 -DELETE                                  */
*/*            SVC 10   T1 -GETMAIN/FREEMAIN                        */
*/*            SVC 19   T4 -OPEN                                    */
*/*            SVC 20   T4 -CLOSE                                   */
*/*            SVC 34   T4 -MGCR/MGCRE/QEDIT                        */
*/*            SVC 41   T3 -IDENTIFY                                */
*/*            SVC 42   T2 -ATTACH/ATTACHX                          */
*/*            SVC 62   T2 -DETACH                                  */
*/*            SVC 99   T3 -DYNALLOC                                */
*/*            SVC 107  T6 -MODESET                                 */
*/*            SVC 120  T1 -GETMAIN/FREEMAIN                        */
*/*                                                                 */
*/* Restrictions: All offsets fixed by architecture. Offset changes */
*/*               require complete product reassembly and relink.   */
*/*                                                                 */
*/* Restrictions: None                                              */
*/*                                                                 */
*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
*/*                                                                 */
*/*                                                                 */
*/*******************************************************************/
*---------------------------CHANGE LOG-------------------------------*
*                                                                    *
* ID    Rel    Date       Author        Comments                     *
*--------------------------------------------------------------------*
* @01 | V2R3 | 09172021 | Ben Marino  | Initial version              *
*     |      |          |             |                              *
**********************************************************************
*--------+---------+---------+---------+---------+---------+--------+*
&SVX     $ECFSVX &DSECT=YES
         AIF   ('&DSECT' EQ 'YES').YDSECT
         AGO   .NDSECT
.YDSECT  ANOP  ,
SVCE     DSECT ,
         AGO   .GOSVCE
.NDSECT  ANOP  ,
SVCE     DS    0D
.GOSVCE  ANOP  ,
*
**       SVC Screening Table
*
SVCETAB  DS    0D
SVCESVS  DC    V(ECFSVS)     SVC routine EPA
SVCETYPE DC    XL2'C200'     SVC routine type 3/4    X'C000'
SVCELCKS DC    XL2'0000'     SVC routine requires no locks
SVCE@ENZ EQU   *-SVCETAB     SVC table entry size
         DS    0D
SVCETABE DS    0XL256        SVC table entries
SVCE0    DC    X'80'         -T1 -EXCP/XDAP
SVCE1    DC    X'80'         -T1 -WAIT/WAITR/PRTOV
SVCE2    DC    X'80'         -T1 -POST
SVCE3    DC    X'80'         -T1 -EXIT
SVCE4    DC    X'00'       **-T1 -GETMAIN
SVCE5    DC    X'00'       **-T1 -FREEMAIN
SVCE6    DC    X'00'       **-T2 -LINK/LINKX
SVCE7    DC    X'00'       **-T2 -XCTL/XCTLX
SVCE8    DC    X'00'       **-T2 -LOAD
SVCE9    DC    X'00'       **-T2 -DELETE
SVCE10   DC    X'00'       **-T1 -GETMAIN/FREEMAIN
SVCE11   DC    X'80'       ##-T3 -TIME
SVCE12   DC    X'80'       ##-T2 -SYNCH/SYNCHX
SVCE13   DC    X'80'         -T4 -ABEND
SVCE14   DC    X'80'         -T3 -SPIE
SVCE15   DC    X'80'         -T1 -ERREXCP
SVCE16   DC    X'80'         -T2 -PURGE
SVCE17   DC    X'80'         -T3 -RESTORE
SVCE18   DC    X'80'         -T2 -BLDL/FIND
SVCE19   DC    X'00'       **-T4 -OPEN
SVCE20   DC    X'00'       **-T4 -CLOSE
SVCE21   DC    X'80'       ##-T3 -STOW
SVCE22   DC    X'80'       ##-T4 -OPEN (TYPE=J)
SVCE23   DC    X'80'       ##-T4 -CLOSE (TYPE=T)
SVCE24   DC    X'80'         -T3 -DEVTYPE
SVCE25   DC    X'80'         -T3 -TRKBAL
SVCE26   DC    X'80'         -T4 -CATALOG/INDEX/LOCATE
SVCE27   DC    X'80'         -T3 -OBTAIN
SVCE28   DC    X'80'         -reserved
SVCE29   DC    X'80'       ##-T3 -SCRATCH
SVCE30   DC    X'80'       ##-T3 -RENAME
SVCE31   DC    X'80'         -T4 -FEOV
SVCE32   DC    X'80'         -T4 -REALLOC
SVCE33   DC    X'80'         -T2 -IOHALT
SVCE34   DC    X'00'       **-T4 -MGCR/MGCRE/QEDIT
SVCE35   DC    X'80'         -T4 -WTO/WTOR
SVCE36   DC    X'80'         -T4 -WTL
SVCE37   DC    X'80'         -T2 -SEGLD/SEGWT
SVCE38   DC    X'80'         -reserved
SVCE39   DC    X'80'         -T3 -LABEL
SVCE40   DC    X'80'         -T3 -EXTRACT
SVCE41   DC    X'00'       **-T3 -IDENTIFY
SVCE42   DC    X'00'       **-T2 -ATTACH/ATTACHX
SVCE43   DC    X'80'         -T1 -CIRB
SVCE44   DC    X'80'         -T2 -CHAP
SVCE45   DC    X'80'         -T2 -OVLYBRCH
SVCE46   DC    X'80'         -T2 -TTIMER/STIMERM
SVCE47   DC    X'80'         -T2 -STIMER/STIMERM
SVCE48   DC    X'80'       ##-T2 -DEQ
SVCE49   DC    X'80'         -reserved
SVCE50   DC    X'80'         -reserved
SVCE51   DC    X'80'         -T4 -SNAP/SNAPX/SDUMP/SDUMPX
SVCE52   DC    X'80'         -T4 -RESTART
SVCE53   DC    X'80'         -T3 -RELEX
SVCE54   DC    X'80'         -T3 -DISABLE
SVCE55   DC    X'80'         -T4 -EOV
SVCE56   DC    X'80'       ##-T2 -ENQ/RESERVE
SVCE57   DC    X'80'         -T3 -FREEDBUF
SVCE58   DC    X'80'         -T1 -RELBUF/REQBUF
SVCE59   DC    X'80'         -T3 -OLTEP
SVCE60   DC    X'80'         -T2 -STAE/ESTAE/ESTAEX
SVCE61   DC    X'80'         -T3 -TSO/E only
SVCE62   DC    X'00'       **-T2 -DETACH
SVCE63   DC    X'80'         -T3 -CHKPT
SVCE64   DC    X'80'         -T3 -RDJFCB
SVCE65   DC    X'80'         -reserved
SVCE66   DC    X'80'         -T4 -BTAMTEST
SVCE67   DC    X'80'         -reserved
SVCE68   DC    X'80'         -T4 -SYNADAF/SYNADRLS
SVCE69   DC    X'80'         -T3 -BSP
SVCE70   DC    X'80'         -reserved
SVCE71   DC    X'80'         -T3 -ASGNBFR/BUFINQ/RLSEBFR
SVCE72   DC    X'80'         -T4 -no macro
SVCE73   DC    X'80'         -T3 -SPAR
SVCE74   DC    X'80'         -T3 -DAR
SVCE75   DC    X'80'         -T3 -DQUEUE
SVCE76   DC    X'80'         -T3 -no macro
SVCE77   DC    X'80'         -reserved
SVCE78   DC    X'80'         -T2 -LPACE
SVCE79   DC    X'80'         -T2 -STATUS
SVCE80   DC    X'80'         -reserved
SVCE81   DC    X'80'         -T4 -SETPRT/SETDEV
SVCE82   DC    X'80'         -reserved
SVCE83   DC    X'80'         -T3 -SMFWTM/SMFEWTM
SVCE84   DC    X'80'         -T1 -GRAPHICS
SVCE85   DC    X'80'         -T3 -no macro
SVCE86   DC    X'80'         -no longer supported
SVCE87   DC    X'80'         -T3 -DOM
SVCE88   DC    X'80'         -reserved
SVCE89   DC    X'80'         -reserved
SVCE90   DC    X'80'         -reserved
SVCE91   DC    X'80'         -T3 -VOLSTAT
SVCE92   DC    X'80'         -T1 -TCBEXCP
SVCE93   DC    X'80'         -T3 -TGET/TPUT/TPG
SVCE94   DC    X'80'         -T3 -STCC
SVCE95   DC    X'80'       ##-T1 -SYSEVENT
SVCE96   DC    X'80'         -T3 -STAX
SVCE97   DC    X'80'         -T3 -TSO/E only
SVCE98   DC    X'80'         -T4 -PROTECT
SVCE99   DC    X'00'       **-T3 -DYNALLOC
SVCE100  DC    X'80'         -T3 -TSO/E only
SVCE101  DC    X'80'         -T1 -QTIP
SVCE102  DC    X'80'         -T3 -AQCTL
SVCE103  DC    X'80'         -T3 -XLATE
SVCE104  DC    X'80'         -T4 -TOPCTL
SVCE105  DC    X'80'         -T3 -IMGLIB
SVCE106  DC    X'80'         -reserved
SVCE107  DC    X'00'       **-T6 -MODESET
SVCE108  DC    X'80'         -reserved
SVCE109  DC    X'80'         -T2 -ESR
SVCE110  DC    X'80'         -reserved
SVCE111  DC    X'80'         -T2 -no macro
SVCE112  DC    X'80'         -T1 -PGRLSE
SVCE113  DC    X'80'         -T1 -PGFIX/PGFREE/PGLOAD/PGOUT/PGANY
SVCE114  DC    X'80'         -T1 -EXCPVR
SVCE115  DC    X'80'         -reserved
SVCE116  DC    X'80'         -T6 -ESR
SVCE117  DC    X'80'         -T2 -DEBCHK
SVCE118  DC    X'80'         -reserved
SVCE119  DC    X'80'       ##-T1 -TESTAUTH
SVCE120  DC    X'00'       **-T1 -GETMAIN/FREEMAIN
SVCE121  DC    X'80'         -T1 -VSAM
SVCE122  DC    X'80'         -T2 -ESR
SVCE123  DC    X'80'         -T2 -PURGEDQ
SVCE124  DC    X'80'         -T1 -TPIO
SVCE125  DC    X'80'         -T1 -EVENTS
SVCE126  DC    X'80'         -reserved
SVCE127  DC    X'80'         -reserved
SVCE128  DC    X'80'         -reserved
SVCE129  DC    X'80'         -reserved
SVCE130  DC    X'80'         -T3 -RACHECK
SVCE131  DC    X'80'         -T3 -RACINIT
SVCE132  DC    X'80'         -T3 -RACLIST/RACXTRT/ICHEINTY
SVCE133  DC    X'80'         -T3 -RACDEF
SVCE134  DC    X'80'         -reserved
SVCE135  DC    X'80'         -reserved
SVCE136  DC    X'80'         -reserved
SVCE137  DC    X'80'         -T6 -ESR
SVCE138  DC    X'80'         -T2 -PGSER
SVCE139  DC    X'80'         -T3 -CVAF
SVCE140  DC    X'80'         -reserved
SVCE141  DC    X'80'         -reserved
SVCE142  DC    X'80'         -reserved
SVCE143  DC    X'80'         -T4 -GENKEY/RETKEY/CIPHER/EMK
SVCE144  DC    X'80'         -reserved
SVCE145  DC    X'80'         -reserved
SVCE146  DC    X'80'         -T3 -BPESVC
SVCE147  DC    X'80'         -reserved
SVCE148  DC    X'80'         -reserved
SVCE149  DC    X'80'         -reserved
SVCE150  DC    X'80'         -reserved
SVCE151  DC    X'80'         -reserved
SVCE152  DC    X'80'         -reserved
SVCE153  DC    X'80'         -reserved
SVCE154  DC    X'80'         -reserved
SVCE155  DC    X'80'         -reserved
SVCE156  DC    X'80'         -reserved
SVCE157  DC    X'80'         -reserved
SVCE158  DC    X'80'         -reserved
SVCE159  DC    X'80'         -reserved
SVCE160  DC    X'80'         -reserved
SVCE161  DC    X'80'         -reserved
SVCE162  DC    X'80'         -reserved
SVCE163  DC    X'80'         -reserved
SVCE164  DC    X'80'         -reserved
SVCE165  DC    X'80'         -reserved
SVCE166  DC    X'80'         -reserved
SVCE167  DC    X'80'         -reserved
SVCE168  DC    X'80'         -reserved
SVCE169  DC    X'80'         -reserved
SVCE170  DC    X'80'         -reserved
SVCE171  DC    X'80'         -reserved
SVCE172  DC    X'80'         -reserved
SVCE173  DC    X'80'         -reserved
SVCE174  DC    X'80'         -reserved
SVCE175  DC    X'80'         -reserved
SVCE176  DC    X'80'         -reserved
SVCE177  DC    X'80'         -reserved
SVCE178  DC    X'80'         -reserved
SVCE179  DC    X'80'         -reserved
SVCE180  DC    X'80'         -reserved
SVCE181  DC    X'80'         -reserved
SVCE182  DC    X'80'         -reserved
SVCE183  DC    X'80'         -reserved
SVCE184  DC    X'80'         -reserved
SVCE185  DC    X'80'         -reserved
SVCE186  DC    X'80'         -reserved
SVCE187  DC    X'80'         -reserved
SVCE188  DC    X'80'         -reserved
SVCE189  DC    X'80'         -reserved
SVCE190  DC    X'80'         -reserved
SVCE191  DC    X'80'         -reserved
SVCE192  DC    X'80'         -reserved
SVCE193  DC    X'80'         -reserved
SVCE194  DC    X'80'         -reserved
SVCE195  DC    X'80'         -reserved
SVCE196  DC    X'80'         -reserved
SVCE197  DC    X'80'         -reserved
SVCE198  DC    X'80'         -reserved
SVCE199  DC    X'80'         -reserved
SVCE200  DC    X'80'         -user selectable
SVCE201  DC    X'80'         -user selectable
SVCE202  DC    X'80'         -user selectable
SVCE203  DC    X'80'         -user selectable
SVCE204  DC    X'80'         -user selectable
SVCE205  DC    X'80'         -user selectable
SVCE206  DC    X'80'         -user selectable
SVCE207  DC    X'80'         -user selectable
SVCE208  DC    X'80'         -user selectable
SVCE209  DC    X'80'         -user selectable
SVCE210  DC    X'80'         -user selectable
SVCE211  DC    X'80'         -user selectable
SVCE212  DC    X'80'         -user selectable
SVCE213  DC    X'80'         -user selectable
SVCE214  DC    X'80'         -user selectable
SVCE215  DC    X'80'         -user selectable
SVCE216  DC    X'80'         -user selectable
SVCE217  DC    X'80'         -user selectable
SVCE218  DC    X'80'         -user selectable
SVCE219  DC    X'80'         -user selectable
SVCE220  DC    X'80'         -user selectable
SVCE221  DC    X'80'         -user selectable
SVCE222  DC    X'80'         -user selectable
SVCE223  DC    X'80'         -user selectable
SVCE224  DC    X'80'         -user selectable
SVCE225  DC    X'80'         -user selectable
SVCE226  DC    X'80'         -user selectable
SVCE227  DC    X'80'         -user selectable
SVCE228  DC    X'80'         -user selectable
SVCE229  DC    X'80'         -user selectable
SVCE230  DC    X'80'         -user selectable
SVCE231  DC    X'80'         -user selectable
SVCE232  DC    X'80'         -user selectable
SVCE233  DC    X'80'         -user selectable
SVCE234  DC    X'80'         -user selectable
SVCE235  DC    X'80'         -user selectable
SVCE236  DC    X'80'         -user selectable
SVCE237  DC    X'80'         -user selectable
SVCE238  DC    X'80'         -user selectable
SVCE239  DC    X'80'         -user selectable
SVCE240  DC    X'80'         -user selectable
SVCE241  DC    X'80'         -user selectable
SVCE242  DC    X'80'         -user selectable
SVCE243  DC    X'80'         -user selectable
SVCE244  DC    X'80'         -user selectable
SVCE245  DC    X'80'         -user selectable
SVCE246  DC    X'80'         -user selectable
SVCE247  DC    X'80'         -user selectable
SVCE248  DC    X'80'         -user selectable
SVCE249  DC    X'80'         -user selectable
SVCE250  DC    X'80'         -user selectable
SVCE251  DC    X'80'         -user selectable
SVCE252  DC    X'80'         -user selectable
SVCE253  DC    X'80'         -user selectable
SVCE254  DC    X'80'         -user selectable
SVCE255  DC    X'80'         -user selectable
SVCE@TBL EQU   *-SVCETABE    table size
*
**       SVCE Extension
*
SVCEXT   DS    0F
SVCEID   DC    CL4'SVCE'     ID
         DS    0X
SVCEFLG1 DC    XL1'00'       flags
SVCE@S60 EQU   X'80'         IEFSD060 screened indicator
SVCE@ACT EQU   X'40'         jobstep TCB screened indicator
SVCE@NAC EQU   X'20'         jobstep TCB unscreened indicator
SVCE@DBG EQU   X'10'         DEBUG={ON|OFF} indicator
SVCE@NOS EQU   X'08'         SVC screening bypass indicator
SVCE@DDN EQU   X'04'         TAPSVC=DDname found indicator
SVCE@OPN EQU   X'02'         TRAPSVC=DDname open indicator
SVCE@HDR EQU   X'01'         TRAPSVC=DDname headers logged indicator
         DS    0X
SVCEDBGF DC    XL1'00'       ECFSVS SVXDBUG debug flags
SVCESVSF DC    XL1'00'       ECFSVS SVXFLG1 debug flags
SVCESVCF DC    XL1'00'       ECFSVC XSAFLG1 debug flags
         DS    0F
SVCESVC  DS    0XL8          ECFSVC FCID($SVCHOOK)
SVCEZSVC DC    XL2'0AFF'     -SVC=255 default
SVCEFCID DC    XL2'0AFF'     -SVC=255 FCID2
SVCEXCID DC    XL2'FFFF'     -SVC=255 XCID
SVCEZRSV DC    XL2'FFFF'     -SVC-255 XCID2
SVCE@HSZ EQU   *-SVCESVC     DONOT change order
         DS    0F
SVCELOGA DC    V(ECFLOG)     ECFLOG EPA
SVCEEVTA DC    A(0)          EVT address
SVCESTCB DC    A(0)          IEFSD060 TCB address
SVCESVXA DC    A(0)          SVX address(testing only)
SVCESVRA DC    A(0)          SVR element address(testing only)
SVCESIZE DC    A(0)          SVCE table size
SVCESVSC DC    A(0)          ECFSVS routine entry count
SVCESVCC DC    A(0)          ECFSVC routine entry count
SVCES60C DC    A(0)          INITiator issued SVCs count
SVCESUPC DC    A(0)          SVRB issued SVC count
SVCEJTCB DC    A(0)          jobstep task TCB(testing only)
SVCERSR1 DC    A(0)          -available
SVCERSR2 DC    A(0)          -available
SVCERSR3 DC    A(0)          -available
         DS    0C
SVCEJOBN DS    CL8           jobname
SVCEPGMN DS    CL8           program name
SVCELPAR DS    CL8           LPAR - ECVTLPNM
SVCEVMID DS    CL8           VMID - ECVTVMNM
SVCESID  DS    CL4           SMF  - SMCASID
SVCEJTYP DS    CL3           job type {JOB|STC|TSU}
SVCERSVR DS    CL1           -reserved -DONOT use
         DS    0C
SVCETRAP DC    CL8'TRAPSVC=' ID
SVCEDDNM DC    CL8'SVCLOG'   SVCLOG default DDname
SVCE@TRZ EQU   *-SVCETRAP    DONOT change order
         DS    0F
SVCEDI   DC    CL4'DCB'      DCB ID
SVCEDCB  DC    30F'0'        SVCLOG DCB
SVCELFM  DC    F'0'          OPEN listform
SVCE@DCL EQU   *-SVCEDCB
         DS    0D
SVCE@TBZ EQU   *-SVCETAB     SVCE size
*
**       SVX structure entry map
*
SVX      DSECT ,
SVXID    DS    CL4'SVX'         ID
SVXSAVE  DS    18F              mainline savearea
SVXSUBS  DS    18F              subroutine savearea
SVXSVRM  DS    18F              ECFSVR mainline savearea
SVXSVRS  DS    18F              ECFSVR subroutine savearea
SVXRTRG  DS    16F              FRR retry registers
SVXCLR   EQU   *                clear staring address
SVXSVC   DS    0F
SVXSVCNM DS    XL1              caller issued SVC number
SVXSRID  DS    CL3              SRID {INI|END}
         DS    0X
SVXFLGS  DS    CL4'FLGS'        ID
SVXFLG1  DS    XL1              ECFSVS flags
SVX@XPSW EQU   X'80'            -caller PSW extracted indicator
SVX@SVCE EQU   X'40'            -SVCE validity checked indicator
SVX@UPDT EQU   X'20'            -SVC caller PSW updated indicator
SVX@QUIT EQU   X'10'            -Quit SVC screening indicator
SVX@EVTF EQU   X'08'            -EVT failed validity checks
SVX@1RS5 EQU   X'04'            -available
SVX@1RS6 EQU   X'02'            -available
SVX@1RS7 EQU   X'01'            -available
         DS    0X
SVXFLG2  DS    XL1              ECFSVC flags
SVX@UPOK EQU   X'80'            -PSW update debug indicator
SVX@SVCS EQU   X'40'            -SVC screening debug indicator
SVX@2RS2 EQU   X'20'            -available
SVX@2RS3 EQU   X'10'            -available
SVX@2RS4 EQU   X'08'            -available
SVX@2RS5 EQU   X'04'            -available
SVX@2RS6 EQU   X'02'            -available
SVX@2RS7 EQU   X'01'            -available
         DS    0X
SVXFLG3  DS    XL1              common flags
SVX@TYP6 EQU   X'80'            -Type 6 SVC issued indicator
SVX@ATTC EQU   X'40'            -ATTACH SVC issued indicator
SVX@SVRB EQU   X'20'            -SVC issued by SVRB caller
SVX@SD60 EQU   X'10'            -SVC issued by IEFSD060 TCB
SVX@3RS4 EQU   X'08'            -available
SVX@3RS5 EQU   X'04'            -available
SVX@3RS6 EQU   X'02'            -available
SVX@3RS7 EQU   X'01'            -available
         DS    0X
SVXDBUG  DS    XL1              debugging flags
SVX@QIT1 EQU   X'80'            -SVCE failed validity check
SVX@QIT2 EQU   X'40'            -EVT failed validity checks
SVX@QIT3 EQU   X'20'            -FRR recovery entered indicator
SVX@PSWU EQU   X'10'            -PSWs hook installed indicator
SVX@OPEN EQU   X'08'            -SVCLOG open called indicator
SVX@EXIT EQU   X'04'            -ECFSVS exiting indicator
SVX@ABND EQU   X'02'            -SCFSVE ABENDed indicator
SVX@DSV7 EQU   X'01'            -available
         DS    0A
SVXRB    DS    A                caller RB address
SVXSVRB  DS    A                ECFSVS SVRB
SVXXSB   DS    A                XSB address
SVXSIZE  DS    A                SVX size
SVXRC    DS    A                return code
SVXRSN   DS    A                reason code
SVXWORD  DS    A                work area
SVXRSVR2 DS    A                -available
SVXRSVR3 DS    A                -available
*
SVXHOOK  DS    0F               hook code
SVXSVCI  DS    XL1'0A'          -SVC Opcode
SVXSVCN  DS    XL1'00'          -SVC number
SVXZSVC  DS    XL2'0AFF'        -SVC=255 default
SVXFCID  DS    XL2'0AFF'        -$SVCHOOK FCID
SVXXCID  DS    XL2'FFFF'        -$SVCHOOK XCID
SVXSVXA  DS    A                -SVX address(self)
SVXSVCEA DS    A                -SVCE address
SVX@HSZ  EQU   *-SVXHOOK        DONOT change order
         DS    0D
SVXC     DS    XL4              -
SVXCID   DS    CL4'CPSW'        ID
SVXCPSW  DS    0XL8             Original SVC issuer RBOPSW
SVXCPSW0 DS    XL4              -PSW bytes 0-3
SVXCPSW4 DS    XL4              -PSW bytes 4-7
SVXC@WPL EQU   *-SVXC           DONOT change order
         DS    0D
SVXH     DS    XL4              -
SVXHID   DS    CL4'HPSW'        ID
SVXHPSW  DS    0XL8             ECFSVS RBOPSW hook
SVXHPSW0 DS    XL4              -PSW bytes 0-3
SVXHPSW4 DS    XL4              -PSW bytes 4-7
SVXH@WPL EQU   *-SVXH           DONOT change order
         DS    0D
SVX8     DS    XL4              -
SVX8ID   DS    CL4'8PSW'        ID
SVX8PSW  DS    0XL8             8-bytes RBOPSW workarea
SVX8PSW0 DS    XL4              -PSW bytes 0-3
SVX8PSW4 DS    XL4              -PSW bytes 4-7
SVX8@WPL EQU   *-SVX8           DONOT change order
         DS    0D
SVXF     DS    XL4
SVXFID   DS    CL4'FPSW'        ID
SVXFPSW  DS    0XL16            16-bytes RBOPSW workarea
SVXFPSW0 DS    XL4              -PSW bytes 0-3
SVXFPSW4 DS    XL4              -PSW bytes 0-3
SVXFPSW8 DS    XL4              -PSW bytes 4-7
SVXFPSWC DS    XL4              -PSW bytes 4-7
SVXF@WPL EQU   *-SVXF           DONOT change order
*
SVXIREGS DS    0XL32
SVXIHR14 DS    XL4              entry high R14
SVXILR14 DS    XL4              entry low R14
SVXIHR15 DS    XL4              entry high R15
SVXILR15 DS    XL4              entry low R15
SVXIHR0  DS    XL4              entry high R0
SVXILR0  DS    XL4              entry low R0
SVXIHR1  DS    XL4              entry high R1
SVXILR1  DS    XL4              entry low R1
SVXI@RGS EQU   *-SVXIREGS       DONOT change order
*
SVXIARS  DS    0XL16
SVXIAR14 DS    XL4              entry AR14
SVXIAR15 DS    XL4              entry AR15
SVXIAR0  DS    XL4              entry AR0
SVXIAR1  DS    XL4              entry AR1
SVXI@ARS EQU   *-SVXIARS        DONOT change order
*
SVXOHGRS DS    0XL16
SVXOHR14 DS    XL4              return high R14
SVXOHR15 DS    XL4              return high R15
SVXOHR0  DS    XL4              return high R0
SVXOHR1  DS    XL4              return high R1
SVXO@HGR EQU   *-SVXOHGRS       DONOT change order
*
SVXOLGRS DS    0XL16
SVXOLR14 DS    XL4              return low R14
SVXOLR15 DS    XL4              return low R15
SVXOLR0  DS    XL4              return low R0
SVXOLR1  DS    XL4              return low R1
SVXO@LGR EQU   *-SVXOLGRS       DONOT change order
*
SVXOARS  DS    0XL16
SVXOAR0  DS    XL4              return AR0
SVXOAR1  DS    XL4              return AR1
SVXOAR14 DS    XL4              return AR14
SVXOAR15 DS    XL4              return AR15
SVXO@ARS EQU   *-SVXOARS        DONOT change order
         DS    0D
SVXPGMNM DS    CL8              SVC issuing PGMname
SVXSVCEN DS    CL8              real SVC table entry
SVX@ZERO EQU   *-SVXCLR         SVX clear size
         DS    0D
SVXSVRDA DS    CL(SVR@SIZE)     SVR record
SVX@SVRZ EQU   *-SVXSVRDA       SVR record length
         DS    0D
SVX@SIZE EQU   *-SVX            SVX size
*
**       Maps SVXFCID section of SVX
*
SVXE     DSECT ,
SVXEFCID DS    XL2              SVC=255 FCID
SVXEXCID DS    XL2              SVC=255 XCID
SVXESVXA DS    A                SVX address(self)
SVXE@SZE EQU   *-SVXE           size of SVXE
*
**       SVR - SVC screening data record
*
SVR      DSECT ,
SVRID    DS    CL4'SVR'         ID
SVRAR    DS    CL1              AR-mode {Y|N}
SVRTYPE  DS    CL1              SVC type {1|2|3|6}
SVRNONP  DS    CL1              non-preemptive {Y|N}
SVRATTR1 DS    XL1              CSVQUERY OUTATTR1 attributes
SVRATTR2 DS    XL1              CSVQUERY OUTATTR2 attributes
SVRATTR3 DS    XL1              CSVQUERY OUTATTR3 attributes
SVRAPF   DS    CL3              APF authorization {YES|NO}
SVRSVCN  DS    CL3              SVC number {000}255}
SVRLOCK  DS    CL8              SVC lock requirement
SVRAC01  DS    CL6              SETCODE AC={0|1}
SVRBTYPE DS    CL4              SVC caller {PRB|SVRB}
SVRJOBNM DS    CL8              job name
SVRSTEPN DS    CL8              step name
SVRPGMEP DS    CL8              SVC issuer EPA
SVRPGMOF DS    CL8              SVC issued at address
SVRSTATE DS    CL12             system state {Problem|Supervisor}
*
SVRCPILA DS    CL4              SVC issued on logical CPU
SVRCPIPA DS    CL4              SVC issued on physical CPU
SVRCPOLA DS    CL4              SVC completed on logical CPU
SVRCPOPA DS    CL4              SVC completed on pgysical CPU
         DS    0D
SVRSTIME DS    XL8              SVC entry/return STCK
         DS    0D
SVRIHR14 DS    CL8              entry high R14
SVRILR14 DS    CL8              entry low R14
SVRIHR15 DS    CL8              entry high R15
SVRILR15 DS    CL8              entry low R15
SVRIHR0  DS    CL8              entry high R0
SVRILR0  DS    CL8              entry low R0
SVRIHR1  DS    CL8              entry high R1
SVRILR1  DS    CL8              entry low R0
         DS    0D
SVRIAR14 DS    CL8              entry AR14
SVRIAR15 DS    CL8              entry AR15
SVRIAR0  DS    CL8              entry AR0
SVRIAR1  DS    CL8              entry AR1
SVR@ZERO EQU   *-SVR            scrub length
*
SVRCLR   DS    0D
SVROHR0  DS    CL8              return high R0
SVROLR0  DS    CL8              return low R0
SVROHR1  DS    CL8              return high R1
SVROLR1  DS    CL8              return low R0
SVROHR14 DS    CL8              return high R14
SVROLR14 DS    CL8              return low R14
SVROHR15 DS    CL8              return high R15
SVROLR15 DS    CL8              return low R15
         DS    0D
SVROAR0  DS    CL8              return AR0
SVROAR1  DS    CL8              return AR1
SVROAR14 DS    CL8              return AR14
SVROAR15 DS    CL8              return AR15
         DS    0F
SVRVAR   DS    CL8              -data
SVRVARX  DS    CL1              -slack byte
SVR@VARZ EQU   *-SVRVAR         keep it together
         DS    0F
SVRRC    DS    F                RC
SVRWORD  DS    F                a word
SVREPA   DS    F                CSVQUERY OUTEPNM
SVRLODPT DS    F                CSVQUERY OUTLOADPT
SVREPNM  DS    CL8              CSVQUERY OUTEPA
SVRMJNM  DS    CL8              CSVQUERY OUTMJNM
SVRLODEP DS    CL8              CSVQUERY OUTLOADPT
SVRDWORD DS    D                a doubleword
         DS    0D
SVRISTCK DS    CL16             SVC STCKCONV work area
SVRTMAP  DS    CL38             time and date map
SVRTIMED DS    CL38             converted time and date
SVR@ZEND EQU   *-SVRCLR         scrub length
         DS    0D
SVRTRTAB DS    CL16             TRanslate table
SVRMACRO DS    CL32             SVC macro name
SVRCCONV DS    CL32             STCKCONV listform
SVRECORD DS    CL80             SVCLOG record
SVREC@LN EQU   SVRECORD         SVCLOG record length
         DS    0D
SVRPLIST CSVQUERY PLISTVER=MAX,MF=(L,ZVR)
         DS    0D
SVR@SIZE EQU   *-SVR            SVR size
         MEND
./ ADD NAME=$ECFTKN  0106-21069-21304-1649-00088-00087-00070-BENMAR  39
         MACRO
&TKN     $ECFTKN
*/*******************************************************************/
*/*                                                                 */
*/* Name: $ECFTKN                                                   */
*/*                                                                 */
*/* Description: Name/Token Pair table                              */
*/*                                                                 */
*/* Residency: SP241 - Common Service Area                          */
*/*                                                                 */
*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
*/*                                                                 */
*/*                                                                 */
*/*******************************************************************/
*---------------------------CHANGE LOG-------------------------------*
*                                                                    *
* ID    Rel    Date       Author        Comments                     *
*--------------------------------------------------------------------*
* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
* @03 | V2R2 | 06072021 | Ben Marino  | zOS security server support  *
*     |      |          |             |                              *
**********************************************************************
*--------+---------+---------+---------+---------+---------+--------+*
*
**       Name/Token pair table entry map
*
TKE      DSECT ,
TKEID    DS    CL4'TKE'                ID
TKESTAT  DS    XL1                     token state
TKE@ACT  EQU   X'80'                   -active token entry
TKE@FRE  EQU   X'00'                   -free token entry
TKERSVR1 DS    XL3                     -available
TKESTCK  DS    XL8                     creation clock
*
TKENAME  DS    CL16                    token name
TKE@NSZE EQU   *-TKENAME               token name size
TKETOKN  DS    CL16                    token data
TKE@VSZE EQU   *-TKETOKN               token data size
TKE@SIZE EQU   *-TKE                   TKE entry size
*
**       Name/Token pair table map
*
TKN      DSECT ,
TKNID    DS    CL4'TKN'                ID
TKNLOCK  DS    F                       lockword - ASCB
TKNLOCK2 DS    F                       lockword - TCB
TKNTOP   DS    A                       top token address
TKNCNT   DS    F                       number of defined tokens
TKNTOT   DS    F                       total number of token slots
TKNSZE   DS    F                       table size
TKNSPN   DS    F                       table subpool
TKNKEY   DS    F                       token table key
TKNRSVX  DS    F                       -available
TKNRSVY  DS    F                       -available
TKNRSVZ  DS    F                       -available
TKN1ST   DS    XL4048                  token table entries
TKN@NUM  EQU   (*-TKN1ST)/TKE@SIZE-1   number of tokens-1
TKN@TSZE EQU   *-TKN                   TKN table size
*
**       Name/Token pair attributes map
*
TKA      DSECT ,
TKATYPE  DS    XL1                     token type
TKA@CRE  EQU   X'80'                   -Create
TKA@DEL  EQU   X'40'                   -Delete
TKA@RET  EQU   X'20'                   -Retrieve
TKALVL   DS    XL1                     token level
TKA@TCB  EQU   X'80'                   -Task-Level
TKA@ASC  EQU   X'40'                   -Address-Space-Level
TKA@SYS  EQU   X'20'                   -System-Level
TKA@ATTR EQU   8                       $TOKEN macro attributes
*
**       System-Level Name/Token pair map
*
NTP      DSECT ,
NTPTNAME DS    0CL16                   TOKEN name
NTPID    DS    CL4                     -token ID
NTPSUB   DS    CL4                     -subsysytem name
NTPSEP   DS    CL1                     -separator
NTPVER   DS    CL7                     -subsysytem version
NTPTOKEN DS    0CL16                   TOKEN data
NTPEVTA  DS    F                       -EVT address
NTPASCB  DS    F                       -ASCB address
NTPSVCA  DS    F                       -SVC instruction address    @03C
NTPPCNUM DS    F                       -ECFXPC EX/LX               @03C
NTP@SIZE EQU   *-NTP                   NTP size
         MEND
./ ADD NAME=$ECFTQX  0106-21069-21304-1649-00076-00076-00061-BENMAR  43
*/*******************************************************************/
*/*                                                                 */
*/* Nane: $ECFTQX                                                   */
*/*                                                                 */
*/* Description: TQX/SRX element extension                          */
*/*                                                                 */
*/* Notes: None                                                     */
*/*                                                                 */
*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
*/*                                                                 */
*/*                                                                 */
*/*******************************************************************/
*---------------------------CHANGE LOG-------------------------------*
*                                                                    *
* ID    Rel    Date       Author        Comments                     *
*--------------------------------------------------------------------*
* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
*     |      |          |             |                              *
**********************************************************************
*--------+---------+---------+---------+---------+---------+--------+*
         MACRO
         $ECFTQX ,
TQX      DSECT ,
TQXID    DS    CL4'TQX'           ID
TQXFLG1  DS    XL1                flags
TQX@EXIT EQU   X'80'              timer exit indicator
TQX@XRTM EQU   X'40'              ECFRTM diactivated timer
TQX@ACAP EQU   X'20'              CAPTURE={NO|YES} indicator
TQXFLG2  DS    XL1                flags
TQXEASID DS    XL2                ECF instance ASID
TQXEASCB DS    F                  ECF instance ASCB
TQXEVTAD DS    F                  EVT address
TQXDINTV DS    F                  timer interval
TQXDIPOP DS    F                  timer pop count
TQXDIECT DS    F                  timer requeue count
TQXSRBCT DS    F                  SRB scheduled count
TQXSRBFL DS    F                  SRB schedule bypass count
TQXW070E DS    F                  wait task was dispatched
TQXSRXVT DS    0D                 SRX vector table
TQX@SZE  EQU   *-TQX              TQX size
*
**       SRX slot entry map
*
SRX      DSECT ,
SRXID    DS    CL4'SRX'           SRX ID
SRXLOCK  DS    F                  lockword
SRXEVTA  DS    F                  EVT address
SRXAS    DS    0F
SRXSRB   DS    XL44               SRB
*
SRXASTP  DS    XL1                flags
SRX@JOB  EQU   X'80'              jobname
SRX@STC  EQU   X'40'              STC idicator
SRX@TSU  EQU   X'20'              TSU indicator
*
SRXFLG1  DS    XL1                flags
SRX@CPU  EQU   X'80'              significant CPU user
SRX@SRB  EQU   X'40'              SRB indicator
*
SRXCPULA DS    XL2                logical CPU ID
SRXAASCB DS    F                  ASCB address
SRXASTCB DS    F                  TCB address
SRXAVAIL DS    F                  -available
*
SRXASWMS DS    F                  interval service accumulator
SRXASCPU DS    F                  interval CPU service accumulator
SRXASIOC DS    F                  interval I/O service accumulator
SRXASMSO DS    F                  interval MSO service accumulator
*
SRXASJOB DS    CL8                job name
SRXASPSW DS    XL16               interrupt PSW                    @02C
         DS    0D
SRX@SIZE EQU   *-SRX              SRX slot size
SRX@AS   EQU   *-SRXAS            SRXAS size
         MEND
./ ADD NAME=$ECFTRC  0103-21069-21304-1649-00065-00065-00003-BENMAR  47
         MACRO
&TRC     $ECFTRC &DSECT=YES,&ID=TRCI,&IX=TRCE
*/*******************************************************************/
*/*                                                                 */
*/* Name: $ECFTRC                                                   */
*/*                                                                 */
*/* Description: Trace Service Request maps                         */
*/*                                                                 */
*/* Restrictions: None                                              */
*/*                                                                 */
*/* Residency: ECF address space in SP=109                          */
*/*                                                                 */
*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
*/*                                                                 */
*/*                                                                 */
*/*******************************************************************/
*---------------------------CHANGE LOG-------------------------------*
*                                                                    *
* ID    Rel    Date       Author        Comments                     *
*--------------------------------------------------------------------*
* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
*     |      |          |             |                              *
**********************************************************************
*--------+---------+---------+---------+---------+---------+--------+*
         AIF   ('&DSECT' EQ 'NO').ID0000
&ID      DSECT ,
         AGO   .ID0005
.ID0000  ANOP  ,
&ID      DS    0CL80
.ID0005  ANOP  ,
         DC    CL1' '
&ID.NAM  DC    CL8' '                  trace data ID
         DC    CL2' '                  filler
&ID.ADR  DC    CL8'00000000'           storage address
         DC    CL61' '                 filler
&ID.@SZE EQU   *-&ID                   size
*
**       Trace data record map
*
         AIF   ('&DSECT' EQ 'NO').IX0000
&IX      DSECT ,
         AGO   .IX0005
.IX0000  ANOP  ,
&IX      DS    0CL80
.IX0005  ANOP  ,
         DC    CL1' '
&IX.PFX  DC    CL10' '                 prefix
&IX.PLUS DC    CL1'+'                  offset ID
&IX.OSET DC    XL4'0000'               data offset
         DC    CL2' '                  filler
&IX.DAT1 DC    CL8'00000000'           trace data
         DC    CL1' '                  filler
&IX.DAT2 DC    CL8'00000000'           trace data
         DC    CL1' '                  filler
&IX.DAT3 DC    CL8'00000000'           trace data
         DC    CL1' '                  filler
&IX.DAT4 DC    CL8'00000000'           trace data
         DC    CL2' '                  filler
&IX.STRS DC    CL1'*'
&IX.DDAT DC    CL16'................'  decimal trace data
&IX.STRE DC    CL1'*'
         DC    CL7' '                  filler
&IX.@SZE EQU   *-&IX                   size
         MEND
./ ADD NAME=$ECFVT   0199-21069-21334-1011-00522-00386-00440-BENMAR  59
         MACRO
&EVT     $ECFVT &DSECT=YES,&LIST=YES
         COPY  $GLBLS
*/*******************************************************************/
*/*                                                                 */
*/* Name: $ECFVT                                                    */
*/*                                                                 */
*/* Description: The Events Vector Table (EVT) is a collection      */
*/*              of address vectors (VCONs), constants, queue       */
*/*              anchors and counters that are common to all        */
*/*              Event Capture Facility (ECF) subsystem modules.    */
*/*                                                                 */
*/*              The EVT can be located via the SSCTSUSE pointer    */
*/*              of the ECF subsystem control table (SSCT).         */
*/*                                                                 */
*/* Frequency: One per Event Capture Facility subsystem             */
*/*                                                                 */
*/* Residency: Resides in SQA, SP=245                               */
*/*                                                                 */
*/* Restrictions: All offsets fixed by architecture. Offset changes */
*/*               require complete product reassembly and relink.   */
*/*                                                                 */
*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
*/*                                                                 */
*/*                                                                 */
*/*******************************************************************/
*---------------------------CHANGE LOG-------------------------------*
*                                                                    *
* ID    Rel    Date       Author        Comments                     *
*--------------------------------------------------------------------*
* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
* @02 | V1R1 | 10102020 | Ben Marino  | REPLYID 4-digit support      *
* @03 | V1R1 | 10172020 | Ben Marino  | Serviceability enhancements  *
* @04 | V2R1 | 03152021 | Ben Marino  | zOS serviceability support   *
* @05 | V2R2 | 05192021 | Ben Marino  | Added stacking PC support    *
* @06 | V2R2 | 06212021 | Ben Marino  | Added security server support*
* @07 | V2R3 | 08022021 | Ben Marino  | Added subtasks TCB tokens    *
* @08 | V2R3 | 09072021 | Ben Marino  | Added SVC screening support  *
*     |      |          |             |                              *
*     |      |          |             |                              *
**********************************************************************
*--------+---------+---------+---------+---------+---------+--------+*
         PUSH  PRINT
         AIF   ('&LIST' EQ 'YES').EVT010
         PRINT OFF
.EVT010  ANOP  ,
         AIF   ('&DSECT' EQ 'NO').EVT020
EVT      DSECT ,
EVTID    DC    CL4'EVT'
         AGO   .EVT030
.EVT020  ANOP  ,
EVT      DS    0F
EVTID    DC    CL4'EVT'
.EVT030  ANOP  ,
*
**       Subsystem control flags
*
EVTFLGS  DS    0F
EVTFLG1  DC    XL1'00'             flags
EVT@INIT EQU   X'80'               initialization complete
EVT@TERM EQU   X'40'               termination indicator
EVT@ABND EQU   X'20'               abnormal termination
EVT@SACT EQU   X'10'               subsystem is currently active
EVT@NACT EQU   X'08'               ECFRTM deactivated subsystem
EVT@WAIT EQU   X'04'               ECFSUB jobstep task WAIT indicator
EVT@CSSM EQU   X'02'               ECFCSM loaded in CSA indicator
EVT@INTR EQU   X'01'               IEFSSREQ intercept indicator
         DS    0X
EVTFLG2  DC    XL1'00'             flags
EVT@TRCE EQU   X'80'               TRACE={ON|OFF} indicator
EVT@DBUG EQU   X'40'               DEBUG={ON|OFF} indicator
EVT@TOKN EQU   X'20'               Token tables init indicator
EVT@EDSP EQU   X'10'               SHOWREB={NO|YES} indicator
EVT@SHOW EQU   X'08'               OPT={SHOW|NOSHOW} indicator
EVT@RCVY EQU   X'04'               RCV={NO|YES} indicator
EVT@SREQ EQU   X'02'               SREQ={NO|YES} indicator
EVT@DUMP EQU   X'01'               SDUMP={NO|YES} indicator
         DS    0X
EVTFLG3  DC    XL1'00'             flags
EVT@CREB EQU   X'80'               REB cell pool built
EVT@CLIB EQU   X'40'               PARMLIB buffer obtained
EVT@GREC EQU   X'20'               PARMLIB records read
EVT@XREB EQU   X'10'               REBX cell pool built
EVT@CSRB EQU   X'08'               SRB cell pool built
EVT@CSRE EQU   X'04'               SRE cell pool built
EVT@TIMR EQU   X'02'               DIE timer interval indicator
EVT@DLPA EQU   X'01'               ECFDIE LPA loaded indicator
         DS    0X
EVTFLG4  DC    XL1'00'             flags
EVT@LCKR EQU   X'80'               issue lock failed ECF913E msg   @03C
EVT@CSCB EQU   X'40'               SYSIEFSD/Q10 ENQ/DEQ required   @07C
EVT@TMSG EQU   X'20'               ECF048E/ECF049E issued indicator
EVT@MSAS EQU   X'10'               MSAS=ONLY default (Edit/Browse)
EVT@CWTO EQU   X'08'               COMPWTO={NO|YES} indicator
EVT@RMTR EQU   X'04'               ECFRMT untested code path indicator
EVT@USVC EQU   X'02'               User-SVC installed indicator
EVT@ACAP EQU   X'01'               CAPTURE={NO|YES} option indicator
         DS    0X
EVTFLG5  DC    XL1'00'             flags
EVT@HZOS EQU   X'80'               z/OS host indicator             @04A
EVT@HLPA EQU   X'40'               ECFCSM loaded by CSVDYLPA ADD   @04A
EVT@G700 EQU   X'20'               WTO/R broadcast act/inact flag  @04A
EVT@SLVL EQU   X'10'               System-Level Name/Token created @04A
EVT@EXIT EQU   X'08'               Keep ECFCSM loaded in DYNAM-LPA @08C
EVT@SVCN EQU   X'04'               TRAPSVC=NO option indicator     @04A
EVT@SVCD EQU   X'02'               TRAPSVC=DDname option indicator @04A
EVT@SVCS EQU   X'01'               TRAPSVC=SMFnnn option indicator @04A
         DS    0X
EVTFLG6  DC    XL1'00'             flags
EVT@SETC EQU   X'80'               SETCON command issued indicator @04A
EVT@6RV1 EQU   X'40'               -available                      @04A
EVT@6RV2 EQU   X'20'               -available                      @04A
EVT@6RV3 EQU   X'10'               -available                      @04A
EVT@6RV4 EQU   X'08'               -available                      @04A
EVT@6RV5 EQU   X'04'               -available                      @04A
EVT@6RV6 EQU   X'02'               -available                      @04A
EVT@6RV7 EQU   X'01'               -available                      @04A
         DS    0X
EVTFLG7  DC    XL1'00'             flags
EVT@7RV0 EQU   X'80'               -available                      @04A
EVT@7RV1 EQU   X'40'               -available                      @04A
EVT@7RV2 EQU   X'20'               -available                      @04A
EVT@7RV3 EQU   X'10'               -available                      @04A
EVT@7RV4 EQU   X'08'               -available                      @04A
EVT@7RV5 EQU   X'04'               -available                      @04A
EVT@7RV6 EQU   X'02'               -available                      @04A
EVT@7RV7 EQU   X'01'               -available                      @04A
         DS    0X                                                  @04A
EVTUSMFN DC    XL1'00'             TRAPSVC=SMFnnn default          @04A
         DS    0F
EVTCSIZE DC    AL4(EVT@SIZE)       current EVT size
EVTRELNO DC    CL8'&REL'           Release Level
EVTLOCAD DC    CL8'COMMON'         Common/Local EVT address
EVTSUBNM DC    CL4'zECF'           Default subsystem name          @04C
EVTSRV38 DC    CL4' '              available                       @04C
EVTPRODN DC    CL8'OS/VS2'         product name default            @04A
EVTPRODI DC    CL8'OS/VS2'         product FMID default            @04A
*
**       Common service routines
*
EVT$SSVT DC    V(ECFSVT)           prebuilt SSVT matrix
EVTVTAA  DC    V(ECFVTA)           write protected EVT address
EVTIRBA  DC    V(ECFIRB)           IRB schedule service routine EPA
EVTRTMA  DC    V(ECFRTM)           recovery termination manager EPA
EVTCPLA  DC    V(ECFCPL)           cell pool services routine EPA
EVTWTOA  DC    V(ECFWTO)           WTO message service routine EPA
EVTWTXA  DC    V(ECFWTX)           WTO message service table EPA
EVTLCKA  DC    V(ECFLCK)           lock manager service routine EPA
EVTVALA  DC    V(ECFVAL)           storage validation routine EPA
EVTRMTA  DC    V(ECFRMT)           PURGEDQ RMTR routine EPA
EVTDIEA  DC    V(ECFDIE)           DIE timer interrupt exit EPA
EVTIDIA  DC    V(ECFIDI)           DIE enable/disable service EPA
EVTSVCA  DC    V(ECFSVC)           SVC call mamager EPA
EVTTKNA  DC    V(ECFTKN)           Name/Token pair service EPA
EVTXPCA  DC    V(ECFXPC)           Stacking PC routine EPA         @05C
EVTTCBA  DC    V(ECFTCB)           TCBTOKEN service routine EPA    @05C
EVTSVSA  DC    V(ECFSVS)           SVC screening routine EPA       @08C
EVTSVXA  DC    V(ECFSVX)           SVC screening control table     @08C
EVTFRRA  DC    V(ECFFRR)           locked recovery FRR routine     @08C
EVTLOGA  DC    V(ECFLOG)           TRAPSVC processing routine EPA  @08C
EVTSVNA  DC    V(ECFSVN)           SVC screening macro name table  @08C
EVTRSVR1 DC    A(0)                -reserved for VCON
EVTRSVZ2 DC    A(0)                -reserved for VCON
EVTRSVZ3 DC    A(0)                -reserved for VCON
EVTRSVZ4 DC    A(0)                -reserved for VCON
EVTRSVZ5 DC    A(0)                -reserved for VCON
EVTRSVZ6 DC    A(0)                -reserved for VCON
EVTRSVZ7 DC    A(0)                -reserved for VCON
EVTRSVZ8 DC    A(0)                -reserved for VCON
*
**       SVC entry & exit code
*
EVTSVC   DS    0H                  ECFSVC
EVTUSVC  DC    XL1'0A'             SVC instruction OPcode
EVTUSVCN DC    XL1'0D'             Default SVC=0D (ABEND)
EVTBR14  DC    XL2'07FE'           SVC BR14 instruction
EVT@SVCZ EQU   *-EVTSVC            ECFSVC
*
**       Subsystem structure data
*
EVTSSCT  DC    A(0)                SSCT address
EVTSCTX  DC    A(0)                SCTX address                    @05C
EVTSSVT  DC    A(0)                SSVT address
EVTASCB  DC    A(0)                subsystem ASCB address
EVTMSAS  DC    A(0)                Master Scheduler ASCB address
EVTMTCB  DC    A(0)                Master Scheduler IEEVIPL TCB address
EVTJSTCB DC    A(0)                subsystem jobstep TCB address
EVTEVTAD DC    A(0)                address of self
EVTSPNUM DC    A(0)                EVT storage subpool number
EVTJSECB DC    A(0)                ECFSUB jobstep task ECB word
EVTSTKAD DC    A(0)                ECFSUB STK stack address
EVTERCTA DC    A(0)                EDIT recovery RCT address
EVTBRCTA DC    A(0)                BROWSE recovery RCT address
EVTTQEAD DC    A(0)                TQE element address
EVTTQXAD DC    A(0)                TQX element address
EVTSVCEA DC    A(0)                SVC table entry address
EVTASLVL DC    A(0)                Address-Space-Level token table
EVTSYLVL DC    A(0)                System-Level token table
EVTPCNUM DC    A(0)                PC routine number
EVTSSICT DC    A(0)                active SSI listeners count      @06C
EVTNTPCR DC    A(0)                IEANTCR Name/Token create EPA   @07C
EVTNTPDL DC    A(0)                IEANTDL Name/Token delete EPA   @07C
EVTNTPRT DC    A(0)                IEANTRT Name/Token retrieve EPA @07C
EVTRSNV0 DC    A(0)                -available
EVTRSNV1 DC    A(0)                -available
EVTRSNV2 DC    A(0)                -available
EVTRSNV3 DC    A(0)                -available
EVTRSNV4 DC    A(0)                -available
EVTRSNV5 DC    A(0)                -available
EVTRSNV6 DC    A(0)                -available
EVTRSNV7 DC    A(0)                -available
*
**       Subsystem event capture queues
*
EVTREBQ  DC    CL4'REBQ'           ID
EVTREBQA DC    A(0)                REB active queue address
EVTREBLK DC    A(0)                REB active queue lockword - ASCB
EVTREBL2 DC    A(0)                REB active queue lockword - TCB
EVTREBAC DC    A(0)                REB active number of REBs
*
EVTSTGQ  DC    CL4'STGQ'           ID
EVTSTGQA DC    A(0)                REB staging queue address
EVTSTGLK DC    A(0)                REB staging queue lockword - ASCB
EVTSTGL2 DC    A(0)                REB staging queue lockword - TCB
*
EVTCMDQ  DC    CL4'CMDQ'           ID
EVTCMDQA DC    A(0)                S34SRV queue address
EVTCMDLK DC    A(0)                S34SRV queue lockword - ASCB
EVTCMDL2 DC    A(0)                S34SRV queue lockword - TCB
EVTCMTCB DC    A(0)                S34SRV subtask TCB address
EVTCMECB DC    A(0)                S34SRV subtask ECB word
EVTCMSTK DC    A(0)                S34SRV stack address
EVTCMCNT DC    A(0)                S34SRV events processed count
EVTCMTKN DC    CL16' '             S34SRV subtask TCB token        @07A
*
EVTWTOQ  DC    CL4'WTOQ'           ID
EVTWTOQA DC    A(0)                S35SRV queue address
EVTWTOLK DC    A(0)                S35SRV queue lockword - ASCB
EVTWTOL2 DC    A(0)                S35SRV queue lockword - TCB
EVTWTTCB DC    A(0)                S35SRV subtask TCB address
EVTWTECB DC    A(0)                S35SRV subtask ECB word
EVTWTCNT DC    A(0)                S35SRV events processed count
EVTWTSTK DC    A(0)                S35SRV stack address
EVTWTRSN DC    A(0)                S35SRV error reason code
EVTWTTKN DC    CL16' '             S35SRV subtask TCB token        @07A
*
EVTRFRQ  DC    CL4'RFRQ'           ID
EVTRFRQA DC    A(0)                RFRSRV queue address
EVTRFRLK DC    A(0)                RFRSRV queue lockword - ASCB
EVTRFRL2 DC    A(0)                RFRSRV queue lockword - TCB
EVTRFTCB DC    A(0)                RFRSRV subtask TCB address
EVTRFECB DC    A(0)                RFRSRV subtask ECB word
EVTRFSTK DC    A(0)                RFRSRV stack address
EVTRFCNT DC    A(0)                RFRSRV events processed count
EVTRFTKN DC    CL16' '             RFRSRV subtask TCB token        @07A
*
EVTADDQ  DC    CL4'ADDQ'           ID
EVTADDQA DC    A(0)                ADDSRV queue address
EVTADDLK DC    A(0)                ADDSRV queue lockword - ASCB
EVTADDL2 DC    A(0)                ADDSRV queue lockword - TCB
EVTADTCB DC    A(0)                ADDSRV subtask TCB address
EVTADECB DC    A(0)                ADDSRV subtask ECB word
EVTADSTK DC    A(0)                ADDSRV stack address
EVTADCNT DC    A(0)                ADDSRV events processed count
EVTADTKN DC    CL16' '             ADDSRV subtask TCB token        @07A
*
EVTCOMQ  DC    CL4'COMQ'           ID
EVTCOMQA DC    A(0)                COMSRV queue address
EVTCOMLK DC    A(0)                COMSRV queue lockword - ASCB
EVTCOML2 DC    A(0)                COMSRV queue lockword - TCB
EVTCOTCB DC    A(0)                COMSRV subtask TCB address
EVTCOECB DC    A(0)                COMSRV subtask ECB word
EVTCOSTK DC    A(0)                COMSRV stack address
EVTCOCNT DC    A(0)                COMSRV events processed count
EVTCOTKN DC    CL16' '             COMSRV subtask TCB token        @07A
*
EVTSTCQ  DC    CL4'STCQ'           ID
EVTSTCQA DC    A(0)                STCSRV queue address
EVTSTCLK DC    A(0)                STCSRV queue lockword - ASCB
EVTSTCL2 DC    A(0)                STCSRV queue lockword - TCB
EVTSTTCB DC    A(0)                STCSRV jobstep TCB address
EVTSTECB DC    A(0)                STCSRV jobstep ECB word
EVTSTSTK DC    A(0)                STCSRV stack address
EVTSTCNT DC    A(0)                STCSRV events processed count
EVTSTTKN DC    CL16' '             STCSRV subtask TCB token        @07A
*
EVTSVCQ  DC    CL4'SVCQ'           ID                              @08A
EVTSVCQA DC    A(0)                SVCSRV queue address
EVTSVCLK DC    A(0)                SVCSRV queue lockword - ASCB
EVTSVCL2 DC    A(0)                SVCSRV queue lockword - TCB
EVTSVTCB DC    A(0)                SVCSRV jobstep TCB address
EVTSVECB DC    A(0)                SVCSRV jobstep ECB word
EVTSVSTK DC    A(0)                SVCSRV stack address
EVTSVCNT DC    A(0)                SVCSRV events processed count
EVTSVTKN DC    CL16' '             SVCSRV subtask TCB token        @07A
*
EVTDIEQ  DC    CL4'DIEQ'           ID
EVTDIEQA DC    A(0)                DIESRV utilization table addr
EVTDITCB DC    A(0)                DIESRV subtask TCB address
EVTDIECB DC    A(0)                DIESRV subtask ECB word
EVTDISTK DC    A(0)                DIESRV stack address
EVTDICNT DC    A(0)                DIESRV events processed count
EVTDITKN DC    CL16' '             DIESRV subtask TCB token        @07A
*
EVTSYSQ  DC    CL4'SYSQ'           ID                              @07A
EVTSYMCT DC    A(0)                SYSSRV MCT table address
EVTSYTCB DC    A(0)                SYSSRV subtask TCB address
EVTSYECB DC    A(0)                SYSSRV subtask ECB word
EVTSYSTK DC    A(0)                SYSSRV stack address
EVTSYTMR DC    A(0)                SYSSRV STIMERM ID
EVTSYCNT DC    A(0)                SYSSRV events processed count
EVTSYWTO DC    A(0)                SYSSRV ECF700E WTO issued count
EVTSYTKN DC    CL16' '             SYSSRV subtask TCB token
*
EVTIOPQ  DC    CL4'IOPQ'           ID
EVTRTBAD DC    A(0)                I/O RTB table address
EVTRTBSZ DC    A(0)                I/O RTB table size
EVTPRLIB DC    A(0)                I/O read buffer address
EVTPREND DC    A(0)                I/O read end-of-buffer address
EVTPRBUF DC    A(0)                I/O buffer size
EVTPRCNT DC    A(0)                I/O buffer record count
EVTB064K DC    A(0)                I/O buffer size (64K)
EVTB064R DC    A(0)                I/O buffer # of records
EVTB128K DC    A(0)                I/O buffer size (128K)
EVTB128R DC    A(0)                I/O buffer # of records
EVTB256K DC    A(0)                I/O buffer size (256K)
EVTB256R DC    A(0)                I/O buffer # of records
EVTTRBUF DC    A(0)                TRCELOG buffer address
EVTTREND DC    A(0)                TRCELOG end of buffer address
*
**       Local Service routines
*
EVTSSMA  DC    A(0)                {ECFCSM|ECFLSM} storage address
EVTPSTA  DC    A(0)                ECFPST post routine EPA
EVTREQA  DC    A(0)                ECFREQ IEFSSREQ front-end EPA
EVTREBA  DC    A(0)                ECFREB rule processor EPA
EVTDYNA  DC    A(0)                ECFDYN DYNALLOC routine EPA
EVTIIOA  DC    A(0)                ECFIIO read processor EPA
EVTOIOA  DC    A(0)                ECFOIO write processor EPA
EVTVRXA  DC    A(0)                ECFVRX variables processor EPA
EVTCOMA  DC    A(0)                ECFCOM command service routine EPA
EVTSTCA  DC    A(0)                ECFSTC service routine EPA
EVTRTADD DC    A(0)                ECFSRV(ADD) RTB table address   @04C
EVTRTRFR DC    A(0)                ECFSRV(RFR) RTB table address   @04C
EVTLSRZ0 DC    A(0)                -available
EVTLSRZ1 DC    A(0)                -available
EVTLSRZ2 DC    A(0)                -available
EVTLSRZ3 DC    A(0)                -available
EVTLSRZ4 DC    A(0)                -available
EVTLSRZ5 DC    A(0)                -available
EVTLSRZ6 DC    A(0)                -available
EVTLSRZ7 DC    A(0)                -available
*
**       Subsystem control data
*
EVTSSVTZ DC    F'0'                SSVT vector size
EVTSZEVT DC    F'0'                EVT vector size
EVTSSMSZ DC    F'0'                ECFCSM|ECFLSM size(doublewords)
EVTDINTV DC    F'0'                DIE timer interval value
EVTDSTOR DC    F'0'                TQE+TQX+SRB storage size
EVTREPLY DC    F'0'                REPLYID - CONSOLxx RMAX value   @02A
EVTKLOOP DC    F'0'                $LOCK failsafe loop value       @03C
EVTAXEXT DC    F'0'                entry authorization index       @03C
EVTAXSET DC    F'0'                authorized authorization index  @03C
EVTLXVAL DC    F'0'                system linkage index - SLX      @03C
EVTETTKN DC    F'0'                ETCRE returned ET token         @03C
EVTSVSCT DC    F'0'                SVC screening front-end count
EVTSVCCT DC    F'0'                SVC screening back-end count
EVTS60CT DC    F'0'                IEFSD060 SV screening count
EVTSVRBC DC    F'0'                SVRB issued SVC count
EVTRSXR0 DC    F'0'                -available
EVTRSXR1 DC    F'0'                -available
EVTRSXR2 DC    F'0'                -available
EVTRSXR3 DC    F'0'                -available
EVTRSXR4 DC    F'0'                -available
EVTRSXR5 DC    F'0'                -available
EVTRSXR6 DC    F'0'                -available
EVTRSXR7 DC    F'0'                -available
         DS    0F
EVTMSGCT DC    F'16'               MONWTOCT=16 WTO count default   @04C
EVTASID  DC    XL2'0'              ECF instance ASID
EVTASIDX DC    XL2'0'              -available
         DS    0F
EVTSRBCP DC    F'0'                SRB cell pool ID
EVTSRBCL DC    F'16'               SRBPOOL primary cells
EVTSRBXT DC    F'08'               SRBPOOL secondary extents
         DS    0F
EVTSRECP DC    F'0'                SRE cell pool ID
EVTSRECL DC    F'08'               SREPOOL primary cells
EVTSREXT DC    F'04'               SREPOOL secondary extents
         DS    0F
EVTREBCP DC    F'0'                REB cell pool ID
EVTREBXC DC    F'0'                REBX cell pool ID
EVTREBCL DC    F'16'               REBPOOL primary cells
EVTREBXT DC    F'08'               REBPOOL secondary extents
         DS    0D
EVTXINTV DC    CL8'00000000'       TIMER=interval hhmmssth mask
EVTSVCTM DC    CL8'00000100'       ECFS35(INITSVC) timer interval  @08A
EVTSYSTM DC    CL8'00001500'       ECFSRV(SYSSRV) timer interval   @04C
EVTSVCEN DC    XL8'0000000000000000' original SVC table entry
EVTLPATK DC    XL8'0000000000000000' returned CSVDYLPA ADD token   @04C
EVTSTOKN DC    XL8'0000000000000000' zECF address space STOKEN     @04C
EVTDRSV6 DC    CL8' '              -available
EVTDRSV7 DC    CL8' '              -available
         DS    0D
EVTSSMNM DC    CL8'ECFLSM'         default SSI-support LMOD name
EVTMPSTC DC    CL8'ECFTMP'         default TMP JCL procedure name
EVTTMPNM DC    CL8'IKJEFT01'       default TSO/TMP program name
EVTMASTR DC    CL8'ECFMSTR'        default MSTR=ECFMSTR member name
EVTLPARN DC    CL8'LPARname'       LPAR name
EVTECFRS DC    CL4'ECFR'           ECFR TSO subsystem name default
EVTSYSID DC    CL4'SYSn'           syatem ID from SMCASID
EVTSTCNM DC    CL8'ECF'            ECF started task name default
EVTOPTSH DC    CL8'NOSHOW'         default OPT=NOSHOW option
EVTINITP DC    CL8'$$zECF$$'       ECFINIT initialization parameter
EVTZFCID DC    CL4'INIT'           {INIT|ACTV|TERM} function code ID
EVTCMDCH DC    CL1'?'              CMD=? default command prefix char
EVTRUNAS DC    CL3'STC'            run rules as STCs. RUNAS=STC default
EVTZRCVY DS    CL3'YES'            RCV={NO|YES} recovery parameter
EVTSSREQ DS    CL3'NO'             SSREQ={NO|YES} option default
EVTCSAOP DC    CL4'NO'             CSA={NO|YES} option
EVTSVCNM DC    CL3'013'            SVC=013 default (ABEND)
EVTLCKID DC    CL5' '              ECFS35 lock obtain failed ID    @03C
EVTSETCN DC    CL3'YES'            SETCON=YES init option default  @08A
EVTRSZZ6 DC    CL5' '              -available                      @08C
EVTRSZZ7 DC    CL8' '              -available
EVTRSZZ8 DC    CL8' '              -available
EVTVMID  DC    CL8' '              VMID                            @08A
EVTINJCL DC    CL8'ECFSUB'         RUNAS=JOB INTRDR JCL member name
EVTSRVMJ DC    CL8'ECFSRV'         ENQ/DEQ ECFSRV major name
EVTSRVMN DC    CL8'EXECRULE'       ENQ/DEQ ECFSRV minor name
EVTTRCMJ DC    CL8'TRACE'          ENQ/DEQ ECFTRC major name
EVTTRCMN DC    CL8'TRCELOG'        ENQ/DEQ ECFTRC minor name
EVTAVAL0 DC    CL8' '              -available
EVTAVAL1 DC    CL8' '              -available
EVTAVAL2 DC    CL8' '              -available
EVTAVAL3 DC    CL8' '              -available
EVTAVAL4 DC    CL8' '              -available
EVTAVAL5 DC    CL8' '              -available
EVTAVAL6 DC    CL8' '              -available
EVTAVAL7 DC    CL8' '              -available
EVTRPSVC DC    CL8'NO'             TRAPSVC=NO screening default    @08A
         DS    0C
EVTUSRZE DC    AL1(7)              ECF user-ID name length         @06C
EVTUSRID DC    CL8'ECFUSER'        ECF user-ID name                @06C
EVTCLSZE DC    AL1(8)              SAF class name length           @06C
EVTCLASS DC    CL8'ECFCLASS'       SAF class name                  @06C
         DS    0C
EVTSYSIN DC    CL44'SYS1.ECF.SYSIN'    default SYSIN DSName
EVTSYSTI DC    CL44'SYS1.ECF.SYSTSIN'  default SYSTSIN DSName
EVTSYSOT DC    CL44'SYS1.ECF.SYSPRINT' default SYSPRINT DSName
EVTSYSPT DC    CL44'SYS1.ECF.SYSTSPRT' default SYSTSPRT DSName
EVTSYSPR DC    CL44'SYS1.ECF.CMDPROC'  default CMDPROC DSName
EVTPARML DC    CL44'SYS1.ECF.PARMLIB'  default PARMLIB DSName
EVTSJOBS DC    CL44'SYS1.ECF.ECFJOBS'  default ECFJOBS DSName
         DS    0C
EVTKNMDL DC    CL16'SYS-ECFn-VnRnM0'   System-Level token name model
EVT$CNVX DC    CL16'0123456789ABCDEF'  used by $CNVX macro call
EVTBLNKS DC    CL16' '             BLAMKS (RESERVED - DONOT CHANGE)
EVTISTCK DC    CL08' '             initialization time TOD value
EVTOSTCK DC    CL16' '             initialization time in decimal
         DS    0C
EVTTSUST DC    CL8'IEF125I'        TSUname  STARTED                @08A
EVTTSUEN DC    CL8'IEF126I'        TSUname  ENDED                  @08A
EVTSTCST DC    CL8'IEF403I'        STCname  STARTED                @08A
EVTSTCEN DC    CL8'IEF404I'        STCname  ENDED                  @08A
EVTJOBST DC    CL8'IEF403I'        JOBname  STARTED                @08A
EVTJOBEN DC    CL8'IEF404I'        JOBname  ENDED                  @08A
*
**       Common Subsystem ABEND codes
*
EVTUFF   DS    0F
EVTUFF0  DC    XL4'00000FF0' U4080 Rel mismatch {ECFSUB|ECFCSM|ECFLSM}
EVTUFF1  DC    XL4'00000FF1' U4081 general ABEND code
EVTUFF2  DC    XL4'00000FF2' U4082 subsys init/term ABEND code
EVTUFF3  DC    XL4'00000FF3' U4083 cell pool manager ABEND code
EVTUFF4  DC    XL4'00000FF4' U4084 input/output ABEND code
EVTUFF5  DC    XL4'00000FF5' U4085 rule event manager ABEND code
EVTUFF6  DC    XL4'00000FF6' U4086 Subsystem interface ABEND code
EVTUFF7  DC    XL4'00000FF7' U4087 Trace service routinr ABEND code
EVTUFF8  DC    XL4'00000FF8' U4088 subroutine stack overflow ABEND
EVTUFF9  DC    XL4'00000FF9' U4089 service routine stack overflow ABEND
EVTUFFA  DC    XL4'00000FFA' U4090 IRB/PST ABEND code
EVTUFFB  DC    XL4'00000FFB' U4091 Event Capture subtasks ABEND code
EVTUFFC  DC    XL4'00000FFC' U4092 Lock manager ABEND code
EVTUFFD  DC    XL4'00000FFD' U4093 SVC screening ABEND code        @08C
EVTUFFE  DC    XL4'00000FFE' U4094 SVC/XPC manager ABEND code
EVTUFFF  DC    XL4'00000FFF' U4095 XCTL to ECFSUB ABENDed in MSAS
*
**       SVC-34 SSIDATA debugging work area
*
         DS    0D
EVTS34XD DC    CL8'S34XDATA'       hexadecimal data ID
EVTX34DA DC    XL72'0'             data
         DS    0D
EVTS34DD DC    CL8'S34CDATA'       Decimal data ID
EVTC34DA DC    CL72' '             data
*
**       SVC-35 SSIDATA debugging work area
*
         DS    0D
EVTS35XD DC    CL8'S35XDATA'       hexadecimal data ID
EVTX35DA DC    XL72'0'             data
         DS    0D
EVTS35DD DC    CL8'S35CDATA'       Decimal data ID
EVTC35DA DC    CL72' '             data
*
**       SVCDATA debugging work area
*
EVTSVXDD DC    CL8'SVCXDATA'       hexadecimal data ID
EVTXDATA DC    XL72'0'             data
         DS    0D
EVTSVCDD DC    CL8'SVCCDATA'       Decimal data ID
EVTCDATA DC    CL72' '             data
*
**       End of vector table
*
EVTX     DS    0D
EVTIDX   DC    CL8'EVTEND'
EVT@SIZE EQU   *-EVT               EVT size
         POP   PRINT
         MEND
./ ADD NAME=$ECFWTB  0103-21069-21304-1649-00045-00045-00003-BENMAR  54
*/*******************************************************************/
*/*                                                                 */
*/* Name: $ECFWTB                                                   */
*/*                                                                 */
*/* Function: WTO Message Table Vector                              */
*/*                                                                 */
*/* Notes: None                                                     */
*/*                                                                 */
*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
*/*                                                                 */
*/*                                                                 */
*/*******************************************************************/
*---------------------------CHANGE LOG-------------------------------*
*                                                                    *
* ID    Rel    Date       Author        Comments                     *
*--------------------------------------------------------------------*
* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
*     |      |          |             |                              *
**********************************************************************
*--------+---------+---------+---------+---------+---------+--------+*
         MACRO
         $ECFWTB &DSECT=NO
         AIF   ('&DSECT' EQ 'NO').WTB00
         AIF   ('&DSECT' EQ 'YES').WTB10
         AGO   .ERR01
.WTB00   ANOP  ,
WTB      DS    0F
WTBSTAR  DC    A(WTOTBLE)             table start
WTBEND   DC    A(WTOTEND)             table end
WTBSIZE  DC    AL4(WTOTBSZ)           table size
WTB@SIZE EQU   *-WTB
         MEXIT ,
.WTB10   ANOP  ,
WTB      DSECT ,
WTBSTAR  DS    A                      table start
WTBEND   DS    A                      table end
WTBSIZE  DS    AL4                    table size
WTB@SIZE EQU   *-WTB
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $ECFWTB - Invalid DSECT operand specified'
         MEND  ,
./ ADD NAME=$ECFWTO  0102-21069-21304-1649-00045-00045-00002-BENMAR  58
         MACRO
         $ECFWTO
*/*******************************************************************/
*/*                                                                 */
*/* Name: $ECFWTO                                                   */
*/*                                                                 */
*/* Description: SRB-related WTO message table                      */
*/*                                                                 */
*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
*/*                                                                 */
*/*                                                                 */
*/*******************************************************************/
*---------------------------CHANGE LOG-------------------------------*
*                                                                    *
* ID    Rel    Date       Author        Comments                     *
*--------------------------------------------------------------------*
* @01 | V1R1 | 10142020 | Ben Marino  | Initial version              *
* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
*     |      |          |             |                              *
**********************************************************************
*--------+---------+---------+---------+---------+---------+--------+*
*
**       WTO message entry
*
WTOE     DSECT ,
WTOELOCK DS    F                     .lockword
WTOETEXT DS    CL124                 .message text
WTOE@SZE EQU   *-WTOE                .entry size
*
**       WTO message table
*
WTO      DSECT ,
WTOID    DS    CL4'WTO'              .WTO message table
WTOCOUNT DS    F                     .number of WTO entries
WTO@PFX  EQU   *-WTO
WTOMSGS  DS    CL(4096-WTO@PFX)      .table entries start
WTO@MSGS EQU   *-WTOMSGS             .table entries end
WTOWTOE  EQU   (*-WTOMSGS)/WTOE@SZE  .number of WTO entries
WTO@SIZE EQU   *-WTO
*
*        The following statement will cause assembly errors when
*        the WTO size exceeds 4K.
*
         DS    0CL(4096-WTO@SIZE+1)
         MEND  ,
./ ADD NAME=$ECFXRB  0131-21224-21304-1650-00055-00044-00025-BENMAR  01
*/*********************************************************************
*/*                                                                   *
*/* Nane: $ECFXRB                                                     *
*/*                                                                   *
*/* Description: Asynchronous exit data area                          *
*/*                                                                   *
*/* Notes: None                                                       *
*/*                                                                   *
*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)                 *
*/*                                                                   *
*/*                                                                   *
*/*********************************************************************
*---------------------------CHANGE LOG--------------------------------*
*                                                                     *
* ID    Rel    Date       Author        Comments                      *
*---------------------------------------------------------------------*
* @01 | V2R3 | 08172021 | Ben Marino  | Serviceability enhancements   *
*     |      |          |             |                               *
***********************************************************************
*-------+---------+---------+---------+---------+---------+---------+-*
         MACRO
         $ECFXRB &DSECT=YES
.*
         AIF   ('&DSECT' EQ 'NO').XRB020
.*
XRB      DSECT ,
         AGO   .XRB030
.XRB020  ANOP  ,
XRB      DS    0F
.XRB030  ANOP  ,
XRBID    DS    CL4'XRB'         ID
XRBKEY   DS    XL1              Protect key
XRB@KEY0 EQU   X'00'            -Key zero
XRB@KEY8 EQU   X'80'            -Key eight
XRBSTATE DS    XL1              system state
XRB@SUP  EQU   X'00'            -Supervisor state
XRB@PROB EQU   X'80'            -Problem state
XRBRSV0  DS    XL2              -available
         DS    0A
XRBEP    DS    A                EP
XRBPARM  DS    A                exit parameter
XRBTCB   DS    A                TCB address
XRBSRB   DS    A                SRB block address
XRBSTOR  DS    A                private XRB address
XRBXDSA  DS    A                private XDSA address
XRBRSV1  DS    A                -available
XRBRC    DS    A                return code
XRBRSN   DS    A                reason code
XRBSTOKN DS    XL8              STOKEN
XRBTTOKN DS    XL16             TCBTOKEN
XRBREGS  DS    XL64             SRB save area
XRBPLIST DS    XL48             parmlist
XRB@PLST EQU   *-XRBPLIST       parmlist length
XRB@SZE  EQU   *-XRB            XRB length
         MEND  ,
./ ADD NAME=$ECFZIO  0107-21069-21304-1650-00085-00084-00070-BENMAR  06
*/*******************************************************************/
*/*                                                                 */
*/* Nane: $ECFZIO                                                   */
*/*                                                                 */
*/* Description: Input/Output Access Data Area                      */
*/*                                                                 */
*/* Notes: None                                                     */
*/*                                                                 */
*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
*/*                                                                 */
*/*                                                                 */
*/*******************************************************************/
*---------------------------CHANGE LOG-------------------------------*
*                                                                    *
* ID    Rel    Date       Author        Comments                     *
*--------------------------------------------------------------------*
* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
* @02 | V1R1 | 05022020 | Ben Marino  | Serviceability enhancements  *
* @03 | V2R3 | 08292021 | Ben Marino  | zOS serviceability support   *
*     |      |          |             |                              *
**********************************************************************
*--------+---------+---------+---------+---------+---------+--------+*
         MACRO
         $ECFZIO
ZIO      DSECT ,
ZIOID    DS    CL4'ZIO'
ZIOFUNC  DS    XL1              *ECFIIO* requests
ZIO@TSIN EQU   X'F0'             SYSTSIN allocation request
ZIO@TSPR EQU   X'F1'             SYSTSPRT allocation request
ZIO@TMEM EQU   X'F2'             write SYSTSIN member records
ZIO@TEMP EQU   X'F3'             temporary DSName allocate request
ZIO@READ EQU   X'F4'             read data records request
ZIO@JOBS EQU   X'F5'             ECFJOBS allocate request
ZIO@MSAS EQU   X'F6'             MSAS DSName allocation request
ZIO@RCVY EQU   X'F7'             ECFSTC recovery allocate request
ZIO@RSV8 EQU   X'F8'            -available
ZIO@RSV9 EQU   X'F9'            -available
         DS    0X
ZIOFUNC2 DS    XL1              *ECFOIO* requests
ZIO@GET  EQU   X'F0'             GET access request
ZIO@PUT  EQU   X'F1'             PUT access request
ZIO@R2V1 EQU   X'F2'            -available
ZIO@R2V2 EQU   X'F3'            -available
ZIO@R2V4 EQU   X'F4'            -available
ZIO@R2V5 EQU   X'F5'            -available
ZIO@R2V6 EQU   X'F6'            -available
ZIO@R2V7 EQU   X'F7'            -available
ZIO@R2V8 EQU   X'F8'            -available
ZIO@R2V9 EQU   X'F9'            -available
         DS    0X
ZIOFLG1  DS    XL1              flags
ZIO@EDIT EQU   X'80'            EDIT recovery caller
ZIO@UNAL EQU   X'40'            unallocate request indicator
ZIO@STCC EQU   X'20'            started task recovery caller
ZIO@SOUT EQU   X'10'            ECFCOM(DYNLPA) caller indicator    @03C
ZIO@VR14 EQU   X'08'            -available
ZIO@VR15 EQU   X'04'            -available
ZIO@VR16 EQU   X'02'            -available
ZIO@VR17 EQU   X'01'            -available
         DS    0X
ZIOFLG2  DS    XL1              flags
ZIO@VR20 EQU   X'80'            -available
ZIO@VR21 EQU   X'40'            -available
ZIO@VR22 EQU   X'20'            -available
ZIO@VR23 EQU   X'10'            -available
ZIO@VR24 EQU   X'08'            -available
ZIO@VR25 EQU   X'04'            -available
ZIO@VR26 EQU   X'02'            -available
ZIO@VR27 EQU   X'01'            -available
         DS    0F
ZIORECA  DS    F                record data address
ZIORECT  DS    F                number of input data records
ZIORECS  DS    F                number of returned data records
ZIOPRLIB DS    F                I/O buffer address
ZIOPRBUF DS    F                I/O buffer size
ZIOPREND DS    F                I/O buffer-end address
ZIODSORG DS    XL2              dataset organization
ZIO@PO   EQU   X'0200'          -DSORG=PO
ZIO@PS   EQU   X'4000'          -DSORG=PS
ZIOLRECL DS    XL2              record length -LRECL               @02C
ZIOMEMBR DS    CL8              member name
ZIODDNAM DS    CL8              DDname
ZIODSNAM DS    CL44             DSName
ZIO@SIZE EQU   *-ZIO            entry size
         MEND
./ ADD NAME=$ENTRY   0109-21069-21304-1650-00207-00201-00061-BENMAR  09
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $ENTRY                                                    */
.*/*                                                                 */
.*/* Function: Control section entry macro                           */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
         $ENTRY &ID=ECF,                                               +
               &EPR=R15,                                               +
               &EPA=R10,                                               +
               &SPN=SP100,                                             +
               &DSA=R12,                                               +
               &STK=R9,                                                +
               &SAVE=YES,                                              +
               &DIE=NO,                                                +
               &SREQ=NO,                                               +
               &IEWF=NO,                                               +
               &MID=YES,                                               +
               &STACK=,                                                +
               &SIZE=DSA@SIZE
.*
         LCLC  &ZENTRY
&ZENTRY  SETC  '&ID'.'&SYSNDX'
.*
         ENTRY &SYSECT                .Entry point
         USING &SYSECT,&EPR           .set temp addressability
         B     &ZENTRY                .branch
.*
         AIF   ('&SREQ' NE 'YES').NOSREQ
*        $SREQID DSECT=NO             .module ID data
         $SREQID DSECT=NO             .module ID data
         AGO   .NORMAL
.NOSREQ  ANOP  ,
         AIF   ('&IEWF' NE 'YES').NOIEWF
*        $IEWFID DSECT=NO             .module ID data
         $IEWFID DSECT=NO             .module ID data
         AGO   .NORMAL
.NOIEWF  ANOP  ,
         AIF   ('&MID' EQ 'NO').NORMAL
*        $MODID DSECT=NO              .module ID data
         $MODID DSECT=NO              .module ID data
.NORMAL  ANOP  ,
         DROP  &EPR                   .drop temp addressability
.*
&ZENTRY  DS    0H
         AIF   ('&SAVE' EQ 'NO').ENTY99
         AIF   ('&SAVE' EQ 'YES').ENTY00
         AGO   .ERR02
.*
.**      Subtask entry conventions
.*
.ENTY00  ANOP  ,
         AIF   ('&STACK' NE 'SUBTCB').ENTY10
         STM   R14,R12,GPR@R14(R13)   .save caller's regs
         LR    &EPA,&EPR              .set base address
         USING &SYSECT,&EPA           .set base addressability
         L     R1,X'21C'              .TCB address
         L     R1,X'0A8'(,R1)         .TCBUSER (stack address)
         L     R3,=AL4(4096+STK@SIZE+SDSA@MAX)
         LR    R2,R1                  .
         XR    R15,R15                .
         MVCL  R2,R14                 .clear stack
         ST    R13,GPR@BWD(,R1)       .chain save area backward
         ST    R1,GPR@FWD(,R13)       .chain save area forward
         LR    R13,R1                 .set save area address
         LR    &DSA,R13               .set also as DSA address
         USING DSA,&DSA               .DSA addressability
         AL    R1,=AL4(4096)          .compute stack address
         LR    &STK,R1                .set STK reg
         USING STK,&STK               .STK addressability
         AGO   .ENTY15
.*
.**      Jobstep task entry conventions
.*
.ENTY10  ANOP  ,
         STM   R14,R12,GPR@R14(R13)   .save caller's regs
         LR    &EPA,&EPR              .set base address
         USING &SYSECT,&EPA           .set base addressability
         L     R3,=AL4(&SIZE+STK@SIZE+SDSA@MAX)
*        GETMAIN RU,LV=(R3),SP=&SPN   .obtain dynamic storage
         GETMAIN RU,LV=(R3),SP=&SPN   .obtain dynamic storage
         LR    R2,R1                  .
         XR    R15,R15                .
         MVCL  R2,R14                 .clear stack
         ST    R13,GPR@BWD(,R1)       .chain save area backward
         ST    R1,GPR@FWD(,R13)       .chain save area forward
         LR    R13,R1                 .set save area address
         LR    &DSA,R13               .set also as DSA address
         USING DSA,&DSA               .DSA addressability
.*
.**      Initialize processing stack
.*
         AL    R1,=AL4(&SIZE)         .compute stack address
         LR    &STK,R1                .set STK reg
         USING STK,&STK               .STK addressability
         AIF   ('&STACK' EQ 'SSITCB').ENTY20
         AIF   ('&STACK' NE 'JSTTCB').ERR01
.*
.**      Jobstep task initialization
.*
         MVC   STKID,=CL4'STK'     .ID stack
         LA    R1,DSAPDCB          .DCB block
         ST    R1,STKPDCB          .init PARMLIB DCB
         MVC   STKLMOD,MIDNAME     .ID LMOD
         MVC   STKRTMA,ECFRTMA     .recovery manager EPA
         MVC   STKCSAA,ECFCSAA     .ECFCSA service routine EPA
         MVC   STKWTOA,ECFWTOA     .WTO service routine EPA
         MVC   STKSSIA,ECFSSIA     .$SSIREQ service routine EPA
         MVC   STKSRIA,SRIENVA     .SRVentry environment EPA
         MVC   STKSRXA,SRXENVA     .SRVexit environment EPA
         MVC   STKSBIA,SBIENVA     .SUBentry environment EPA
         MVC   STKSBXA,SBXENVA     .SUBexit environment EPA
         AGO   .ENTY30
.*
.**      Subtask initialization
.*
.ENTY15  ANOP  ,
         MVC   STKID,=CL4'STK'         .ID stack
         MVC   STKLMOD,MIDNAME         .ID LMOD
         L     R1,GPR@BWD(,R13)        .caller's save area
         L     R1,GPR@R1(,R1)          .EVT address
         L     R1,EVTSTKAD-EVT(,R1)    .jobstep task STK address
         MVC   STKRTMA,STKRTMA-STK(R1) .recovery manager EPA
         MVC   STKCSAA,STKCSAA-STK(R1) .ECFCSA service routine EPA
         MVC   STKWTOA,STKWTOA-STK(R1) .WTO service routine EPA
         MVC   STKSSIA,STKSSIA-STK(R1) .$SSIREQ service routine EPA
         MVC   STKSRIA,STKSRIA-STK(R1) .SRVentry environment EPA
         MVC   STKSRXA,STKSRXA-STK(R1) .SRVexit environment EPA
         MVC   STKSBIA,STKSBIA-STK(R1) .SUBentry environment EPA
         MVC   STKSBXA,STKSBXA-STK(R1) .SUBexit environment EPA
         MVC   STKTRCA,STKTRCA-STK(R1) .ECFTRC trace routine EPA
         MVC   STKDDCB,STKDDCB-STK(R1) .DBUGLOG DCB address
         MVC   STKTDCB,STKTDCB-STK(R1) .TRCELOG DCB address
         MVC   STKASCB,STKASCB-STK(R1) .copy subsysytem ASCB       @02A
         MVC   STKSYSID,STKSYSID-STK(R1) .copy system name         @02A
         MVC   STKSUBNM,STKSUBNM-STK(R1) .copy subsysytem name     @02A
         MVC   STKFLAGS,STKFLAGS-STK(R1) .copy common flags        @02C
         AGO   .ENTY30
.*
.**      SSI listeners initialization
.*
.ENTY20  ANOP  ,
         MVC   STKID,=CL4'STK'     .ID stack
         XC    STKDDCB,STKDDCB     .zero DBUGLOG DCB address
         XC    STKTDCB,STKTDCB     .zero TRCELOG DCB address
         MVC   STKLMOD,MIDNAME     .ID LMOD
         MVC   STKRTMA,ECFRTMA     .recovery manager EPA
         MVC   STKSRIA,SRIENVA     .SRVentry environment EPA
         MVC   STKSRXA,SRXENVA     .SRVexit environment EPA
         MVC   STKSBIA,SBIENVA     .SUBentry environment EPA
         MVC   STKSBXA,SBXENVA     .SUBexit environment EPA
         OI    STKFLG1,STK@SUPR    .Supervisor indicator
.*
.**      Common services initialization
.*
.ENTY30  ANOP  ,
         LA    R1,STKSTKE            .top STKE address
         ST    R1,STKSTKET           .set address
         ST    R1,STKSTKEC           .current STKE entry address
         L     R1,=AL4(STK@SIZE)     .total STK stack size
         ALR   R1,&STK               .compute STK end-address
         LR    R15,R1                .copy STK end-address
         SL    R1,=AL4(STKE@SZE)     .last STKE address
         ST    R1,STKSTKEL           .set address
.*
         ST    R15,STKSDSAT          .top DSA address
         ST    R15,STKSDSAC          .current DSA address
         L     R1,=AL4(SDSA@MAX-SDSA@SZE) .DSA table size
         ALR   R1,R15                .compute DSA end-address
         ST    R1,STKSDSAL           .set address
.*
         LA    R1,STKSTKE            .top STKE address
         USING STKE,R1               .set addressability
         LA    R1,STKESRWA           .top SRWA address
         USING SRWA,R1               .set addressability
         MVC   SRWAID,=CL4'SRWA'     .ID SRWA
         MVC   SRWALMOD,MIDNAME      .ID LMOD
         MVC   SRWASECT,MIDNAME      .ID CSECT
         MVC   SRWARECR,=CL8'ECFRTM' .ID recovery routine
         DROP  R1                    .
         L     R1,GPR@BWD(,R13)      .caller's save area
         LM    R0,R1,GPR@R0(R1)      .set parm regs
.ENTY99  ANOP  ,
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $ENTRY - STACK operand specification error'
         MEXIT ,
.ERR02   MNOTE 8,'*** $ENTRY - SAVE operand specification error'
         MEXIT ,
         MEND
./ ADD NAME=$EXIT    0102-21069-21304-1650-00066-00066-00002-BENMAR  16
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $EXIT                                                     */
.*/*                                                                 */
.*/* Function: Control section exit macro                            */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
         $EXIT &RC=,                                                   +
               &RSN=,                                                  +
               &SPN=SP100,                                             +
               &PARM=,                                                 +
               &STACK=,                                                +
               &SIZE=DSA@SIZE
.*
         LR    R3,R13                   .protect my save area
         L     R13,GPR@BWD(,R13)        .caller's save area
         AIF   ('&RC' EQ '').UNSTK10
         AIF   ('&RC'(1,1) EQ '(').ERR01
         MVC   GPR@R15(4,R13),&RC       .return RC
.*
.UNSTK10 ANOP  ,
         AIF   ('&RSN' EQ '').UNSTK20
         AIF   ('&RSN'(1,1) EQ '(').ERR01
         MVC   GPR@R0(4,R13),&RSN       .return RSN
.*
.UNSTK20 ANOP  ,
         AIF   ('&PARM' EQ '').UNSTK30
         AIF   ('&PARM'(1,1) EQ '(').ERR01
         MVC   GPR@R1(4,R13),&PARM      .return PARM
.*
.UNSTK30 ANOP  ,
         AIF   ('&STACK' NE 'SUBTCB').UNSTK40
         LM    R14,R12,GPR@R14(R13)     .restore regs
         BR    R14                      .return
         MEXIT ,
.*
.UNSTK40 ANOP  ,
         L     R2,=AL4(&SIZE+STK@SIZE+SDSA@MAX)
*        FREEMAIN RU,LV=(R2),A=(R3),SP=&SPN .
         FREEMAIN RU,LV=(R2),A=(R3),SP=&SPN .
         LM    R14,R12,GPR@R14(R13)     .restore regs
         BR    R14                      .return
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $EXIT - Register notation unsupported'
         MEXIT ,
.ERR02   MNOTE 8,'*** $EXIT - Invalid STACK operand specified'
         MEXIT ,
         MEND
./ ADD NAME=$FSA     0102-21069-21304-1650-00060-00060-00002-BENMAR  21
.*/*******************************************************************/
.*/*                                                                 */
.*/* Nane: $FSA                                                      */
.*/*                                                                 */
.*/* Description: Input/output access data area                      */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
         $FSA &FUNC,&ADDR=,&REG=R15
.*
         AIF   ('&FUNC' EQ 'SET').SETFSA
         AIF   ('&FUNC' EQ 'GET').GETFSA
         AGO   .ERR01
.*
.SETFSA  ANOP  ,
         AIF   ('&ADDR' EQ '').ERR02
         L     &REG,X'21C'            .TCB address
         ICM   &REG,7,X'091'(&REG)    .FSA address
         AIF   ('&ADDR'(1,1) EQ '(').SET000
         MVC   0(4,&REG),&ADDR        .update FSA+0
         MEXIT ,
.*
.SET000  ANOP  ,
         ST    &ADDR,0(,&REG)         .update FSA+0
         MEXIT ,
.*
.GETFSA  ANOP  ,
         L     &REG,X'21C'            .TCB address
         ICM   &REG,7,X'091'(&REG)    .FSA address
         AIF   ('&ADDR' EQ '').ERR02
         AIF   ('&ADDR'(1,1) EQ '(').GET000
         MVC   &ADDR,0(&REG)          .copy FSA+0
         MEXIT ,
.*
.GET000  ANOP  ,
         L     &ADDR,0(,&REG)         .load FSA+0
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR00   MNOTE 8,'*** $FSA - ADDR=&ADDR not allowed; Use register 1-14'
         MEXIT ,
.ERR01   MNOTE 8,'*** $FSA - Invalid function operand specified'
         MEXIT ,
.ERR02   MNOTE 8,'*** $FSA - ADDR= Operand required not specified'
         MEND
./ ADD NAME=$GLBLS   0115-21069-21309-0847-00036-00044-00010-BENMAR  44
         PUSH  PRINT
         PRINT OFF
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $GLBLS                                                    */
.*/*                                                                 */
.*/* Function: ECF subsystem global definitions                      */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.* @03 | V2R2 | 03102021 | Ben Marino  | zOS security server support  *
.* @04 | V2R3 | 11072021 | Ben Marino  | zOS SVC screening support    *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         GBLC  &ZOS
         GBLC  &REL
         GBLC  &SUB
         GBLC  &APAR
         GBLC  &CPYRGHT
&ZOS     SETC  'YES'        .z/OS expansion option                 @02C
&REL     SETC  'V2R3M0'     .Version 2, Release 3, Modification 0  @04C
&SUB     SETC  'zECF'       .default subsystem name
&APAR    SETC  'APAR000'    .APAR number
&CPYRGHT SETC  '© Copyright: Ben Marino (Unpublished)'
         POP   PRINT
./ ADD NAME=$IEWFID  0102-21069-21304-1650-00046-00046-00002-BENMAR  35
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $IEWFID                                                   */
.*/*                                                                 */
.*/* Function: Define ECFIEW program fetch constants                 */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $IEWFID &ID=IEW,&DSECT=YES
         COPY  $GLBLS
         AIF   ('&DSECT' EQ 'NO').IEW00
&ID      DSECT ,
&ID.BR   DC    A(0)                   .branch
.IEW00   ANOP  ,
&ID.FTCH DC    A(0)                   .IEWFETCH EPA
         AIF   ('&DSECT' EQ 'NO').IEW05
&ID.FTCL DC    AL4(0)                 .ECFIEW routine size
&ID.SPN  DC    AL4(228)               .storage subpool
         AGO   .IEW10
.IEW05   ANOP  ,
&ID.FTCL DC    AL4(ECFIEWLN)          .ECFIEW routine size
&ID.SPN  DC    AL4(228)               .target storage subpool
.IEW10   ANOP  ,
&ID.NAME DC    CL8'&SYSECT'           .control section name
&ID.SSM  DC    CL8'ECFSSM'            .target CSA load module
&ID.SUB  DC    CL4'&SUB'              .subsystem name prefix
&ID.REL  DC    CL8'&REL'              .release level
&ID.APAR DC    CL8'&APAR'             .APAR number
&ID.DATE DC    CL8'&SYSDATE'          .assembly date
&ID.TIME DC    CL8'&SYSTIME'          .assembly time
&ID.CPYR DC    CL40'&CPYRGHT'
         MEND  ,
./ ADD NAME=$LOAD    0110-21069-21304-1650-00053-00045-00030-BENMAR  39
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $LOAD                                                     */
.*/*                                                                 */
.*/* Description: LOAD load module into CSA/LPA                      */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
         $LOAD &LMOD=,&INTO=
.*
         AIF   ('&LMOD' EQ '').ERR01
         AIF   ('&LMOD'(1,1) EQ '(').LMOD00
         LA    R1,&LMOD                .LMOD name address
         AGO   .LMOD05
.LMOD00  ANOP  ,
         LR    R1,&LMOD                .LMOD name address
.*
.LMOD05  ANOP  ,
         AIF   ('&INTO' EQ 'CSA').LMOD10                           @02A
         AIF   ('&INTO' NE 'LPA').ERR02                            @02C
         LA    R0,12                   .INTO=LPA add request       @02A
         AGO   .LMOD99                                             @02A
.*
.LMOD10  ANOP  ,
         LA    R0,4                    .INTO=CSA add request
.*
.**      Invoke service routine
.*
.LMOD99  ANOP  ,
         L     R15,STKCSAA             .service EPA
         BALR  R14,R15                 .call service routine
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $LOAD - Invalid LMOD operand specified'
         MEXIT ,
.ERR02   MNOTE 8,'*** $LOAD - Invalid INTO operand specified'
         MEND
./ ADD NAME=$LOCK    0102-21125-21304-1650-00160-00154-00144-BENMAR  43
.*/*******************************************************************/
.*/*                                                                 */
.*/* NAME: $LOCK                                                     */
.*/*                                                                 */
.*/* DESCRIPTION: Lock Resource Macro                                */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R3 | 10272021 | Ben Marino  | Added SVC screening support  *
.*     |      |          |             |                              *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $LOCK &LOCK,                                                  +
               &OP1=R0,                                                +
               &OP2=R1,                                                +
               &SSI=NO,                                                +
               &LK=PSAAOLD,                                            +
               &LK2=PSATOLD,                                           +
               &FAIL=,                                                 +
               &WRKREG=R15
.*
         AIF   ('&LOCK' EQ '').ERR01
.*
         LCLC  &ZLK
&ZLK     SETC  'ZLK'.'&SYSNDX'
         AIF   ('&LOCK' EQ 'GETCMS').GETCMS
         AIF   ('&LOCK' EQ 'GETLOCAL').GETLCL
.*
         AIF   ('&SSI' EQ 'YES').SSILOCK
&ZLK     DS    0H
         SPKA  0(0)                   .supervisor key
&ZLK.A   XR    &OP1,&OP1              .zero
         L     &OP2,&LK               .lockword value
         CS    &OP1,&OP2,&LOCK        .lock available?
         BNE   &ZLK.A                 .no, try again
         AGO   .LOCK
.*
.SSILOCK ANOP  ,
         L     &WRKREG,EVTKLOOP       .failsafe
&ZLK.B   XR    &OP1,&OP1              .zero
         L     &OP2,&LK               .lockword value
         CS    &OP1,&OP2,&LOCK        .lock available?
         BE    &ZLK.C                 .yes, carry on
         BCT   &WRKREG,&ZLK.B         .no loop
         B     &FAIL                  .lock obtain failed
&ZLK.C   DS    0H
.*
.LOCK    ANOP  ,
         AIF   ('&LOCK' NE 'EVTREBLK').LOCK00
         MVC   EVTREBL2,&LK2          .set lock owner
         AGO   .LOCK99
.*
.LOCK00  ANOP  ,
         AIF   ('&LOCK' NE 'EVTCMDLK').LOCK05
         MVC   EVTCMDL2,&LK2          .set lock owner
         AGO   .LOCK99
.*
.LOCK05  ANOP  ,
         AIF   ('&LOCK' NE 'EVTWTOLK').LOCK10
         MVC   EVTWTOL2,&LK2          .set lock owner
         AGO   .LOCK99
.*
.LOCK10  ANOP  ,
         AIF   ('&LOCK' NE 'EVTEOTLK').LOCK15
         MVC   EVTEOTL2,&LK2          .set lock owner
         AGO   .LOCK99
.*
.LOCK15  ANOP  ,
         AIF   ('&LOCK' NE 'EVTEOMLK').LOCK20
         MVC   EVTEOML2,&LK2          .set lock owner
         AGO   .LOCK99
.*
.LOCK20  ANOP  ,
         AIF   ('&LOCK' NE 'EVTRFRLK').LOCK25
         MVC   EVTRFRL2,&LK2          .set lock owner
         AGO   .LOCK99
.*
.LOCK25  ANOP  ,
         AIF   ('&LOCK' NE 'EVTMGCLK').LOCK30
         MVC   EVTMGCL2,&LK2          .set lock owner
         AGO   .LOCK99
.*
.LOCK30  ANOP  ,
         AIF   ('&LOCK' NE 'CPTLOCK').LOCK35
         MVC   CPTLOCK2,&LK2          .set lock owner
         AGO   .LOCK99
.*
.LOCK35  ANOP  ,
         AIF   ('&LOCK' NE 'TKNLOCK').LOCK40
         MVC   TKNLOCK2,&LK2          .set lock owner
         AGO   .LOCK99
.*
.LOCK40  ANOP  ,
         AIF   ('&LOCK' NE 'EVTSTGLK').LOCK45
         MVC   EVTSTGL2,&LK2          .set lock owner
         AGO   .LOCK99
.*
.LOCK45  ANOP  ,
         AIF   ('&LOCK' NE 'EVTADDLK').LOCK50
         MVC   EVTADDL2,&LK2          .set lock owner
         AGO   .LOCK99
.*
.LOCK50  ANOP  ,
         AIF   ('&LOCK' NE 'EVTCOMLK').LOCK60
         MVC   EVTCOML2,&LK2          .set lock owner
         AGO   .LOCK99
.*
.LOCK60  ANOP  ,                                                   @02A
         AIF   ('&LOCK' NE 'EVTSVCLK').LOCK70                      @02A
         MVC   EVTSVCL2,&LK2          .set lock owner              @02A
         AGO   .LOCK99                                             @02A
.*
.LOCK70  ANOP  ,
         AIF   ('&LOCK' NE 'EVTSTCLK').GETLCL
         MVC   EVTSTCL2,&LK2          .set lock owner
         AGO   .LOCK99
.*
.LOCK99  ANOP  ,
         AIF   ('&SSI' EQ 'YES').LOCKXIT
         L     &WRKREG,STKEKEY        .get my protect key
         SPKA  0(&WRKREG)             .restore my protect key
.LOCKXIT ANOP  ,
         MEXIT ,
.*
.**      Obtain LOCAL lock
.*
.GETLCL  ANOP  ,
         AIF   ('&LOCK' NE 'GETLOCAL').GETCMS
         LA    R1,0                   .obtain LOCAL lock
         L     R15,EVTLCKA            .lock manager EPA
         BALR  R14,R15                .ECFLCK
         MEXIT ,
.*
.**      Obtain LOCAL & CMS locks
.*
.GETCMS  ANOP  ,
         AIF   ('&LOCK' NE 'GETCMS').ERR02
         LA    R1,8                   .obtain LOCAL & CMS locks
         L     R15,EVTLCKA            .lock manager EPA
         BALR  R14,R15                .ECFLCK
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $LOCK - lockword specification error'
         MEXIT ,
.ERR02   MNOTE 8,'*** $LOCK - lock owner operand specifiaction error'
         MEXIT ,
         MEND
./ ADD NAME=$LOCSUB  0105-21069-21304-1650-00083-00073-00073-BENMAR  47
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $LOCSUB                                                   */
.*/*                                                                 */
.*/* Description: ECF subsystem instance locate macro                */
.*/*                                                                 */
.*/* $LOCSUB SUB={label|reg} call:                                   */
.*/*       R15 EQ 0 - subsysytem not found                           */
.*/*       R15 NE 0 - subsysytem found; R15 = SSCT address           */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 07172021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&XID     $LOCSUB &EVT=R11,&INACT=,&SUB=,&STOKEN=
.*
         LCLC  &ZID
&ZID     SETC  'ZID'.'&SYSNDX'
.*
.*
         AIF   ('&SUB' NE '').SUBSYS
         AIF   ('&STOKEN' NE '').ZSTOKN                            @02A
         AIF   ('&INACT' EQ '').ERR01
.*
         L     R1,EVTASCB                  .subsystem ASCB
         ICM   R15,15,ASCBJBNS-ASCB(R1)    .STC address space?
         BNZ   &ZID                        .yes, carry on
         L     R15,ASCBJBNI-ASCB(,R1)      .no, job sddress space
&ZID     CLC   EVTSTCNM-EVT(8,&EVT),0(R15) .subsystem instance active?
         BNE   &INACT                      .no
         MEXIT ,
.*
.**      $LOCSUB SUB= Expansion
.*
.SUBSYS  ANOP  ,
         AIF   ('&INACT' NE '').ERR03
         L     R15,X'010'(,0)         .CVT address
         L     R15,X'128'(,R15)       .JES control table
         L     R15,X'018'(,R15)       .top SSCT address
         AIF   ('&SUB'(1,1) NE '(').LOC000
&ZID.C   CLC   8(4,R15),0(&SUB)       .subsystem found?
         BE    &ZID.D                 .yes, exit loop
         ICM   R15,15,X'004'(R15)     .get next SSCT
         BNZ   &ZID.C                 .loop
&ZID.D   DS    0H
         MEXIT ,
.*
.LOC000  ANOP  ,
&ZID.E   CLC   8(4,R15),&SUB          .subsystem found?
         BE    &ZID.F                 .yes, exit loop
         ICM   R15,15,X'004'(R15)     .get next SSCT
         BNZ   &ZID.E                 .loop
&ZID.F   DS    0H
         MEXIT ,
.*
.**      $LOCSUB STOKEN=Expansion                                  @02A
.*                                                                 @02A
.ZSTOKN  ANOP  ,                                                   @02A
         AIF   ('&INACT' EQ '').ERR01                              @02A
         LOCASCB STOKEN=&STOKEN       .locate subsystem            @02A
         LTR   R15,R15                .subsystem instance active?  @02A
         BNZ   &INACT                 .no                          @02A
         MEXIT ,                                                   @02A
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $LOCSUB - INACT operand not specified'
         MEXIT ,
.ERR02   MNOTE 8,'*** $LOCSUB - SUB operand not specified'
         MEXIT ,
.ERR03   MNOTE 8,'*** $LOCSUB - SUB= mutually exclusive with INACT='
         MEXIT ,
         MEND
./ ADD NAME=$MGCR    0102-21118-21304-1650-00043-00043-00002-BENMAR  51
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $MGCR                                                     */
.*/*                                                                 */
.*/* Description: Issue Command Service Macro                        */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $MGCR &CMD,&WRKREG=R15
.*
         AIF   ('&CMD' EQ '').ERR01
         AIF   ('&CMD'(1,1) EQ '(').CMD010
         SPKA  0(0)                    .supervisor key
         MGCR  &CMD                    .command buffer
         AGO   .CMD099
.*
.CMD010  ANOP  ,
         SPKA  0(0)                    .supervisor key
         MGCR  (&CMD)                  .issue command
.*
.CMD099  ANOP  ,
         L     &WRKREG,STKSTKEC        .current STKE entry
         L     &WRKREG,STKEKEY-STKE(,&WRKREG)  .get my key
         SPKA  0(&WRKREG)              .restore my key
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $MGCR - Invalid command operand specified'
         MEND
./ ADD NAME=$MODID   0103-21069-21304-1650-00034-00035-00001-BENMAR  55
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $MODID                                                    */
.*/*                                                                 */
.*/* Function: Defines module entry constants                        */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $MODID &ID=MID,&DSECT=YES
         COPY  $GLBLS
         AIF   ('&DSECT' EQ 'NO').MID00
&ID      DSECT ,
.MID00   ANOP  ,
&ID.NAME DC    CL8'&SYSECT'           .control section name
&ID.SUB  DC    CL4'&SUB'              .subsystem name prefix
&ID.REL  DC    CL8'&REL'              .release level
&ID.APAR DC    CL8'&APAR'             .APAR number
&ID.DATE DC    CL8'&SYSDATE'          .assembly date
&ID.TIME DC    CL8'&SYSTIME'          .assembly time
&ID.CPYR DC    CL40'&CPYRGHT'
         MEND  ,
./ ADD NAME=$MSGCALL 0102-21069-21304-1650-00099-00099-00002-BENMAR  59
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $MSGCALL                                                  */
.*/*                                                                 */
.*/* Function: Subsuystem message table entry                        */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $MSGCALL &TYPE=,                                              +
               &EP=,                                                   +
               &EXEC=,                                                 +
               &MSG=,                                                  +
               &LEN=,                                                  +
               &DSECT=NO
.*
         AIF   ('&DSECT' EQ 'YES').LIST
         AIF   ('&DSECT' NE 'NO').ERR00
         AIF   ('&TYPE' EQ 'INITIAL').INIT
         AIF   ('&TYPE' EQ 'FINAL').FINI
         AIF   ('&TYPE' EQ 'ENTRY').ENTRY
         AGO   .ERR01
.*
.**      TYPE=INITIAL
.*
.INIT    ANOP  ,
         DS    0F                    .initial table entry
         MEXIT ,
.*
.**      TYPE=ENTRY
.*
.ENTRY   ANOP  ,
         DS    0F
         AIF   ('&EP' EQ '').ERR01
         DC    A(&EP)                .EPA
         AIF   ('&EXEC' EQ 'LOCAL').MSG000
         AIF   ('&EXEC' NE 'SUBSYS').ERR02
         DC    XL1'80'               .EXEC in subsystem addrspc
         AGO   .MSG005
.*
.MSG000  ANOP  ,
         DC    XL1'40'               .EXEC in current addrspc
.*
.MSG005  ANOP  ,
         DC    XL1'00'               .-available
         AIF   ('&LEN' EQ '').ERR03
         DC    AL2(&LEN)             .message size
.*
         AIF   ('&MSG' EQ '').ERR04
         DC    CL12'&MSG'            .message ID
         MEXIT ,
.*
.**      TYPE=FINAL
.*
.FINI    ANOP  ,
         DS    0F                    .
         DC    XL4'FFFFFFFF'         .final table entry
         MEXIT ,
.*
.**      DSECT=YES
.*
.LIST    ANOP  ,
MSG      DSECT ,
MSGEPA   DS    A                     .EPA
MSGFLG1  DS    XL1                   .flags
MSG@SUB  EQU   X'80'                 .run in subsys addrspc
MSG@CUR  EQU   X'40'                 .run in current addrspc
MSGRSVR1 DS    XL1                   .-available
MSGSIZE  DS    AL2                   .message text length
MSGTEXT  DS    CL12                  .message ID
MSG@SZE  EQU   *-MSG                 .entry size
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR00   MNOTE 8,'*** $MSGCALL invalid DSECT operand specified'
         MEXIT ,
.ERR01   MNOTE 8,'*** $MSGCALL invalid EP operand specified'
         MEXIT ,
.ERR02   MNOTE 8,'*** $MSGCALL invalid EXEC operand specified'
         MEXIT ,
.ERR03   MNOTE 8,'*** $MSGCALL invalid SIZE operand specified'
         MEXIT ,
.ERR04   MNOTE 8,'*** $MSGCALL invalid MSG operand specified'
         MEXIT ,
         MEND
./ ADD NAME=$MVC     0101-21105-21304-1651-00029-00029-00001-BENMAR  04
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $MVC                                                      */
.*/*                                                                 */
.*/* Description: Move character macro                               */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V1R1 | 04142021 | Ben Marino  | Serviceability enhancements  *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $MVC  &TARGET,&SOURCE,&WRKREG=R15                         @02C
         SPKA  0(0)                    .supervisor key
         MVC   &TARGET,&SOURCE         .update target
         L     &WRKREG,STKSTKEC        .current STKE entry         @02A
         L     &WRKREG,STKEKEY-STKE(,&WRKREG)  .get my key         @02C
         SPKA  0(&WRKREG)              .restore my key
         MEND
./ ADD NAME=$MVCL    0101-21105-21304-1651-00029-00029-00001-BENMAR  08
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $MVCL                                                     */
.*/*                                                                 */
.*/* Description: Move Long character macro                          */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V1R1 | 04142021 | Ben Marino  | Serviceability enhancements  *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $MVCL &TARGET,&SOURCE,&WRKREG=R15                         @02C
         SPKA  0(0)                    .supervisor key
         MVCL  &TARGET,&SOURCE         .update target
         L     &WRKREG,STKSTKEC        .current STKE entry         @02A
         L     &WRKREG,STKEKEY-STKE(,&WRKREG)  .get my key         @02C
         SPKA  0(&WRKREG)              .restore my key
         MEND
./ ADD NAME=$MVI     0101-21105-21304-1651-00029-00029-00001-BENMAR  14
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $MVI                                                      */
.*/*                                                                 */
.*/* Description: Move immediate macro                               */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V1R1 | 04142021 | Ben Marino  | Serviceability enhancements  *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $MVI  &TARGET,&SOURCE,&WRKREG=R15                         @02C
         SPKA  0(0)                    .supervisor key
         MVI   &TARGET,&SOURCE         .update target
         L     &WRKREG,STKSTKEC        .current STKE entry         @02A
         L     &WRKREG,STKEKEY-STKE(,&WRKREG)  .get my key         @02C
         SPKA  0(&WRKREG)              .restore my key
         MEND
./ ADD NAME=$NI      0101-21105-21304-1651-00029-00029-00001-BENMAR  19
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $NI                                                       */
.*/*                                                                 */
.*/* Description: And immediate macr                                 */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V1R1 | 04142021 | Ben Marino  | Serviceability enhancements  *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $NI   &TARGET,&SOURCE,&WRKREG=R15                         @02C
         SPKA  0(0)                    .supervisor key
         NI    &TARGET,&SOURCE         .update target
         L     &WRKREG,STKSTKEC        .current STKE entry         @02A
         L     &WRKREG,STKEKEY-STKE(,&WRKREG)  .get my key         @02C
         SPKA  0(&WRKREG)              .restore my key
         MEND
./ ADD NAME=$OI      0101-21105-21304-1651-00029-00029-00001-BENMAR  22
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $OI                                                       */
.*/*                                                                 */
.*/* Description: Or immediate macro                                 */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V1R1 | 04142021 | Ben Marino  | Serviceability enhancements  *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $OI   &TARGET,&SOURCE,&WRKREG=R15                         @02C
         SPKA  0(0)                    .supervisor key
         OI    &TARGET,&SOURCE         .update target
         L     &WRKREG,STKSTKEC        .current STKE entry         @02A
         L     &WRKREG,STKEKEY-STKE(,&WRKREG)  .get my key         @02C
         SPKA  0(&WRKREG)              .restore my key
         MEND
./ ADD NAME=$PCENTRY 0107-21156-21304-1651-00140-00093-00120-BENMAR  43
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $PCENTRY                                                  */
.*/*                                                                 */
.*/* Function: ECF Service Routine Table Entry                       */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V2R1 | 05172021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $PCENTRY &TYPE=,                                              +
               &EP=,                                                   +
               &KEY=,                                                  +
               &MODE=,                                                 +
               &PCID=,                                                 +
               &LINKAGE=,                                              +
               &DSECT=NO
.*
         AIF   ('&DSECT' EQ 'YES').LIST
         AIF   ('&DSECT' NE 'NO').ERR00
         AIF   ('&TYPE' EQ 'INITIAL').INIT
         AIF   ('&TYPE' EQ 'FINAL').FINI
         AIF   ('&TYPE' EQ 'ENTRY').ENTRY
         AGO   .ERR01
.*
.**      TYPE=INITIAL
.*
.INIT    ANOP  ,
         DS    0F                    .initial table entry
         MEXIT ,
.*
.**      TYPE=ENTRY
.*
.ENTRY   ANOP  ,
         DS    0F
         AIF   ('&EP' EQ '').ERR01
         DC    A(&EP)                .PC routine EPA
         AIF   ('&PCID' EQ '').ERR02
         DC    A(&PCID)              .PC routing routing code
         DC    A(0)                  .-reserved
.*
.KEY     ANOP  ,
         AIF   ('&KEY' EQ '0').KEY0
         AIF   ('&KEY' EQ '8').KEY8
         AIF   ('&KEY' EQ 'CALLER').CALLER
         AGO   .ERR03
.*
.KEY0    ANOP  ,
         DC    XL1'00'               .PC protect key zero
         AGO   .MODE
.*
.KEY8    ANOP  ,
         DC    XL1'80'               .PC protct key=8
         AGO   .MODE
.*
.CALLER  ANOP  ,
         DC    XL1'FF'               .PC caller key
.*
.MODE    ANOP  ,
         AIF   ('&MODE' EQ 'SUP').SUP
         AIF   ('&MODE' EQ 'PROB').PROB
         AGO   .ERR04
.*
.SUP     ANOP  ,
         DC    XL1'80'               .PC supervisor mode
         AGO   .LINKAGE
.*
.PROB    ANOP  ,
         DC    XL1'40'               .PC problem state
.*
.LINKAGE ANOP  ,
         AIF   ('&LINKAGE' EQ 'BRANCH').BRANCH
         AIF   ('&LINKAGE' EQ 'SYNCH').SYNCH
         AGO   .ERR05
.*
.BRANCH  ANOP  ,
         DC    XL1'80'               .PC branch linkage
         AGO   .RSVR
.*
.SYNCH   ANOP  ,
         DC    XL1'40'               .PC synch SVC linkage
.*
.RSVR    ANOP  ,
         DC    XL1'00'               .-reserved
         MEXIT ,
.*
.**      TYPE=FINAL
.*
.FINI    ANOP  ,
         DS    0F                    .
         DC    XL4'FFFFFFFF'         .final table entry
         MEXIT ,
.*
.**      DSECT=YES
.*
.LIST    ANOP  ,
XPC      DSECT ,
XPCEPA   DS    A                     .PC routine EPA
XPCPCID  DS    A                     .PC routing routing code
XPCRVR0  DS    A                     .-reserved
XPCKEY   DS    XL1                   .KEY
XPC@KEY0 EQU   X'00'                 .key=0
XPC@KEY8 EQU   X'80'                 .key=8
XPC@CALL EQU   X'FF'                 .caller key
XPCMODE  DS    XL1                   .MODE
XPC@SUPR EQU   X'80'                 .supervisor state
XPC@PROB EQU   X'40'                 .problem satate
XPCLINK  DS    XL1                   .LINKAGE
XPC@BRAN EQU   X'80'                 .BRANH linkage
XPC@YNCH EQU   X'40'                 .SYNCH linkage
XPCRSVR1 DS    XL1                   .-reserved
XPC@SIZE EQU   *-XPC                 .entry size
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR00   MNOTE 8,'*** $PCENTRY invalid DSECT operand specified'
         MEXIT ,
.ERR01   MNOTE 8,'*** $PCENTRY invalid EP operand specified'
         MEXIT ,
.ERR02   MNOTE 8,'*** $PCENTRY invalid PCID operand specified'
         MEXIT ,
.ERR03   MNOTE 8,'*** $PCENTRY invalid KEY operand specified'
         MEXIT ,
.ERR04   MNOTE 8,'*** $PCENTRY invalid MODE operand specified'
         MEXIT ,
.ERR05   MNOTE 8,'*** $PCENTRY invalid LINKAGE operand specified'
         MEXIT ,
         MEND
./ ADD NAME=$POST    0104-21117-21304-1651-00058-00043-00043-BENMAR  47
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $POST                                                     */
.*/*                                                                 */
.*/* Description: Local POST Service Macro                           */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 04212020 | Ben Marino  | Initial version              *
.* @02 | V2R3 | 08072021 | Ben Marino  | Added STKE={NO|YES} operand  *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $POST &ECB,&STKE=YES,&WRKREG=R15                          @02C
.*
         AIF   ('&ECB' EQ '').ERR01
         AIF   ('&ECB'(1,1) EQ '(').ECB010
         LA    R1,&ECB                 .target ECB
         AGO   .ECB020                                             @02C
.*
.ECB010  ANOP  ,
         LR    R1,&ECB                 .target ECB
.*
.ECB020  ANOP  ,                                                   @02C
         AIF   ('&STKE' EQ 'YES').ECB030                           @02A
         AIF   ('&STKE' NE 'NO').ERR02                             @02A
         LR    &WRKREG,R2              .protect R2                 @02A
         IPK   ,                                                   @02A
.*
.ECB030  ANOP  ,                                                   @02C
         SPKA  0(0)                    .supervisor key
         POST  (1)                     .post target ECB
         AIF   ('&STKE' NE 'YES').ECB040                           @02A
         L     &WRKREG,STKSTKEC        .current STKE entry
         L     &WRKREG,STKEKEY-STKE(,&WRKREG)  .get my key
         SPKA  0(&WRKREG)              .restore my key
         MEXIT ,
.*
.ECB040  ANOP  ,
         SPKA  0(R2)                   .post target ECB            @02A
         LR    R2,&WRKREG              .restore R2                 @02A
         MEXIT ,                                                   @02A
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $POST - Invalid ECB operand specified'
         MEXIT ,                                                   @02A
.ERR02   MNOTE 8,'*** $POST - Invalid STKE operand specified'      @02A
         MEND
./ ADD NAME=$PUT     0104-21330-21330-1049-00039-00033-00018-BENMAR  53
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $PUT                                                      */
.*/*                                                                 */
.*/* Description: ECF QSAM PUT macro                                 */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V2R3 | 11262021 | Ben Marino  | Initial version              *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
         $PUT  &DCB,&RECORD,&WRKREG=R15
.*
         LCLC  &ZRB
&ZPT     SETC  'ZPT'.'&SYSNDX'
.*
         AIF   ('&DCB'(1,1) EQ '(').PUT00
         ICM   &WRKREG,7,49(&DCB)      .routine init?
         BZ    &ZPT.A                  .no
         PUT   &DCB,&RECORD            .log record
&ZPT.A   DS    0H
         MEXIT ,
.*
.PUT00   ANOP  ,
         ICM   &WRKREG,7,49(&DCB)      .routine init?
         BZ    &ZPT.B                  .no
         PUT   &DCB,&RECORD            .log record
&ZPT.B   DS    0H
         MEND
./ ADD NAME=$RETRY   0117-21069-21305-1419-00081-00083-00028-BENMAR  12
.*/*******************************************************************/
.*/*                                                                 */
.*/* Nane: $RETRY                                                    */
.*/*                                                                 */
.*/* Description: Recovery Environment Macro                         */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V1R1 | 10152020 | Ben Marino  | Change &MODE to &SDUMP       *
.* @03 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.* @04 | V2R3 | 11012021 | Ben Marino  | Added SVC screening support  *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
         $RETRY &LABEL,                                                +
               &SDUMP=,                                            @02C+
               &WTO=YES,                                           @04A+
               &EPA=R10,                                               +
               &STK=R9,                                                +
               &EVT=R11,                                               +
               &REG=R1,                                                +
               &RSN=
.*
         LCLC  &NORTY
&NORTY   SETC  'RTY'.'&SYSNDX'
.*
         AIF   ('&LABEL' EQ '').ERR01
         AIF   ('&LABEL' EQ 'OFF').RTYOFF
.*
.RTY000  ANOP  ,
         L     &REG,STKSTKEC
         LA    &REG,STKESRWA-STKE(,&REG)
         MVC   SRWAID-SRWA(4,&REG),=CL4'SRWA'
         XC    SRWAFLG1-SRWA(,&REG),SRWAFLG1-SRWA(&REG)
         AIF   ('&SDUMP' EQ 'YES').RTY005                          @04C
         AIF   ('&SDUMP' NE 'NO').ERR02                            @02C
         OI    SRWAFLG1-SRWA(&REG),SRWA@NDP
.*
.RTY005  ANOP  ,                                                   @04A
         AIF   ('&WTO' EQ 'YES').RTY010                            @04A
         AIF   ('&WTO' NE 'NO').ERR03                              @04A
         OI    SRWAFLG1-SRWA(&REG),SRWA@NWT
.*
.RTY010  ANOP  ,
         STM   R0,R15,SRWAGPRS-SRWA(&REG)
         MVC   SRWARTRY-SRWA(4,&REG),=A(&LABEL)
         MVC   SRWASECT-SRWA(8,&REG),4(&EPA)
.*
         AIF   ('&RSN' EQ '').RTY020
         MVC   SRWARSN-SRWA(4,&REG),&RSN
         MEXIT ,
.*
.RTY020  ANOP  ,
         XC    SRWARSN-SRWA(4,&REG),SRWARSN-SRWA(&REG)
         MEXIT ,
*
.RTYOFF  ANOP  ,
         L     &REG,STKSTKEC
         LA    &REG,STKESRWA-STKE(,&REG)
         XC    SRWAFLG1-SRWA(,&REG),SRWAFLG1-SRWA(&REG)
         XC    SRWARTRY-SRWA(4,&REG),SRWARTRY-SRWA(&REG)
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $RETRY - Retry address not specified'
         MEXIT ,
.ERR02   MNOTE 8,'*** $RETRY - SDUMP operand specification error'  @02C
         MEXIT ,
.ERR03   MNOTE 8,'*** $RETRY - WTO operand specification error'    @04A
         MEND
./ ADD NAME=$RUNIRB  0119-21224-21304-1652-00135-00135-00066-BENMAR  05
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $RUNIRB                                                   */
.*/*                                                                 */
.*/* Description: Asynchronous exit schedule macro                   */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V2R3 | 08172021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $RUNIRB &MF=,          Macro format                           +
               &PC=,            ECFXPC PC router                       +
               &EP=,            Exit address                           +
               &PARM=,          Exit parameter                         +
               &STOKEN=,        Target address space STOKEN            +
               &TCBTOKEN=,      Target task TCBTOKEN                   +
               &KEY=,           Target protet key                      +
               &MODE=           Supervisor/problem
.*
         LCLC  &ZRB
&ZRB     SETC  'ZRB'.'&SYSNDX'
.*
         AIF   ('&MF' EQ 'L').LIST
         AIF   ('&MF(2)'(1,1) EQ '(').XRB000
         LA    R1,&MF(2)
         AGO   .XRB005
.XRB000  ANOP  ,
         LR    R1,&MF(2)
.*
.XRB005  ANOP  ,
         XC    0(XRB@SZE,R1),0(R1)
         MVC   XRBID-XRB(4,R1),=CL4'XRB'
         AIF   ('&EP' EQ '').ERR01
         AIF   ('&EP'(1,1) EQ '(').XRB010
         MVC   XRBEP-XRB(4,R1),&EP      .IRB exit EPA
         AGO   .XRB015
.*
.XRB010  ANOP  ,
         ST    &EP,XRBEP-XRB(R1)        .IRB exit EPA
.*
.XRB015  ANOP  ,
         AIF   ('&STOKEN' EQ '').ERR02
         AIF   ('&STOKEN'(1,1) EQ '(').XRB020
         MVC   XRBSTOKN-XRB(8,R1),&STOKEN
         AGO   .XRB030
.*
.XRB020  ANOP  ,
         MVC   XRBSTOKN-XRB(8,R1),0(&STOKEN)
.*
.XRB030  ANOP  ,
         AIF   ('&TCBTOKEN' EQ '').ERR03
         AIF   ('&TCBTOKEN'(1,1) EQ '(').XRB035
         MVC   XRBTTOKN-XRB(16,R1),&TCBTOKEN
         AGO   .XRB040
.*
.XRB035  ANOP  ,
         MVC   XRBTTOKN-XRB(16,R1),0(&TCBTOKEN)
.*
.XRB040  ANOP  ,
         AIF   ('&PARM' EQ '').ERR05
         AIF   ('&PARM'(1,1) EQ '(').XRB050
         MVC   XRBPARM-XRB(4,R1),&PARM  .IRB exit parameter
         AGO   .XRB055
.*
.XRB050  ANOP  ,
         ST    &PARM,XRBPARM-XRB(R1)    .IRB exit parameter
.*
.XRB055  ANOP  ,
         AIF   ('&KEY' EQ '').ERR04
         AIF   ('&KEY' EQ '8').XRB060
         AIF   ('&KEY' NE '0').ERR04
         OI    XRBKEY-XRB(R1),XRB@KEY0  .key=0
         AGO   .XRB065
.XRB060  ANOP  ,
         OI    XRBKEY-XRB(R1),XRB@KEY8  .key=8
.*
.XRB065  ANOP  ,
         AIF   ('&MODE' EQ '').ERR06
         AIF   ('&MODE' EQ 'PROB').XRB070
         AIF   ('&MODE' NE 'SUP').ERR06
         OI    XRBSTATE-XRB(R1),XRB@SUP .MODE=SUP
         AGO   .XRB075
.*
.XRB070  ANOP  ,
         OI    XRBSTATE-XRB(R1),XRB@PROB .MODE=PROB
.*
.XRB075  ANOP  ,
         AIF   ('&PC' EQ '').ERR07
         AIF   ('&PC'(1,1) EQ '(').XRB080
         L     R14,&PC                  .PC router
         AGO   .XRB099
.*
.XRB080  ANOP  ,
         LR    R14,&PC                  .PC router
.*
.XRB099  ANOP  ,
         LA    R15,$RUNIRB              .PCID
         PC    0(14)                    .call PC routine
         MEXIT ,
.*
.**      $ECFXRB MF=L
.*
.LIST    ANOP  ,
&ZID     DS    0F
         $ECFXRB DSECT=NO
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $RUNIRB invalid EP operand specified'
         MEXIT ,
.ERR02   MNOTE 8,'*** $RUNIRB invalid STOKEN operand specified'
         MEXIT ,
.ERR03   MNOTE 8,'*** $RUNIRB invalid TCBTOKEN operand specified'
         MEXIT ,
.ERR04   MNOTE 8,'*** $RUNIRB invalid KEY operand specified'
         MEXIT ,
.ERR05   MNOTE 8,'*** $RUNIRB invalid PARM operand specified'
         MEXIT ,
.ERR06   MNOTE 8,'*** $RUNIRB invalid MODE operand specified'
         MEXIT ,
.ERR07   MNOTE 8,'*** $RUNIRB invalid PC operand specified'
         MEXIT ,
         MEND
./ ADD NAME=$SAF     0107-21175-21304-1652-00062-00035-00035-BENMAR  09
.*/*******************************************************************/
.*/*                                                                 */
.*/* Nname $SAF                                                      */
.*/*                                                                 */
.*/* Description: RACROUTE service request macro                     */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V2R1 | 06212021 | Ben Marino  | Security Server support      *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $SAF &UACC,&EP=EVTPCNUM,&ENTITY=
         AIF   ('&ENTITY' EQ '').ERR01
         AIF   ('&UACC' EQ '').ERR02
.*
.UACC    ANOP  ,
         AIF   ('&UACC' NE 'READ').UACC10
         LA    R0,2                    .UACC=READ
         AGO   .ENTITY
.*
.UACC10  ANOP  ,
         AIF   ('&UACC' NE 'UPDATE').UACC20
         LA    R0,4                    .UACC=UPDATE
         AGO   .ENTITY
.*
.UACC20  ANOP  ,
         AIF   ('&UACC' NE 'CONTROL').UACC30
         LA    R0,8                    .UACC=CONTROL
         AGO   .ENTITY
.*
.UACC30  ANOP  ,
         AIF   ('&UACC' NE 'ALTER').ERR03
         LA    R0,128                  .UACC=ALTER
.*
.ENTITY  ANOP  ,
         LA    R1,&ENTITY              .ENTITY address
.*
.XPCCALL ANOP  ,
         LA    R15,$SAF                .PCID
         L     R14,&EP                 .ECFXPC router
         PC    0(14)                   .check authorization
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $SAF - Invalid authorization ENTITY specified'
         MEXIT ,
.ERR02   MNOTE 8,'*** $SAF - Null authorization UACC specified'
         MEXIT ,
.ERR03   MNOTE 8,'*** $SAF - Invalid authorization UACC code specified'
         MEXIT ,
         MEND
./ ADD NAME=$SETDIE  0103-21069-21304-1652-00044-00044-00003-BENMAR  18
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $SETDIE                                                   */
.*/*                                                                 */
.*/* Description: DIE Disabled Interrupt Exit Macro                  */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
         $SETDIE &FCID
.*
         AIF   ('&FCID' EQ '').ERR01
         AIF   ('&FCID' EQ 'ENABLE').FCID00
         AIF   ('&FCID' NE 'DISABLE').ERR02
         LA    R1,4                    .timer DIE disable
         AGO   .FCID99
.*
.FCID00  ANOP  ,
         SLR   R1,R1                   .timer DIE enable
.*
.FCID99  ANOP  ,
         L     R15,EVTIDIA             .service EPA
         BALR  R14,R15                 .call service routine
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $SETDIE - Null FCID operand specified'
         MEXIT ,
.ERR02   MNOTE 8,'*** $SETDIE - Invalid FCID operand specified'
         MEND
./ ADD NAME=$SRENTRY 0104-21069-21304-1652-00124-00124-00004-BENMAR  28
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $SRENTRY                                                  */
.*/*                                                                 */
.*/* Function: Service Routine Table Entry                           */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $SRENTRY &TYPE=,                                              +
               &EP=,                                                   +
               &SR=,                                                   +
               &EXEC=,                                                 +
               &PARM=0,                                                +
               &CALLSEQ=,                                              +
               &LINKAGE=CALL,                                          +
               &DSECT=NO
.*
         AIF   ('&DSECT' EQ 'YES').LIST
         AIF   ('&DSECT' NE 'NO').ERR00
         AIF   ('&TYPE' EQ 'INITIAL').INIT
         AIF   ('&TYPE' EQ 'FINAL').FINI
         AIF   ('&TYPE' EQ 'ENTRY').ENTRY
         AGO   .ERR01
.*
.**      TYPE=INITIAL
.*
.INIT    ANOP  ,
         DS    0F                    .initial table entry
         MEXIT ,
.*
.**      TYPE=ENTRY
.*
.ENTRY   ANOP  ,
         DS    0F
         AIF   ('&EP' NE '').EPA
         AIF   ('&SR' EQ '').ERR06
         DC    V(&SR)                .routine entry address
         AGO   .EPA2
.EPA     ANOP  ,
         AIF   ('&SR' NE '').ERR05
         DC    A(&EP)                .subroutine address
.EPA2    ANOP  ,
         DC    A(&PARM)              .subroutine input parm
         AIF   ('&LINKAGE' EQ 'LINK').LINK
         AIF   ('&LINKAGE' EQ 'CALL').CALL
         AGO   .ERR03
.CALL    ANOP  ,
         DC    XL1'80'               .LINKAGE=CALL
         AGO   .EXEC
.LINK    ANOP  ,
         DC    XL1'40'               .LINKAGE=LINK
.EXEC    ANOP  ,
         AIF   ('&EXEC' EQ 'INIT').INITZ
         AIF   ('&EXEC' EQ 'TERM').TERMZ
         AGO   .ERR04
.INITZ   ANOP  ,
         DC    XL1'80'               .EXEC=INIT
         AGO   .SEQ
.TERMZ   ANOP  ,
         DC    XL1'40'               .EXEC=TERM
.SEQ     ANOP  ,
         DC    AL2(&CALLSEQ)         .CALLSEQ=sequence number
         AIF   ('&EP' EQ '').SREPA
         DC    CL8'&EP'              .subroutine name
         MEXIT ,
.SREPA   ANOP  ,
         DC    CL8'&SR'              .service routine name
         MEXIT ,
.*
.**      TYPE=FINAL
.*
.FINI    ANOP  ,
         DS    0F                    .
         DC    XL4'FFFFFFFF'         .final table entry
         MEXIT ,
.*
.**      DSECT=YES
.*
.LIST    ANOP  ,
SRI      DSECT ,
SRIEPA   DS    A                     .routine entry address
SRIPARM  DS    A                     .routine input parm
SRIFLG1  DS    XL1                   .LINKAGE={CALL|LINK)
SRI@CALL EQU   X'80'                 .call service routine
SRI@LINK EQU   X'40'                 .link to service routine
SRIEXEC  DS    XL1                   .EXEC={INIT|TERM}
SRI@INIT EQU   X'80'                 .init service routine
SRI@TERM EQU   X'40'                 .term service routine
SRISEQ   DS    AL2                   .CALLSEQ=number
SRIMOD   DS    CL8                   .routine name
SRI@SIZE EQU   *-SRI                 .entry size
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR00   MNOTE 8,'*** $SRENTRY invalid DSECT operand specified'
         MEXIT ,
.ERR01   MNOTE 8,'*** $SRENTRY invalid TYPE operand specified'
         MEXIT ,
.ERR02   MNOTE 8,'*** $SRENTRY invalid EP operand specified'
         MEXIT ,
.ERR03   MNOTE 8,'*** $SRENTRY invalid LINKAGE operand specified'
         MEXIT ,
.ERR04   MNOTE 8,'*** $SRENTRY invalid EXEC operand specified'
         MEXIT ,
.ERR05   MNOTE 8,'*** $SRENTRY EP is mutually exclusive w/SR operand'
         MEXIT ,
.ERR06   MNOTE 8,'*** $SRENTRY invalid SR operand specified'
         MEXIT ,
         MEND
./ ADD NAME=$SREQID  0103-21069-21304-1652-00043-00043-00003-BENMAR  35
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $SREQID                                                   */
.*/*                                                                 */
.*/* Function: Define ECFREQ SSI Module Constants                    */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $SREQID &ID=SSI,&DSECT=YES
         COPY  $GLBLS
         AIF   ('&DSECT' EQ 'NO').SSI00
&ID      DSECT ,
&ID.BR   DC    A(0)                   .branch
.SSI00   ANOP  ,
&ID.SREQ DC    A(0)                   .IEFSSREQ EPA
         AIF   ('&DSECT' EQ 'NO').SSI05
&ID.REQL DC    AL4(0)                 .ECFREQ routine size
         AGO   .SSI10
.SSI05   ANOP  ,
&ID.REQL DC    AL4(ECFREQLN)          .ECFREQ routine size
.SSI10   ANOP  ,
&ID.NAME DC    CL8'&SYSECT'           .control section name
&ID.SUB  DC    CL4'&SUB'              .subsystem name prefix
&ID.REL  DC    CL8'&REL'              .release level
&ID.APAR DC    CL8'&APAR'             .APAR number
&ID.DATE DC    CL8'&SYSDATE'          .assembly date
&ID.TIME DC    CL8'&SYSTIME'          .assembly time
&ID.CPYR DC    CL40'&CPYRGHT'
         MEND  ,
./ ADD NAME=$SRINIT  0104-21069-21304-1652-00127-00127-00004-BENMAR  41
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $SRINIT                                                   */
.*/*                                                                 */
.*/* Function: Service Routine Table Entry                           */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $SRINIT &TYPE=,                                               +
               &EP=,                                                   +
               &SR=,                                                   +
               &EXEC=,                                                 +
               &PARM=0,                                                +
               &PARM0=0,                                               +
               &CALLSEQ=,                                              +
               &LINKAGE=CALL,                                          +
               &DSECT=NO
.*
         AIF   ('&DSECT' EQ 'YES').LIST
         AIF   ('&DSECT' NE 'NO').ERR00
         AIF   ('&TYPE' EQ 'INITIAL').INIT
         AIF   ('&TYPE' EQ 'FINAL').FINI
         AIF   ('&TYPE' EQ 'ENTRY').ENTRY
         AGO   .ERR01
.*
.**      TYPE=INITIAL
.*
.INIT    ANOP  ,
         DS    0F                    .initial table entry
         MEXIT ,
.*
.**      TYPE=ENTRY
.*
.ENTRY   ANOP  ,
         DS    0F
         AIF   ('&EP' NE '').EPA
         AIF   ('&SR' EQ '').ERR06
         DC    V(&SR)                .routine entry address
         AGO   .EPA2
.EPA     ANOP  ,
         AIF   ('&SR' NE '').ERR05
         DC    A(&EP)                .subroutine address
.EPA2    ANOP  ,
         DC    A(&PARM)              .subroutine input parm
         DC    A(&PARM0)             .subroutine input parm
         AIF   ('&LINKAGE' EQ 'LINK').LINK
         AIF   ('&LINKAGE' EQ 'CALL').CALL
         AGO   .ERR03
.CALL    ANOP  ,
         DC    XL1'80'               .LINKAGE=CALL
         AGO   .EXEC
.LINK    ANOP  ,
         DC    XL1'40'               .LINKAGE=LINK
.EXEC    ANOP  ,
         AIF   ('&EXEC' EQ 'INIT').INITZ
         AIF   ('&EXEC' EQ 'TERM').TERMZ
         AGO   .ERR04
.INITZ   ANOP  ,
         DC    XL1'80'               .EXEC=INIT
         AGO   .SEQ
.TERMZ   ANOP  ,
         DC    XL1'40'               .EXEC=TERM
.SEQ     ANOP  ,
         DC    AL2(&CALLSEQ)         .CALLSEQ=sequence number
         AIF   ('&EP' EQ '').SRIPA
         DC    CL8'&EP'              .subroutine name
         MEXIT ,
.SRIPA   ANOP  ,
         DC    CL8'&SR'              .service routine name
         MEXIT ,
.*
.**      TYPE=FINAL
.*
.FINI    ANOP  ,
         DS    0F                    .
         DC    XL4'FFFFFFFF'         .final table entry
         MEXIT ,
.*
.**      DSECT=YES
.*
.LIST    ANOP  ,
SRI      DSECT ,
SRIEPA   DS    A                     .routine entry address
SRIPARM  DS    A                     .routine input parm-R1
SRIPARM0 DS    A                     .routine input parm-R0
SRIFLG1  DS    XL1                   .LINKAGE={CALL|LINK)
SRI@CALL EQU   X'80'                 .call service routine
SRI@LINK EQU   X'40'                 .link to service routine
SRIEXEC  DS    XL1                   .EXEC={INIT|TERM}
SRI@INIT EQU   X'80'                 .init service routine
SRI@TERM EQU   X'40'                 .term service routine
SRISEQ   DS    AL2                   .CALLSEQ=number
SRIMOD   DS    CL8                   .routine name
SRI@SIZE EQU   *-SRI                 .entry size
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR00   MNOTE 8,'*** $SRINIT invalid DSECT operand specified'
         MEXIT ,
.ERR01   MNOTE 8,'*** $SRINIT invalid TYPE operand specified'
         MEXIT ,
.ERR02   MNOTE 8,'*** $SRINIT invalid EP operand specified'
         MEXIT ,
.ERR03   MNOTE 8,'*** $SRINIT invalid LINKAGE operand specified'
         MEXIT ,
.ERR04   MNOTE 8,'*** $SRINIT invalid EXEC operand specified'
         MEXIT ,
.ERR05   MNOTE 8,'*** $SRINIT EP is mutually exclusive w/SR operand'
         MEXIT ,
.ERR06   MNOTE 8,'*** $SRINIT invalid SR operand specified'
         MEXIT ,
         MEND
./ ADD NAME=$SRINTRY 0104-21069-21304-1652-00127-00127-00004-BENMAR  48
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $SRINTRY                                                  */
.*/*                                                                 */
.*/* Function: Service Routine Table Entry                           */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $SRINTRY &TYPE=,                                              +
               &EP=,                                                   +
               &SR=,                                                   +
               &EXEC=,                                                 +
               &PARM=0,                                                +
               &PARM0=0,                                               +
               &CALLSEQ=,                                              +
               &LINKAGE=CALL,                                          +
               &DSECT=NO
.*
         AIF   ('&DSECT' EQ 'YES').LIST
         AIF   ('&DSECT' NE 'NO').ERR00
         AIF   ('&TYPE' EQ 'INITIAL').INIT
         AIF   ('&TYPE' EQ 'FINAL').FINI
         AIF   ('&TYPE' EQ 'ENTRY').ENTRY
         AGO   .ERR01
.*
.**      TYPE=INITIAL
.*
.INIT    ANOP  ,
         DS    0F                    .initial table entry
         MEXIT ,
.*
.**      TYPE=ENTRY
.*
.ENTRY   ANOP  ,
         DS    0F
         AIF   ('&EP' NE '').EPA
         AIF   ('&SR' EQ '').ERR06
         DC    V(&SR)                .routine entry address
         AGO   .EPA2
.EPA     ANOP  ,
         AIF   ('&SR' NE '').ERR05
         DC    A(&EP)                .subroutine address
.EPA2    ANOP  ,
         DC    A(&PARM)              .subroutine input parm
         DC    A(&PARM0)             .subroutine input parm
         AIF   ('&LINKAGE' EQ 'LINK').LINK
         AIF   ('&LINKAGE' EQ 'CALL').CALL
         AGO   .ERR03
.CALL    ANOP  ,
         DC    XL1'80'               .LINKAGE=CALL
         AGO   .EXEC
.LINK    ANOP  ,
         DC    XL1'40'               .LINKAGE=LINK
.EXEC    ANOP  ,
         AIF   ('&EXEC' EQ 'INIT').INITZ
         AIF   ('&EXEC' EQ 'TERM').TERMZ
         AGO   .ERR04
.INITZ   ANOP  ,
         DC    XL1'80'               .EXEC=INIT
         AGO   .SEQ
.TERMZ   ANOP  ,
         DC    XL1'40'               .EXEC=TERM
.SEQ     ANOP  ,
         DC    AL2(&CALLSEQ)         .CALLSEQ=sequence number
         AIF   ('&EP' EQ '').SRIPA
         DC    CL8'&EP'              .subroutine name
         MEXIT ,
.SRIPA   ANOP  ,
         DC    CL8'&SR'              .service routine name
         MEXIT ,
.*
.**      TYPE=FINAL
.*
.FINI    ANOP  ,
         DS    0F                    .
         DC    XL4'FFFFFFFF'         .final table entry
         MEXIT ,
.*
.**      DSECT=YES
.*
.LIST    ANOP  ,
SRI      DSECT ,
SRIEPA   DS    A                     .routine entry address
SRIPARM  DS    A                     .routine input parm-R1
SRIPARM0 DS    A                     .routine input parm-R0
SRIFLG1  DS    XL1                   .LINKAGE={CALL|LINK)
SRI@CALL EQU   X'80'                 .call service routine
SRI@LINK EQU   X'40'                 .link to service routine
SRIEXEC  DS    XL1                   .EXEC={INIT|TERM}
SRI@INIT EQU   X'80'                 .init service routine
SRI@TERM EQU   X'40'                 .term service routine
SRISEQ   DS    AL2                   .CALLSEQ=number
SRIMOD   DS    CL8                   .routine name
SRI@SIZE EQU   *-SRI                 .entry size
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR00   MNOTE 8,'*** $SRINTRY invalid DSECT operand specified'
         MEXIT ,
.ERR01   MNOTE 8,'*** $SRINTRY invalid TYPE operand specified'
         MEXIT ,
.ERR02   MNOTE 8,'*** $SRINTRY invalid EP operand specified'
         MEXIT ,
.ERR03   MNOTE 8,'*** $SRINTRY invalid LINKAGE operand specified'
         MEXIT ,
.ERR04   MNOTE 8,'*** $SRINTRY invalid EXEC operand specified'
         MEXIT ,
.ERR05   MNOTE 8,'*** $SRINTRY EP is mutually exclusive w/SR operand'
         MEXIT ,
.ERR06   MNOTE 8,'*** $SRINTRY invalid SR operand specified'
         MEXIT ,
         MEND
./ ADD NAME=$SRVCALL 0105-21069-21304-1652-00103-00089-00088-BENMAR  54
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $SRVCALL                                                  */
.*/*                                                                 */
.*/* Function: ECFSRV Service Routine Table Entry                    */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.* @03 | V2R3 | 08072021 | Ben Marino  | Added MONITOR trigger support*
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $SRVCALL &TYPE=,                                              +
               &EP=,                                                   +
               &PARM=,                                                 +
               &CALLER=,                                               +
               &TRIGGER=POST,                                      @03A+
               &DSECT=NO
.*
         AIF   ('&DSECT' EQ 'YES').LIST
         AIF   ('&DSECT' NE 'NO').ERR00
         AIF   ('&TYPE' EQ 'INITIAL').INIT
         AIF   ('&TYPE' EQ 'FINAL').FINI
         AIF   ('&TYPE' EQ 'ENTRY').ENTRY
         AGO   .ERR01
.*
.**      TYPE=INITIAL
.*
.INIT    ANOP  ,
         DS    0F                    .initial table entry
         MEXIT ,
.*
.**      TYPE=ENTRY
.*
.ENTRY   ANOP  ,
         DS    0F
         AIF   ('&EP' EQ '').ERR01
         DC    A(&EP)                .service routine EPA
         AIF   ('&PARM' NE '').ENTY10
         DC    AL4(0)                .PARM not specified
         AGO   .ENTY20
.*
.ENTY10  ANOP  ,
         DC    AL4(&PARM)            .service parameter
.*
.ENTY20  ANOP  ,
         AIF   ('&TRIGGER' EQ 'POST').ENTY30                       @03A
         AIF   ('&TRIGGER' NE 'TIMER').ERR03                       @03A
         DC    AL1(SRVE@TMR)         .timer driven service         @03A
         AGO   .ENTY40                                             @03A
.*
.ENTY30  ANOP  ,                                                   @03A
         DC    AL1(SRVE@PST)         .post driven service          @03A
.*
.ENTY40  ANOP  ,                                                   @03A
         AIF   ('&CALLER' EQ '').ERR02
         DC    CL3'&CALLER'          .CALLER ID
         DC    CL8'&EP'              .service routine
         MEXIT ,
.*
.**      TYPE=FINAL
.*
.FINI    ANOP  ,
         DS    0F                    .
         DC    XL4'FFFFFFFF'         .final table entry
         MEXIT ,
.*
.**      DSECT=YES
.*
.LIST    ANOP  ,
SRVE     DSECT ,
SRVEEPA  DS    A                     .service routine EPA
SRVEPARM DS    A                     .caller parm data
SRVEFLG1 DS    XL1                   .flags
SRVE@PST EQU   X'80'                 .POST driven service          @03A
SRVE@TMR EQU   X'40'                 .TIMER driven service         @03A
SRVECALL DS    CL3                   .caller ID
SRVENAME DS    CL8                   .service routine name
SRVE@SZE EQU   *-SRVE                .entry size
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR00   MNOTE 8,'*** $SRVCALL invalid DSECT operand specified'
         MEXIT ,
.ERR01   MNOTE 8,'*** $SRVCALL invalid EP operand specified'
         MEXIT ,
.ERR02   MNOTE 8,'*** $SRVCALL invalid CALLER operand specified'
         MEXIT ,
.ERR03   MNOTE 8,'*** $SRVCALL invalid TRIGGER operand specified'  @03A
         MEXIT ,
         MEND
./ ADD NAME=$SRVINI  0104-21069-21304-1653-00043-00044-00003-BENMAR  02
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $SRVINI                                                   */
.*/*                                                                 */
.*/* Function: Service Routine Entry Macro                           */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ID      $SRVINI &EPR=R15,                                             +
               &EPA=R10,                                               +
               &EVT=R11,                                               +
               &DSA=R12,                                               +
               &STK=R9,                                                +
               &ENV=STKSRIA
.*
         LCLC  &SRV
&SRV     SETC  'SUB'.'&SYSNDX'
         USING &ID,&EPR               .temp addressability
         B     &SRV.A                 .branch
         $MODID DSECT=NO              .ID service routine
         DROP  &EPR                   .drop addressability
.*
&SRV.A   STM   R14,R12,GPR@R14(R13)   .save caller's regs
         LR    &EPA,&EPR              .set base address
         USING &ID,&EPA               .set addressability
         USING STK,&STK               .set addressability
         USING EVT,&EVT               .set addressability
         L     R15,&ENV               .environment init EPA
         BALR  R14,R15                .initialize environment
         USING DSA,&DSA               .DSA addressability
         MEND
./ ADD NAME=$SRVXIT  0103-21069-21304-1653-00056-00056-00003-BENMAR  09
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $SRVXIT                                                   */
.*/*                                                                 */
.*/* Function: Service Routine Exit Macro                            */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $SRVXIT &STK=R9,                                              +
               &RC=,                                                   +
               &RSN=,                                                  +
               &PARM=,                                                 +
               &ENV=STKSRXA
.*
         LCLC  &SRV
&SRV     SETC  'SRV'.'&SYSNDX'
.*
         L     R15,&ENV               .environment exit EPA
         BALR  R14,R15                .set exit environment
         L     R13,GPR@BWD(,R13)      .caller's save area
.*
         AIF   ('&RC' EQ '').SRV10
         AIF   ('&RC'(1,1) EQ '(').ERR01
         MVC   GPR@R15(4,R13),&RC     .return RC
.*
.SRV10   ANOP  ,
         AIF   ('&RSN' EQ '').SRV20
         AIF   ('&RSN'(1,1) EQ '(').ERR01
         MVC   GPR@R0(4,R13),&RSN     .return RSN
.*
.SRV20   ANOP  ,
         AIF   ('&PARM' EQ '').SRV30
         AIF   ('&PARM'(1,1) EQ '(').ERR01
         MVC   GPR@R1(4,R13),&PARM    .return parameter
.*
.SRV30   ANOP  ,
         LM    R14,R12,GPR@R14(R13)   .load caller's regs
         BR    R14                    .return
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $SRVXIT - Register notation unsupported'
         MEND
./ ADD NAME=$SSIREQ  0106-21069-21304-1653-00049-00044-00031-BENMAR  15
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $SSIREQ                                                   */
.*/*                                                                 */
.*/* Description: Dynamic LPA Service Macro                          */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V1R1 | 03102021 | Ben Marino  | Serviceability enhancements  *
.* @03 | V2R1 | 04102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
         $SSIREQ &ID
.*
         AIF   ('&ID' EQ 'ENABLE').ENABLE
         AIF   ('&ID' EQ 'DISABLE').DISABLE
         AGO   .ERR01
.*
.ENABLE  ANOP  ,
         SPKA  0(0)                    .supervisor key             @02C
         LA    R1,4                    .enable service
         AGO   .CALLSSI
.*
.DISABLE ANOP  ,
         SPKA  0(0)                    .supervisor key             @02C
         LA    R1,8                    .disable service
.*
.CALLSSI ANOP  ,
         L     R15,STKSSIA             .service routine EPA
         BALR  R14,R15                 .call service routine
         L     R1,STKEKEY              .caller protect key         @02C
         SPKA  0(R1)                   .set it                     @02C
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $SSIREQ - Invalid service requested'
         MEND
./ ADD NAME=$ST      0101-21105-21304-1653-00029-00029-00001-BENMAR  22
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $ST                                                       */
.*/*                                                                 */
.*/* Description: Store macro                                        */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V1R1 | 04142021 | Ben Marino  | Serviceability enhancements  *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $ST   &SOURCE,&TARGET,&WRKREG=R15                         @02C
         SPKA  0(0)                    .supervisor key
         ST    &SOURCE,&TARGET         .update target
         L     &WRKREG,STKSTKEC        .current STKE entry         @02A
         L     &WRKREG,STKEKEY-STKE(,&WRKREG)  .get my key         @02C
         SPKA  0(&WRKREG)              .restore my key
         MEND
./ ADD NAME=$STC     0101-21105-21304-1653-00029-00029-00001-BENMAR  27
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $STC                                                      */
.*/*                                                                 */
.*/* Description: Store character macro                              */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V1R1 | 04142021 | Ben Marino  | Serviceability enhancements  *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $STC  &SOURCE,&TARGET,&WRKREG=R15                         @02C
         SPKA  0(0)                    .supervisor key
         STC   &SOURCE,&TARGET         .update target
         L     &WRKREG,STKSTKEC        .current STKE entry         @02A
         L     &WRKREG,STKEKEY-STKE(,&WRKREG)  .get my key         @02C
         SPKA  0(&WRKREG)              .restore my key
         MEND
./ ADD NAME=$STCSRV  0104-21069-21304-1653-00089-00089-00004-BENMAR  31
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $STCSRV                                                   */
.*/*                                                                 */
.*/* Function: Recovery Subroutine Entry Map                         */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $STCSRV &TYPE=,                                               +
               &EP=,                                                   +
               &LEN=,                                                  +
               &CMD=,                                                  +
               &PARM=0,                                                +
               &PARM0=0,                                               +
               &DSECT=NO
.*
         AIF   ('&DSECT' EQ 'YES').LIST
         AIF   ('&DSECT' NE 'NO').ERR00
         AIF   ('&TYPE' EQ 'INITIAL').INIT
         AIF   ('&TYPE' EQ 'FINAL').FINI
         AIF   ('&TYPE' EQ 'ENTRY').ENTRY
         AGO   .ERR01
.*
.**      TYPE=INITIAL
.*
.INIT    ANOP  ,
         DS    0F                    .initial table entry
         MEXIT ,
.*
.**      TYPE=ENTRY
.*
.ENTRY   ANOP  ,
         DS    0F
         AIF   ('&EP' EQ '').ERR01
         DC    A(&EP)                .subroutine entry address
         DC    A(&PARM)              .subroutine input parm-R1
         DC    A(&PARM0)             .subroutine input parm-R0
         DC    AL2(0)                .-available
         AIF   ('&LEN' EQ '').ERR02
         DC    AL2(&LEN)             .command verb length
         AIF   ('&CMD' EQ '').ERR03
         DC    &CMD                  .command verb
         MEXIT ,
.*
.**      TYPE=FINAL
.*
.FINI    ANOP  ,
         DS    0F                    .
         DC    XL4'FFFFFFFF'         .final table entry
         MEXIT ,
.*
.**      DSECT=YES
.*
.LIST    ANOP  ,
STCE     DSECT ,
STCEEPA  DS    A                     .routine entry address
STCEPAR1 DS    A                     .routine input parm-R1
STCEPAR0 DS    A                     .routine input parm-R0
STCERSVR DS    AL2                   .-available
STCECMDL DS    AL2                   .command verb length
STCECMD  DS    CL16                  .command verb
STCE@SZE EQU   *-STCE                .entry size
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR00   MNOTE 8,'*** $STCSRV invalid DSECT operand specified'
         MEXIT ,
.ERR01   MNOTE 8,'*** $STCSRV invalid EP operand specified'
         MEXIT ,
.ERR02   MNOTE 8,'*** $STCSRV invalid LEN operand specified'
         MEXIT ,
.ERR03   MNOTE 8,'*** $STCSRV invalid CMD operand specified'
         MEXIT ,
         MEND
./ ADD NAME=$SUBINI  0104-21069-21304-1653-00050-00050-00050-BENMAR  36
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $SUBINI                                                   */
.*/*                                                                 */
.*/* Function: Subroutine Entry Macro                                */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $SUBINI &EPR=R15,                                             +
               &EPA=R10,                                               +
               &DSA=R12,                                               +
               &STK=R9,                                                +
               &ENV=STKSBIA
.*
         LCLC  &SUB
&SUB     SETC  'SUB'.'&SYSNDX'
         AIF   ('&ZID' EQ '').ERR01
&ZID     DS    0H
         USING &ZID,&EPR              .temp addressability
         B     &SUB.A                 .branch
         DC    CL8'&ZID'              .ID subroutine
         DROP  &EPR                   .drop addressability
.*
&SUB.A   DS    0H                     .
         STM   R14,R12,GPR@R14(R13)   .save caller's regs
         LR    &EPA,&EPR              .set base address
         USING &ZID,&EPA              .set addressability
         USING STK,&STK               .set addressability
         USING DSA,&DSA               .set addessability
         L     R15,&ENV               .environment init EPA
         BALR  R14,R15                .initialize environment
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $SUBINI - ID operand not specified'
         MEXIT ,
         MEND
./ ADD NAME=$SUBXIT  0103-21069-21304-1653-00058-00058-00003-BENMAR  40
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $SUBXIT                                                   */
.*/*                                                                 */
.*/* Function: Subroutine Exit Macro                                 */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&SUBXIT  $SUBXIT &STK=R9,                                              +
               &CALLKEY=,                                              +
               &RC=,                                                   +
               &RSN=,                                                  +
               &PARM=,                                                 +
               &ENV=STKSBXA
.*
         LCLC  &SUB
&SUB     SETC  'SUB'.'&SYSNDX'
.*
         L     R15,&ENV               .environment exit EPA
         BALR  R14,R15                .set exit environment
         L     R13,GPR@BWD(,R13)      .caller's save area
.*
         AIF   ('&RC' EQ '').SUB10
         AIF   ('&RC'(1,1) EQ '(').ERR01
         MVC   GPR@R15(4,R13),&RC     .return RC
.*
.SUB10   ANOP  ,
         AIF   ('&RSN' EQ '').SUB20
         AIF   ('&RSN'(1,1) EQ '(').ERR01
         MVC   GPR@R0(4,R13),&RSN     .return RSN
.*
.SUB20   ANOP  ,
         AIF   ('&PARM' EQ '').SUB30
         AIF   ('&PARM'(1,1) EQ '(').ERR01
         MVC   GPR@R1(4,R13),&PARM    .return parameter
.*
.SUB30   ANOP  ,
         LM    R14,R12,GPR@R14(R13)   .load caller's regs
         BR    R14                    .return
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $SUBXIT - Register notation unsupported'
         MEXIT ,
         MEND
./ ADD NAME=$SVCALL  0103-21069-21304-1653-00089-00089-00003-BENMAR  50
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $SRVCALL                                                  */
.*/*                                                                 */
.*/* Function: ECF service Routine Table Entry                       */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $SRVCALL &TYPE=,                                              +
               &EP=,                                                   +
               &PARM=,                                                 +
               &CALLER=,                                               +
               &DSECT=NO
.*
         AIF   ('&DSECT' EQ 'YES').LIST
         AIF   ('&DSECT' NE 'NO').ERR00
         AIF   ('&TYPE' EQ 'INITIAL').INIT
         AIF   ('&TYPE' EQ 'FINAL').FINI
         AIF   ('&TYPE' EQ 'ENTRY').ENTRY
         AGO   .ERR01
.*
.**      TYPE=INITIAL
.*
.INIT    ANOP  ,
         DS    0F                    .initial table entry
         MEXIT ,
.*
.**      TYPE=ENTRY
.*
.ENTRY   ANOP  ,
         DS    0F
         AIF   ('&EP' EQ '').ERR01
         DC    A(&EP)                .service routine EPA
         AIF   ('&PARM' NE '').ENTY10
         DC    AL4(0)                .PARM not specified
         AGO   .ENTY20
.*
.ENTY10  ANOP  ,
         DC    AL4(&PARM)            .service parameter
.*
.ENTY20  ANOP  ,
         DC    AL1(0)                .entry flags
         AIF   ('&CALLER' EQ '').ERR02
         DC    CL3'&CALLER'          .CALLER ID
         DC    CL8'&EP'              .service routine
         MEXIT ,
.*
.**      TYPE=FINAL
.*
.FINI    ANOP  ,
         DS    0F                    .
         DC    XL4'FFFFFFFF'         .final table entry
         MEXIT ,
.*
.**      DSECT=YES
.*
.LIST    ANOP  ,
SRVE     DSECT ,
SRVEEPA  DS    A                     .service routine EPA
SRVEPARM DS    A                     .caller parm data
SRVEFLG1 DS    XL1                   .flags
SRVECALL DS    CL3                   .caller ID
SRVENAME DS    CL8                   .service routine name
SRVE@SZE EQU   *-SRVE                .entry size
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR00   MNOTE 8,'*** $SRVCALL invalid DSECT operand specified'
         MEXIT ,
.ERR01   MNOTE 8,'*** $SRVCALL invalid EP operand specified'
         MEXIT ,
.ERR02   MNOTE 8,'*** $SRVCALL invalid CALLER operand specified'
         MEXIT ,
         MEND
./ ADD NAME=$SVCENTY 0103-21069-21304-1653-00075-00075-00003-BENMAR  54
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $SVCENTY                                                  */
.*/*                                                                 */
.*/* Function: SVC Entry Routine Table Map                           */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $SVCENTY &TYPE=,                                              +
               &EP=,                                                   +
               &FCID=,                                                 +
               &DSECT=NO
.*
         AIF   ('&DSECT' EQ 'YES').LIST
         AIF   ('&DSECT' NE 'NO').ERR00
         AIF   ('&TYPE' EQ 'INITIAL').INIT
         AIF   ('&TYPE' EQ 'FINAL').FINI
         AIF   ('&TYPE' EQ 'ENTRY').ENTRY
         AGO   .ERR01
.*
.**      TYPE=INITIAL
.*
.INIT    ANOP  ,
         DS    0F                    .initial table entry
         MEXIT ,
.*
.**      TYPE=ENTRY
.*
.ENTRY   ANOP  ,
         DS    0F
         AIF   ('&EP' EQ '').ERR01
         DC    A(&EP)                .SVC routine EPA
         AIF   ('&FCID' EQ '').ERR02
         DC    AL4(&FCID)            .SVC function code ID
         MEXIT ,
.*
.**      TYPE=FINAL
.*
.FINI    ANOP  ,
         DS    0F                    .
         DC    XL4'FFFFFFFF'         .final table entry
         MEXIT ,
.*
.**      DSECT=YES
.*
.LIST    ANOP  ,
ZSVC     DSECT ,
ZSVCEPA  DS    A                     .SVC routine EPA
ZSVCFCID DS    AL4                   .function ID
ZSVC@SZE EQU   *-ZSVC                .entry size
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR00   MNOTE 8,'*** $SVCENTY invalid DSECT operand specified'
         MEXIT ,
.ERR01   MNOTE 8,'*** $SVCENTY invalid EP operand specified'
         MEXIT ,
.ERR02   MNOTE 8,'*** $SVCENTY invalid FCID operand specified'
         MEXIT ,
         MEND
./ ADD NAME=$TCBFSA  0102-21069-21304-1653-00060-00060-00002-BENMAR  59
.*/*******************************************************************/
.*/*                                                                 */
.*/* Nane: $TCBFSA                                                   */
.*/*                                                                 */
.*/* Description: Input/output access data area                      */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
         $TCBFSA &FUNC,&ADDR=
.*
         AIF   ('&FUNC' EQ 'SET').SETFSA
         AIF   ('&FUNC' EQ 'GET').GETFSA
         AGO   .ERR01
.*
.SETFSA  ANOP  ,
         AIF   ('&ADDR' EQ '').ERR02
         AIF   ('&ADDR' EQ '(1)').ERR04
         AIF   ('&ADDR' EQ '(R1)').ERR04
         L     R1,X'21C'              .TCB address
         ICM   R1,7,X'091'(R1)        .FSA address
         AIF   ('&ADDR'(1,1) EQ '(').SET000
         MVC   0(4,R1),&ADDR          .update FSA+0
         MEXIT ,
.*
.SET000  ANOP  ,
         ST    &ADDR,0(,R1)           .update FSA+0
         MEXIT ,
.*
.GETFSA  ANOP  ,
         AIF   ('&ADDR' NE '').ERR03
         L     R1,X'21C'              .TCB address
         ICM   R1,7,X'091'(R1)        .FSA address
         L     R1,0(,R1)              .load FSA+0
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $TCBFSA - Invalid function operand specified'
         MEXIT ,
.ERR02   MNOTE 8,'*** $TCBFSA - ADDR= Operand required not specified'
         MEXIT ,
.ERR03   MNOTE 8,'*** $TCBFSA - ADDR= Not allowed with GET function'
         MEXIT ,
.ERR04   MNOTE 8,'*** $TCBFSA - &ADDR Not allowed with ADDR= operand'
         MEXIT ,
         MEND
./ ADD NAME=$TESTSVC 0103-21069-21304-1654-00051-00051-00003-BENMAR  03
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $TESTSVC                                                  */
.*/*                                                                 */
.*/* Description: SVC Recursive Loop Prevention Macro                */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $TESTSVC &SVC=,&EXIT=
.*
         LCLC  &ZSV
&ZSV     SETC  'ZSV'.'&SYSNDX'
.*
         AIF   ('&SVC' EQ '').ERR00
         AIF   ('&EXIT' EQ '').ERR01
.*
         L     R1,PSATOLD                 .TCB address
         L     R15,TCBRBP-TCB(,R1)        .SVRB address
         ICM   R15,7,RBLINKB-RBBASIC(R15) .get previous RB
         CLR   R1,R15                     .does it point to TCB?
         BE    &ZSV                       .yes, carry on
         LA    R1,RBBASIC-RBINTCOD        .offset to interrupt code
         LNR   R1,R1                      .make it negative
         AL    R1,RBLINK-RBBASIC(,R15)    .point at RBINTCOD
         LH    R1,0(,R1)                  .get interrupt code
         CH    R1,=AL2(&SVC)              .recursive SVC issued?
         BE    &EXIT                      .yes, exit to prevent loop
&ZSV     DS    0H
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR00   MNOTE 8,'*** $SVCTEST - SVC operand specification error'
         MEXIT ,
.ERR01   MNOTE 8,'*** $SVCTEST - EXIT operand specification error'
         MEXIT ,
         MEND
./ ADD NAME=$TOKEN   0104-21069-21304-1654-00155-00155-00004-BENMAR  07
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $TOKEN                                                    */
.*/*                                                                 */
.*/* Description: TOKEN Management Macro                             */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $TOKEN &TYPE,                 {CREATE|RETRIEVE|DELETE}        +
               &EP=EVTTKNA,            EPA                             +
               &NAME=,                 Token name                      +
               &TOKEN=,                token data                      +
               &LEVEL=                 token level
.*
         LCLC  &ZTKN
         LCLA  &CRE,&DEL,&RET,&LVL
&ZTKN    SETC  'ZTKN'.'&SYSNDX'
.*
&LVL     SETA  X'80'
         AIF   ('&LEVEL' EQ 'TCB').TYPE
&LVL     SETA  X'40'
         AIF   ('&LEVEL' EQ 'ASCB').TYPE
&LVL     SETA  X'20'
         AIF   ('&LEVEL' EQ 'SYSTEM').TYPE
         AGO   .ERR00
.*
.TYPE    ANOP  ,
         AIF   ('&TYPE' EQ 'CREATE').CREATE
         AIF   ('&TYPE' EQ 'DELETE').DELETE
         AIF   ('&TYPE' EQ 'RETRIEVE').RETRIEV
         AGO   .ERR01
.*
.**      CREATE token
.*
.CREATE  ANOP  ,
&CRE     SETA  X'80'
         AIF   ('&NAME' EQ '').ERR02
         AIF   ('&NAME'(1,1) EQ '(').CRE000
         LA    R0,&NAME                .token name address
         AGO   .CRE005
.CRE000  ANOP  ,
         AIF   ('&NAME(1)' EQ '0').CRE005
         LR    R0,&NAME                .token name address
.CRE005  ANOP  ,
         AIF   ('&TOKEN' EQ '').ERR03
         AIF   ('&TOKEN'(1,1) EQ '(').CRE010
         LA    R1,&TOKEN               .token value address
         AGO   .CRE015
.CRE010  ANOP  ,
         AIF   ('&TOKEN(1)' EQ '1').CRE015
         LR    R1,&TOKEN               .token value address
.CRE015  ANOP  ,
         AIF   ('&EP' EQ 'LOCAL').CRE020
         B     *+6
         DC    AL1(&CRE),AL1(&LVL)     .token create+level
         L     R15,&EP                 .token service EPA
         BALR  R14,R15                 .create token
         MEXIT ,
.CRE020  ANOP  ,
         B     *+6
         DC    AL1(&CRE),AL1(&LVL)     .token create+level
         L     R15,=V(ECFTKN)          .local token service EPA
         BALR  R14,R15                 .create token
         MEXIT ,
.CRE025  ANOP  ,
.*
.**      DELETE token
.*
.DELETE  ANOP  ,
&DEL     SETA  X'40'
         AIF   ('&TOKEN' NE '').ERR06
         AIF   ('&NAME' EQ '').ERR02
         AIF   ('&NAME'(1,1) EQ '(').DEL000
         SLR   R1,R1                   .
         LA    R0,&NAME                .token name address
         AGO   .DEL010
.DEL000  ANOP  ,
         AIF   ('&NAME(1)' EQ '0').DEL010
         SLR   R1,R1                   .
         LR    R0,&NAME                .token name address
.DEL010  ANOP  ,
         AIF   ('&EP' EQ 'LOCAL').DEL015
         B     *+6
         DC    AL1(&DEL),AL1(&LVL)     .token delete+level
         L     R15,&EP                 .token service EPA
         BALR  R14,R15                 .delete token
         MEXIT ,
.DEL015  ANOP  ,
         B     *+6
         DC    AL1(&DEL),AL1(&LVL)     .token delete+level
         L     R15,=V(ECFTKN)          .local token service EPA
         BALR  R14,R15                 .delete token
         MEXIT ,
.*
.**      RETRIEVE token
.*
.RETRIEV ANOP  ,
&RET     SETA  X'20'
         AIF   ('&NAME' EQ '').ERR02
         AIF   ('&NAME'(1,1) EQ '(').RET000
         LA    R0,&NAME                .token name address
         AGO   .RET005
.RET000  ANOP  ,
         AIF   ('&NAME(1)' EQ '0').RET005
         LR    R0,&NAME                .token name address
.RET005  ANOP  ,
         AIF   ('&TOKEN' EQ '').ERR03
         AIF   ('&TOKEN'(1,1) EQ '(').RET010
         LA    R1,&TOKEN               .token value address
         AGO   .RET020
.RET010  ANOP  ,
         AIF   ('&TOKEN(1)' EQ '1').RET020
         LR    R1,&TOKEN               .token value address
.RET020  ANOP  ,
         AIF   ('&EP' EQ 'LOCAL').RET025
         B     *+6
         DC    AL1(&RET),AL1(&LVL)     .token retrieve+level
         L     R15,&EP                 .token service EPA
         BALR  R14,R15                 .retrieve token
         MEXIT ,
.RET025  ANOP  ,
         B     *+6
         DC    AL1(&RET),AL1(&LVL)     .token retrieve+level
         L     R15,=V(ECFTKN)          .local token service EPA
         BALR  R14,R15                 .retrieve token
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR00   MNOTE 8,'*** $TOKEN - Invalid LEVEL operand specified'
         MEXIT ,
.ERR01   MNOTE 8,'*** $TOKEN - Invalid request specified'
         MEXIT ,
.ERR02   MNOTE 8,'*** $TOKEN - Invalid NAME operand specified'
         MEXIT ,
.ERR03   MNOTE 8,'*** $TOKEN - Invalid TOKEN operand specified'
         MEXIT ,
.ERR04   MNOTE 8,'*** $TOKEN - Invalid SAVE operand specified'
         MEXIT ,
.ERR05   MNOTE 8,'*** $TOKEN - Invalid EP operand specified'
         MEXIT ,
.ERR06   MNOTE 8,'*** $TOKEN - TOKEN operand specification error'
         MEND
./ ADD NAME=$TPROT   0113-21069-21304-1654-00154-00081-00133-BENMAR  12
.*/*******************************************************************/
.*/*                                                                 */
.*/* Nname $TPROT                                                    */
.*/*                                                                 */
.*/* Description: Test Storage Protection                            */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/* Notes: Coding Examples:                                         */
.*/*                                                                 */
.*/*    Example 1:                                                   */
.*/*    Validate storage address located stored in fullword STORADR  */
.*/*    using default LINKAGE=PC.                                    */
.*/*                                                                 */
.*/*        $TPROT STORADR                                           */
.*/*                                                                 */
.*/*    Example 2:                                                   */
.*/*    Validate storage address pointed to by register R1 using     */
.*/*    default LINKAGE=PC.                                          */
.*/*                                                                 */
.*/*        $TPROT (R1)                                              */
.*/*                                                                 */
.*/*    Example 3:                                                   */
.*/*    validate grande storage address pointed to by doubleword     */
.*/*    GRANDSTG using default LINKAGE=PC.                           */
.*/*                                                                 */
.*/*        $TPROT ADDR64=GRANDSTG                                   */
.*/*                                                                 */
.*/*    Example 4:                                                   */
.*/*    Validate grande storage address pointed by grande register   */
.*/*    R1 using LINKAGE=PC default.                                 */
.*/*                                                                 */
.*/*        $TPROT ADDR64=(R1)                                       */
.*/*                                                                 */
.*/*    Example 5:                                                   */
.*/*    Validate storage range specified in fullwords STORADR1 and   */
.*/*    STORADR2 using LINKGE=SVC.                                   */
.*/*                                                                 */
.*/*        $TPROT STORADR1,STORADR2,LINKAGE=SVC                     */
.*/*                                                                 */
.*/*    Example 5:                                                   */
.*/*    Validate storage range specified in register R2 and register */
.*/*    R3 using LINKAGE=SVC.                                        */
.*/*                                                                 */
.*/*        $TPROT (R2),(R3),LINKAGE=SVC                             */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.* @03 | V2R3 | 07262021 | Ben Marino  | Added 64-bit address support *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $TPROT &ADDR,&ADDR2,                                      @03C+
               &ADDR64=,                                           @03A+
               &PC=EVTPCNUM,                                       @03C+
               &LINKAGE=PC                                         @03M
         AIF   ('&LINKAGE' EQ 'BRANCH').BRANCH
         AIF   ('&LINKAGE' EQ 'SVC').SVC
         AIF   ('&LINKAGE' EQ 'PC').XPC                            @02A
         AGO   .ERR00
.*
.**      LINKAGE=BRANCH
.*
.BRANCH  ANOP  ,
         AIF   ('&ADDR' EQ '').ERR01
         AIF   ('&ADDR2' NE '').ERR02
         AIF   ('&ADDR'(1,1) EQ '(').BRAN00
         L     R1,&ADDR                .storage address
         AGO   .BRAN10
.*
.BRAN00  ANOP  ,
         LR    R1,&ADDR                .storage address
.*
.BRAN10  ANOP  ,
         L     R15,EVTVALA             .ECFVAL EPA
         BALR  R14,R15                 .validate storage address
         MEXIT ,
.*
.**      LINKAGE=SVC
.*
.SVC     ANOP  ,
         AIF   ('&ADDR64' NE '').ERR03                             @03A
         AIF   ('&ADDR' EQ '').ERR01
         AIF   ('&ADDR'(1,1) EQ '(').SVC000
         L     R0,&ADDR                .storage address
         AGO   .SVC010
.*
.SVC000  ANOP  ,
         LR    R0,&ADDR                .storage address
.*
.SVC010  ANOP  ,
         AIF   ('&ADDR2' NE '').SVC020
         XR    R1,R1                   .range not specified
         AGO   .SVCALL
.*
.SVC020  ANOP  ,
         AIF   ('&ADDR2'(1,1) EQ '(').SVC030
         L     R1,&ADDR2               .storage address range
         AGO   .SVCALL
.*
.SVC030  ANOP  ,
         LR    R1,&ADDR2               .storage address range
.*
.SVCALL  ANOP  ,
         LA    R15,$TPROT              .FCID
         BAL   R14,EVTSVC              .validate storage address
         MEXIT ,
.*
.**      LINKAGE=PC                                                @02A
.*
.XPC     ANOP  ,
         AIF   ('&ADDR64' EQ '').XPC010                            @03A
         AIF   ('&ADDR64'(1,1) EQ '(').XPC000                      @03A
         LG    R1,&ADDR64              .grande storage address     @03A
         AGO   .XPCALL                                             @03A
.*
.XPC000  ANOP  ,
         LGR   R1,&ADDR64              .grande storage address     @03A
         AGO   .XPCALL                                             @03A
.*
.XPC010  ANOP  ,
         AIF   ('&ADDR' EQ '').ERR01
         AIF   ('&ADDR'(1,1) EQ '(').XPC020
         L     R1,&ADDR                .storage address
         AGO   .XPCALL
.*
.XPC020  ANOP  ,
         LR    R1,&ADDR                .storage address
.*
.XPCALL  ANOP  ,
         LA    R15,$TPROT              .PCID
         L     R14,&PC                 .ECFXPC router
         PC    0(14)                   .call PC routine
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR00   MNOTE 8,'*** $TPROT - LINKAGE operand specified'
         MEXIT ,
.ERR01   MNOTE 8,'*** $TPROT - Invalid address specified'
         MEXIT ,
.ERR02   MNOTE 8,'*** $TPROT - Range not allowed with LINKAGE=BRANCH'
         MEXIT ,
.ERR03   MNOTE 8,'*** $TPROT - ADDR64 not allowed with LINKAGE=SVC'
         MEXIT ,
         MEND
./ ADD NAME=$TRACE   0103-21069-21304-1654-00053-00053-00003-BENMAR  16
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $TRACE                                                    */
.*/*                                                                 */
.*/* Description: Trace Service Routine Macro                        */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
         $TRACE &TRCID,&MID=,&A=0,&LN=0
.*
         LCLC  &ZTRC
&ZTRC    SETC  'TRC'.'&SYSNDX'
.*
         TM    STKFLG1,STK@TRCE        .TRACE=ON?
         BZ    &ZTRC.B                 .no, skip tracing
.*
         AIF   ('&A' EQ '').ERR01
         AIF   ('&A'(1,1) EQ '(').TRC00
         L     R0,&A                   .storage address
         AGO   .TRC99
.TRC00   ANOP  ,
         LR    R0,&A                   .storage address
.*
.TRC99   ANOP  ,
         BAL   R1,&ZTRC.A              .yes, call trace
         DC    AL4(&LN)                .data size
         DC    CL8'&TRCID'             .trace ID
         DC    CL8'&MID'               .trace caller
&ZTRC.A  ICM   R15,15,STKTRCA          .ECFTRC EPA init?
         BZ    &ZTRC.B                 .no, exit
         BALR  R14,R15                 .call trace routine
&ZTRC.B  DS    0H                      .
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $TRACE - Invalid trace address supplied'
         MEXIT ,
         MEND
./ ADD NAME=$TRCCALL 0103-21069-21304-1654-00076-00076-00003-BENMAR  20
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $TRCCALL                                                  */
.*/*                                                                 */
.*/* Function: Subsuystem Trace Table Entry                          */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $TRCCALL &TYPE=,                                              +
               &EP=,                                                   +
               &TRCID=,                                                +
               &DSECT=NO
.*
         AIF   ('&DSECT' EQ 'YES').LIST
         AIF   ('&DSECT' NE 'NO').ERR00
         AIF   ('&TYPE' EQ 'INITIAL').INIT
         AIF   ('&TYPE' EQ 'FINAL').FINI
         AIF   ('&TYPE' EQ 'ENTRY').ENTRY
         AGO   .ERR01
.*
.**      TYPE=INITIAL
.*
.INIT    ANOP  ,
         DS    0F                    .initial table entry
         MEXIT ,
.*
.**      TYPE=ENTRY
.*
.ENTRY   ANOP  ,
         DS    0F
         AIF   ('&EP' EQ '').ERR01
         DC    A(&EP)                .EPA
.*
         AIF   ('&TRCID' EQ '').ERR02
         DC    CL8'&TRCID'           .trace ID
         MEXIT ,
.*
.**      TYPE=FINAL
.*
.FINI    ANOP  ,
         DS    0F                    .
         DC    XL4'FFFFFFFF'         .final table entry
         MEXIT ,
.*
.**      DSECT=YES
.*
.LIST    ANOP  ,
TRCC     DSECT ,
TRCCEPA  DS    A                     .EPA
TRCCID   DS    CL8                   .trace ID
TRCC@SZE EQU   *-TRCC                .entry size
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR00   MNOTE 8,'*** $TRCCALL invalid DSECT operand specified'
         MEXIT ,
.ERR01   MNOTE 8,'*** $TRCCALL invalid EP operand specified'
         MEXIT ,
.ERR02   MNOTE 8,'*** $TRCCALL invalid TRCID operand specified'
         MEXIT ,
         MEND
./ ADD NAME=$TSRCALL 0103-21069-21304-1654-00043-00043-00003-BENMAR  24
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $TSRCALL                                                  */
.*/*                                                                 */
.*/* Description: Service Request Facility Macro                     */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $TSRCALL &CALL
.*
         AIF   ('&CALL' EQ 'ENABLE').ENABLE
         AIF   ('&CALL' EQ 'DISABLE').DISABLE
         AGO   .ERR01
.*
.ENABLE  ANOP  ,
         WTO   'ECF900I ECF Service facility request in progress',     +
               ROUTCDE=11
         MEXIT ,
.*
.DISABLE ANOP  ,
         WTO   'ECF901I ECF Service facility request complete',        +
               ROUTCDE=11
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $TSRCALL - Request specification error'
         MEXIT ,
         MEND
./ ADD NAME=$UNLOCK  0102-21113-21304-1654-00246-00232-00230-BENMAR  28
.*/*******************************************************************/
.*/*                                                                 */
.*/* NAME: $UNLOCK                                                   */
.*/*                                                                 */
.*/* DESCRIPTION: Unlock Resource Macro                              */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R3 | 10272021 | Ben Marino  | Added SVC screening support  *
.*     |      |          |             |                              *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $UNLOCK &LOCK,&LK=PSAAOLD,&LK2=PSATOLD,                       +
               &WRKREG=R15,&SSI=NO
.*
         LCLC  &ZUL
&ZUL     SETC  'ZUL'.'&SYSNDX'
.*
         AIF   ('&LOCK' EQ '').ERR01
.*
         AIF   ('&LOCK' NE 'EVTREBLK').UNLK05
         CLC   &LOCK,&LK              .lock held?
         BNE   &ZUL.X                 .no, skip unlock
         CLC   EVTREBL2,&LK2          .lock owner?
         BNE   &ZUL.X                 .no, skip unlock
         AIF   ('&SSI' EQ 'YES').UNLK00
         SPKA  0(0)                   .supervisor key
.UNLK00  ANOP  ,
         XC    EVTREBL2,EVTREBL2      .zero lock owner
         XC    &LOCK,&LOCK            .release lock
         AGO   .UNLK99
.*
.UNLK05  ANOP  ,
         AIF   ('&LOCK' NE 'EVTCMDLK').UNLK10
         CLC   &LOCK,&LK              .lock held?
         BNE   &ZUL.X                 .no, skip unlock
         CLC   EVTCMDL2,&LK2          .lock owner?
         BNE   &ZUL.X                 .no, skip unlock
         AIF   ('&SSI' EQ 'YES').UNLK06
         SPKA  0(0)                   .supervisor key
.UNLK06  ANOP  ,
         XC    EVTCMDL2,EVTCMDL2      .zero lock owner
         XC    &LOCK,&LOCK            .release lock
         AGO   .UNLK99
.*
.UNLK10  ANOP  ,
         AIF   ('&LOCK' NE 'EVTWTOLK').UNLK15
         CLC   &LOCK,&LK              .lock held?
         BNE   &ZUL.X                 .no, skip unlock
         CLC   EVTWTOL2,&LK2          .lock owner?
         BNE   &ZUL.X                 .no, skip unlock
         AIF   ('&SSI' EQ 'YES').UNLK11
         SPKA  0(0)                   .supervisor key
.UNLK11  ANOP  ,
         XC    EVTWTOL2,EVTWTOL2      .zero lock owner
         XC    &LOCK,&LOCK            .release lock
         AGO   .UNLK99
.*
.UNLK15  ANOP  ,
         AIF   ('&LOCK' NE 'EVTEOTLK').UNLK20
         CLC   &LOCK,&LK              .lock held?
         BNE   &ZUL.X                 .no, skip unlock
         CLC   EVTEOTL2,&LK2          .lock owner?
         BNE   &ZUL.X                 .no, skip unlock
         AIF   ('&SSI' EQ 'YES').UNLK16
         SPKA  0(0)                   .supervisor key
.UNLK16  ANOP  ,
         XC    EVTEOTL2,EVTEOTL2      .zero lock owner
         XC    &LOCK,&LOCK            .release lock
         AGO   .UNLK99
.*
.UNLK20  ANOP  ,
         AIF   ('&LOCK' NE 'EVTEOMLK').UNLK25
         CLC   &LOCK,&LK              .lock held?
         BNE   &ZUL.X                 .no, skip unlock
         CLC   EVTEOML2,&LK2          .lock owner?
         BNE   &ZUL.X                 .no, skip unlock
         AIF   ('&SSI' EQ 'YES').UNLK21
         SPKA  0(0)                   .supervisor key
.UNLK21  ANOP  ,
         XC    EVTEOML2,EVTEOML2      .zero lock owner
         XC    &LOCK,&LOCK            .release lock
         AGO   .UNLK99
.*
.UNLK25  ANOP  ,
         AIF   ('&LOCK' NE 'EVTRFRLK').UNLK30
         CLC   &LOCK,&LK              .lock held?
         BNE   &ZUL.X                 .no, skip unlock
         CLC   EVTRFRL2,&LK2          .lock owner?
         BNE   &ZUL.X                 .no, skip unlock
         AIF   ('&SSI' EQ 'YES').UNLK26
         SPKA  0(0)                   .supervisor key
.UNLK26  ANOP  ,
         XC    EVTRFRL2,EVTRFRL2      .zero lock owner
         XC    &LOCK,&LOCK            .release lock
         AGO   .UNLK99
.*
.UNLK30  ANOP  ,
         AIF   ('&LOCK' NE 'CPTLOCK').UNLK35
         CLC   &LOCK,&LK              .lock held?
         BNE   &ZUL.X                 .no, skip unlock
         CLC   CPTLOCK2,&LK2          .lock owner?
         BNE   &ZUL.X                 .no, skip unlock
         AIF   ('&SSI' EQ 'YES').UNLK31
         SPKA  0(0)                   .supervisor key
.UNLK31  ANOP  ,
         XC    CPTLOCK2,CPTLOCK2      .zero lock owner
         XC    &LOCK,&LOCK            .release lock
         AGO   .UNLK99
.*
.UNLK35  ANOP  ,
         AIF   ('&LOCK' NE 'EVTMGCLK').UNLK40
         CLC   &LOCK,&LK              .lock held?
         BNE   &ZUL.X                 .no, skip unlock
         CLC   EVTMGCL2,&LK2          .lock owner?
         BNE   &ZUL.X                 .no, skip unlock
         AIF   ('&SSI' EQ 'YES').UNLK36
         SPKA  0(0)                   .supervisor key
.UNLK36  ANOP  ,
         XC    EVTMGCL2,EVTMGCL2      .zero lock owner
         XC    &LOCK,&LOCK            .release lock
         AGO   .UNLK99
.*
.UNLK40  ANOP  ,
         AIF   ('&LOCK' NE 'TKNLOCK').UNLK45
         CLC   &LOCK,&LK              .lock held?
         BNE   &ZUL.X                 .no, skip unlock
         CLC   TKNLOCK2,&LK2          .lock owner?
         BNE   &ZUL.X                 .no, skip unlock
         AIF   ('&SSI' EQ 'YES').UNLK41
         SPKA  0(0)                   .supervisor key
.UNLK41  ANOP  ,
         XC    TKNLOCK2,TKNLOCK2      .zero lock owner
         XC    &LOCK,&LOCK            .release lock
         AGO   .UNLK99
.*
.UNLK45  ANOP  ,
         AIF   ('&LOCK' NE 'EVTSTGLK').UNLK50
         CLC   &LOCK,&LK              .lock held?
         BNE   &ZUL.X                 .no, skip unlock
         CLC   EVTSTGL2,&LK2          .lock owner?
         BNE   &ZUL.X                 .no, skip unlock
         AIF   ('&SSI' EQ 'YES').UNLK46
         SPKA  0(0)                   .supervisor key
.UNLK46  ANOP  ,
         XC    EVTSTGL2,EVTSTGL2      .zero lock owner
         XC    &LOCK,&LOCK            .release lock
         AGO   .UNLK99
.*
.UNLK50  ANOP  ,
         AIF   ('&LOCK' NE 'EVTADDLK').UNLK60
         CLC   &LOCK,&LK              .lock held?
         BNE   &ZUL.X                 .no, skip unlock
         CLC   EVTADDL2,&LK2          .lock owner?
         BNE   &ZUL.X                 .no, skip unlock
         AIF   ('&SSI' EQ 'YES').UNLK51
         SPKA  0(0)                   .supervisor key
.UNLK51  ANOP  ,
         XC    EVTADDL2,EVTADDL2      .zero lock owner
         XC    &LOCK,&LOCK            .release lock
         AGO   .UNLK99
.*
.UNLK60  ANOP  ,
         AIF   ('&LOCK' NE 'EVTCOMLK').UNLK65
         CLC   &LOCK,&LK              .lock held?
         BNE   &ZUL.X                 .no, skip unlock
         CLC   EVTCOML2,&LK2          .lock owner?
         BNE   &ZUL.X                 .no, skip unlock
         AIF   ('&SSI' EQ 'YES').UNLK61
         SPKA  0(0)                   .supervisor key
.UNLK61  ANOP  ,
         XC    EVTCOML2,EVTCOML2      .zero lock owner
         XC    &LOCK,&LOCK            .release lock
         AGO   .UNLK99
.*
.UNLK65  ANOP  ,                                                   @02A
         AIF   ('&LOCK' NE 'EVTSVCLK').UNLK70                      @02A
         CLC   &LOCK,&LK              .lock held?                  @02A
         BNE   &ZUL.X                 .no, skip unlock             @02A
         CLC   EVTSVCL2,&LK2          .lock owner?                 @02A
         BNE   &ZUL.X                 .no, skip unlock             @02A
         AIF   ('&SSI' EQ 'YES').UNLK66                            @02A
         SPKA  0(0)                   .supervisor key              @02A
.UNLK66  ANOP  ,                                                   @02A
         XC    EVTSVCL2,EVTSVCL2      .zero lock owner             @02A
         XC    &LOCK,&LOCK            .release lock                @02A
         AGO   .UNLK99                                             @02A
.*
.UNLK70  ANOP  ,
         AIF   ('&LOCK' NE 'EVTSTCLK').FRELCL
         CLC   &LOCK,&LK              .lock held?
         BNE   &ZUL.X                 .no, skip unlock
         CLC   EVTSTCL2,&LK2          .lock owner?
         BNE   &ZUL.X                 .no, skip unlock
         AIF   ('&SSI' EQ 'YES').UNLK71
         SPKA  0(0)                   .supervisor key
.UNLK71  ANOP  ,
         XC    EVTSTCL2,EVTSTCL2      .zero lock owner
         XC    &LOCK,&LOCK            .release lock
         AGO   .UNLK99
.*
.UNLK99  ANOP  ,
         AIF   ('&SSI' EQ 'YES').UNLKXIT
         L     &WRKREG,STKEKEY        .get my protect key
         SPKA  0(&WRKREG)             .restore my protect key
.*
.UNLKXIT ANOP  ,
&ZUL.X   DS    0H
         MEXIT ,
.*
.**      Release LOCAL lock
.*
.FRELCL  ANOP  ,
         AIF   ('&LOCK' NE 'FRELOCAL').FRECMS
         LA    R1,4                   .release LOCAL lock
         L     R15,EVTLCKA            .lock manager EPA
         BALR  R14,R15                .ECFLCK
         MEXIT ,
.*
.**      Release CMS & LOCAL lock
.*
.FRECMS  ANOP  ,
         AIF   ('&LOCK' NE 'FRECMS').ERR02
         LA    R1,12                  .release CMS & LOCAL lock
         L     R15,EVTLCKA            .lock manager EPA
         BALR  R14,R15                .ECFLCK
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $UNLOCK - lockword specification error'
         MEXIT ,
.ERR02   MNOTE 8,'*** $UNLOCK - lock owner operand specifiaction error'
         MEXIT ,
         MEND
./ ADD NAME=$WAIT    0102-21118-21304-1654-00043-00043-00002-BENMAR  33
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $WAIT                                                     */
.*/*                                                                 */
.*/* Description: Wait Service Request Macro                         */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $WAIT &ECB=,&WRKREG=R15
.*
         AIF   ('&ECB' EQ '').ERR01
         AIF   ('&ECB'(1,1) EQ '(').ECB010
         SPKA  0(0)                    .supervisor key
         WAIT  ECB=&ECB                .target ECB
         AGO   .ECB099
.*
.ECB010  ANOP  ,
         SPKA  0(0)                    .supervisor key
         WAIT  ECB=(&ECB)              .target ECB
.*
.ECB099  ANOP  ,
         L     &WRKREG,STKSTKEC        .current STKE entry
         L     &WRKREG,STKEKEY-STKE(,&WRKREG)  .get my key
         SPKA  0(&WRKREG)              .restore my key
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $WAIT - Invalid ECB operand specified'
         MEND
./ ADD NAME=$WTO     0103-21118-21304-1654-00144-00144-00004-BENMAR  36
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $WTO                                                      */
.*/*                                                                 */
.*/* Function: WTO Message Service Macro                             */
.*/*                                                                 */
.*/*                                                                 */
.*/* Description: Supports nine (VAR1-VAR9) variables.               */
.*/*                                                                 */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V1R1 | 04282020 | Ben Marino  | Serviceability enhancements  *
.*     |      |          |             |                              *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $WTO  &MF=,                                               @02A+
               &MID=,                                                  +
               &EP=STKWTOA,                                            +
               &PLIST=DSAPLST,                                         +
               &WRKREG=R2,                                         @02A+
               &VAR1=,&VAR2=,&VAR3=,&VAR4=,&VAR5=,                     +
               &VAR6=,&VAR7=,&VAR8=,&VAR9=
.*
         LCLC  &MSG
&MSG     SETC  'MSG'.'&SYSNDX'
.*
         AIF   ('&MF' NE '').MLWTO                                 @02A
         AIF   ('&PLIST'(1,1) EQ '(').MSG00
.*
.**      Subsystem service macro expansion
.*
         LA    R1,&PLIST               .listform address
         AGO   .MSG10
.MSG00   ANOP  ,
         LR    R1,&PLIST               .listform address
.MSG10   ANOP  ,
         AIF   ('&MID' EQ '').ERR01
         AIF   ('&MID'(1,1) EQ '(').MSG20
         LA    R0,=CL8'&MID'           .message ID
         ST    R0,0(,R1)               .set in parmlist
         AGO   .MSG30
.MSG20   ANOP  ,
         ST    &MID,0(,R1)             .set in parmlist
.MSG30   ANOP  ,
         AIF   ('&VAR1' NE '').MSG40
         OI    0(R1),ENDVL             .set end-of-list
         AGO   .MSG90
.MSG40   ANOP  ,
         LA    R0,&VAR1                .variable text
         ST    R0,4(,R1)               .set in parmlist
         AIF   ('&VAR2' NE '').MSG50
         OI    4(R1),ENDVL             .set end-of-list
         AGO   .MSG90
.MSG50   ANOP  ,
         LA    R0,&VAR2                .variable text
         ST    R0,8(,R1)               .set in parmlist
         AIF   ('&VAR3' NE '').MSG60
         OI    8(R1),ENDVL             .set end-of-list
         AGO   .MSG90
.MSG60   ANOP  ,
         LA    R0,&VAR3                .variable text
         ST    R0,12(,R1)              .set in parmlist
         AIF   ('&VAR4' NE '').MSG70
         OI    12(R1),ENDVL            .set end-of-list
         AGO   .MSG90
.MSG70   ANOP  ,
         LA    R0,&VAR4                .variable text
         ST    R0,16(,R1)              .set in parmlist
         AIF   ('&VAR5' NE '').MSG80
         OI    16(R1),ENDVL            .set end-of-list
         AGO   .MSG90
.MSG80   ANOP  ,
         LA    R0,&VAR5                .variable text
         ST    R0,20(,R1)              .set in parmlist
         AIF   ('&VAR6' NE '').MSG81
         OI    20(R1),ENDVL            .set end-of-list
         AGO   .MSG90
.MSG81   ANOP  ,
         LA    R0,&VAR6                .variable text
         ST    R0,24(,R1)              .set in parmlist
         AIF   ('&VAR7' NE '').MSG82
         OI    24(R1),ENDVL            .set end-of-list
         AGO   .MSG90
.MSG82   ANOP  ,
         LA    R0,&VAR7                .variable text
         ST    R0,28(,R1)              .set in parmlist
         AIF   ('&VAR8' NE '').MSG83
         OI    28(R1),ENDVL            .set end-of-list
         AGO   .MSG90
.MSG83   ANOP  ,
         LA    R0,&VAR8                .variable text
         ST    R0,32(,R1)              .set in parmlist
         AIF   ('&VAR9' NE '').MSG84
         OI    32(R1),ENDVL            .set end-of-list
         AGO   .MSG90
.MSG84   ANOP  ,
         LA    R0,&VAR9                .variable text
         ST    R0,36(,R1)              .set in parmlist
         OI    36(R1),ENDVL            .set end-of-list
.*
.MSG90   ANOP  ,
         AIF   ('&EP' EQ 'ECFWTO').MSG99
         L     R15,&EP                 .service routine EPA
         BALR  R14,R15                 .issue WTO message
         MEXIT ,
.*
.MSG99   ANOP  ,
         L     R15,=V(&EP)             .service routine EPA
         BALR  R14,R15                 .issue WTO message
         MEXIT ,
.*
.**      Multiline WTO display macro
.*
.MLWTO   ANOP  ,                                                 15@02A
         AIF   ('&MF(2)'(1,1) EQ '(').MLWTO0
         SPKA  0(0)                    .displays GT 10 lines
         WTO   MF=(E,&MF(2))           .issue MLWTO
         AGO   .MLWTO5
.*
.MLWTO0  ANOP  ,
         SPKA  0(0)                    .displays GT 10 lines
         WTO   MF=(E,(&MF(2)))         .issue MLWTO
.*
.MLWTO5  ANOP  ,
         L     &WRKREG,STKSTKEC        .current STKE entry
         L     &WRKREG,STKEKEY-STKE(,&WRKREG)  .get my key
         SPKA  0(&WRKREG)              .restore my key
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $WTO - invalid message ID specified'
         MEXIT ,
         MEND
./ ADD NAME=$XC      0102-21105-21304-1654-00029-00029-00002-BENMAR  40
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $XC                                                       */
.*/*                                                                 */
.*/* Description: Exclusive Or Macro                                 */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V1R1 | 04142021 | Ben Marino  | Serviceability enhancements  *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $XC   &TARGET,&SOURCE,&WRKREG=R15                         @02C
         SPKA  0(0)                    .supervisor key
         XC    &TARGET,&SOURCE         .update target
         L     &WRKREG,STKSTKEC        .current STKE entry         @02A
         L     &WRKREG,STKEKEY-STKE(,&WRKREG)  .get my key         @02C
         SPKA  0(&WRKREG)              .restore my key
         MEND
./ ADD NAME=$XMPOST  0106-21069-21304-1654-00192-00192-00018-BENMAR  44
.*/*******************************************************************/
.*/*                                                                 */
.*/* Name: $XMPOST                                                   */
.*/*                                                                 */
.*/* Description: Safe-cross-memory post macro                       */
.*/*                                                                 */
.*/* Notes: None                                                     */
.*/*                                                                 */
.*/* © Copyright Ben Marino. 2019 - 2022 (unpublished)               */
.*/*                                                                 */
.*/*                                                                 */
.*/*******************************************************************/
.*---------------------------CHANGE LOG-------------------------------*
.*                                                                    *
.* ID    Rel    Date       Author        Comments                     *
.*--------------------------------------------------------------------*
.* @01 | V1R1 | 05242019 | Ben Marino  | Initial version              *
.* @02 | V2R1 | 03102021 | Ben Marino  | zOS serviceability support   *
.*     |      |          |             |                              *
.**********************************************************************
.*-------+---------+---------+---------+---------+---------+---------+*
         MACRO
&ZID     $XMPOST &EP=,          service routine EPA                    +
               &MF=,            macro format                           +
               &SRE=,           SRE address/zero                       +
               &REB=,           REB address/zero                       +
               &ASCB=,          target address space                   +
               &TCB=,           target TCB address                     +
               &ECB=,           target ECB address                     +
               &KEY=,           target protet key                      +
               &MAP=NO,         MF=L map                               +
               &CALLER=,        CALLER ID                              +
               &EVT=R11         EVT address
.*
         LCLC  &ZRB
&ZRB     SETC  'ZRB'.'&SYSNDX'
.*
         AIF   ('&MAP' EQ 'YES').ZIRB
         AIF   ('&MF' EQ 'L').LIST
         AIF   ('&MF(2)'(1,1) EQ '(').IRB000
         LA    R1,&MF(2)        .MF=L address
         AGO   .IRB005
.IRB000  ANOP  ,
         LR    R1,&MF(2)        .MF=L address
.*
.IRB005  ANOP  ,
         AIF   ('&EP' EQ '').ERR01
         AIF   ('&EP'(1,1) EQ '(').IRB010
         MVC   0(4,R1),&EP      .set EP address
         AGO   .IRB015
.*
.IRB010  ANOP  ,
         ST    &EP,0(,R1)       .set EP address
.*
.IRB015  ANOP  ,
         AIF   ('&ASCB' EQ '').ERR02
         AIF   ('&ASCB'(1,1) EQ '(').IRB020
         MVC   4(4,R1),&ASCB    .set ASCB address
         AGO   .IRB025
.*
.IRB020  ANOP  ,
         ST    &ASCB,4(,R1)     .set ASCB address
.*
.IRB025  ANOP  ,
         AIF   ('&TCB' EQ '').ERR03
         AIF   ('&TCB'(1,1) EQ '(').IRB030
         MVC   8(4,R1),&TCB     .set TCB address
         AGO   .IRB035
.*
.IRB030  ANOP  ,
         ST    &TCB,8(,R1)      .set TCB address
.*
.IRB035  ANOP  ,
         AIF   ('&REB' EQ '').IRB045
         AIF   ('&REB'(1,1) EQ '(').IRB040
         MVC   12(4,R1),&REB    .set REB address
         AGO   .IRB050
.*
.IRB040  ANOP  ,
         ST    &REB,12(,R1)     .set REB address
         AGO   .IRB050
.*
.IRB045  ANOP  ,
         XC    12(4,R1),12(R1)  .zero REB address
.*
.IRB050  ANOP  ,
         AIF   ('&EVT' EQ '').ERR06
         AIF   ('&EVT'(1,1) EQ '(').IRB055
         MVC   16(4,R1),&EVT    .set EVT address
         AGO   .IRB060
.*
.IRB055  ANOP  ,
         ST    &EVT,16(,R1)     .set EVT address
.*
.IRB060  ANOP  ,
         AIF   ('&ECB' EQ '').ERR09
         AIF   ('&ECB'(1,1) EQ '(').IRB070
         LA    R0,&ECB          .get ECB
         ST    R0,20(,R1)       .set ECB address
         AGO   .IRB075
.*
.IRB070  ANOP  ,
         ST    &ECB,20(,R1)     .set ECB address
.*
.IRB075  ANOP  ,
         AIF   ('&SRE' EQ '').IRB077
         AIF   ('&SRE'(1,1) EQ '(').IRB076
         MVC   24(4,R1),&SRE    .set SRE address
         AGO   .IRB078
.*
.IRB076  ANOP  ,
         ST    &SRE,24(,R1)     .set SRE address
         AGO   .IRB078
.*
.IRB077  ANOP  ,
         XC    24(4,R1),24(R1)  .zero SRE address
.*
.IRB078  ANOP  ,
         AIF   ('&KEY' EQ '').ERR04
         AIF   ('&KEY' EQ 'PP').IRB080
         AIF   ('&KEY' NE 'SUPR').ERR04
         MVI   28(R1),X'00'     .set protect key=0
         AGO   .IRB090
.IRB080  ANOP  ,
         MVI   28(R1),X'80'     .set protect key=8
.*
.IRB090  ANOP  ,
         AIF   ('&CALLER' EQ '').ERR07
         AIF   ('&CALLER'(1,1) EQ '(').ERR08
         MVC   29(3,R1),=CL3'&CALLER' .set CALLER ID
.*
.IRB099  ANOP  ,
         L     R15,EVTIRBA      .ECFIRB EPA
         BALR  R14,R15          .schedule IRB service
         MEXIT ,
.*
.**      $XMPOST MF=L
.*
.LIST    ANOP  ,
&ZID     DS    0F
         DS    0XL32            .listform
         DC    A(0)             .+00 EP
         DC    A(0)             .+04 ASCB address
         DC    A(0)             .+08 TCB address
         DC    A(0)             .+12 REB address/zero
         DC    A(0)             .+16 EVT address
         DC    A(0)             .+20 ECB address
         DC    AL4(0)           .+24 SRE addreee/zero
         DC    AL1(0)           .+28 KEY
         DC    AL3(0)           .+29 CALLER-ID                     @02C
         MEXIT ,
.*
.**      $XMPOST DSECT=YES
.*
.ZIRB    ANOP  ,
ZIRB     DSECT ,
         DS    0XL32            MF=L size
ZIRBEP   DS    A                +00 EP
ZIRBASCB DS    A                +04 ASCB address
ZIRBTCB  DS    A                +08 TCB address
ZIRBREB  DS    A                +12 REB address/zero
ZIRBEVT  DS    A                +16 EVT address
ZIRBECB  DS    A                +20 ECB address
ZIRBSRE  DS    AL4              +24 SRE address/zero
ZIRBKEY  DS    AL1              +28 KEY
ZIRBCALR DS    AL3(0)           +29 CALLER-ID                      @03C
ZIRB@SZE EQU   *-ZIRB
         MEXIT ,
.*
.**      Macro Notes
.*
.ERR01   MNOTE 8,'*** $XMPOST invalid EP operand specified'
         MEXIT ,
.ERR02   MNOTE 8,'*** $XMPOST invalid ASCB operand specified'
         MEXIT ,
.ERR03   MNOTE 8,'*** $XMPOST invalid TCB operand specified'
         MEXIT ,
.ERR04   MNOTE 8,'*** $XMPOST invalid KEY operand specified'
         MEXIT ,
.ERR05   MNOTE 8,'*** $XMPOST invalid STATE operand specified'
         MEXIT ,
.ERR06   MNOTE 8,'*** $XMPOST invalid EVT operand specified'
         MEXIT ,
.ERR07   MNOTE 8,'*** $XMPOST invalid CALLER operand specified'
         MEXIT ,
.ERR08   MNOTE 8,'*** $XMPOST CALLER does not allow register notation'
         MEXIT ,
.ERR09   MNOTE 8,'*** $XMPOST invalid ECB operand specified'
         MEXIT ,
.ERR10   MNOTE 8,'*** $XMPOST invalid SRE operand specified'
         MEXIT ,
         MEND
